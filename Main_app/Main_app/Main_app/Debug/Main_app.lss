
Main_app.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000114e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000064  00800060  0000114e  000011e2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000025  008000c4  008000c4  00001246  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001246  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001278  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001a8  00000000  00000000  000012b8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000205d  00000000  00000000  00001460  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009ba  00000000  00000000  000034bd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000eca  00000000  00000000  00003e77  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000284  00000000  00000000  00004d44  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000623  00000000  00000000  00004fc8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000013c6  00000000  00000000  000055eb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000110  00000000  00000000  000069b1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
       4:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
       8:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
       c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      18:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      1c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      20:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__vector_8>
      24:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      2c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      38:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      4c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	00 40       	sbci	r16, 0x00	; 0
      56:	7a 10       	cpse	r7, r10
      58:	f3 5a       	subi	r31, 0xA3	; 163
      5a:	00 a0       	ldd	r0, Z+32	; 0x20
      5c:	72 4e       	sbci	r23, 0xE2	; 226
      5e:	18 09       	sbc	r17, r8
      60:	00 10       	cpse	r0, r0
      62:	a5 d4       	rcall	.+2378   	; 0x9ae <__divsf3_pse+0x14>
      64:	e8 00       	.word	0x00e8	; ????
      66:	00 e8       	ldi	r16, 0x80	; 128
      68:	76 48       	sbci	r23, 0x86	; 134
      6a:	17 00       	.word	0x0017	; ????
      6c:	00 e4       	ldi	r16, 0x40	; 64
      6e:	0b 54       	subi	r16, 0x4B	; 75
      70:	02 00       	.word	0x0002	; ????
      72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
      74:	9a 3b       	cpi	r25, 0xBA	; 186
      76:	00 00       	nop
      78:	00 e1       	ldi	r16, 0x10	; 16
      7a:	f5 05       	cpc	r31, r5
      7c:	00 00       	nop
      7e:	80 96       	adiw	r24, 0x20	; 32
      80:	98 00       	.word	0x0098	; ????
      82:	00 00       	nop
      84:	40 42       	sbci	r20, 0x20	; 32
      86:	0f 00       	.word	0x000f	; ????
      88:	00 00       	nop
      8a:	a0 86       	std	Z+8, r10	; 0x08
      8c:	01 00       	.word	0x0001	; ????
      8e:	00 00       	nop
      90:	10 27       	eor	r17, r16
      92:	00 00       	nop
      94:	00 00       	nop
      96:	e8 03       	fmulsu	r22, r16
      98:	00 00       	nop
      9a:	00 00       	nop
      9c:	64 00       	.word	0x0064	; ????
      9e:	00 00       	nop
      a0:	00 00       	nop
      a2:	0a 00       	.word	0x000a	; ????
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	01 00       	.word	0x0001	; ????
      aa:	00 00       	nop
      ac:	00 00       	nop
      ae:	2c 76       	andi	r18, 0x6C	; 108
      b0:	d8 88       	ldd	r13, Y+16	; 0x10
      b2:	dc 67       	ori	r29, 0x7C	; 124
      b4:	4f 08       	sbc	r4, r15
      b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
      b8:	c1 df       	rcall	.-126    	; 0x3c <__FUSE_REGION_LENGTH__+0x3a>
      ba:	ae 59       	subi	r26, 0x9E	; 158
      bc:	e1 b1       	in	r30, 0x01	; 1
      be:	b7 96       	adiw	r30, 0x27	; 39
      c0:	e5 e3       	ldi	r30, 0x35	; 53
      c2:	e4 53       	subi	r30, 0x34	; 52
      c4:	c6 3a       	cpi	r28, 0xA6	; 166
      c6:	e6 51       	subi	r30, 0x16	; 22
      c8:	99 76       	andi	r25, 0x69	; 105
      ca:	96 e8       	ldi	r25, 0x86	; 134
      cc:	e6 c2       	rjmp	.+1484   	; 0x69a <main+0xb0>
      ce:	84 26       	eor	r8, r20
      d0:	eb 89       	ldd	r30, Y+19	; 0x13
      d2:	8c 9b       	sbis	0x11, 4	; 17
      d4:	62 ed       	ldi	r22, 0xD2	; 210
      d6:	40 7c       	andi	r20, 0xC0	; 192
      d8:	6f fc       	.word	0xfc6f	; ????
      da:	ef bc       	out	0x2f, r14	; 47
      dc:	9c 9f       	mul	r25, r28
      de:	40 f2       	brcs	.-112    	; 0x70 <__trampolines_end+0x1c>
      e0:	ba a5       	ldd	r27, Y+42	; 0x2a
      e2:	6f a5       	ldd	r22, Y+47	; 0x2f
      e4:	f4 90       	lpm	r15, Z
      e6:	05 5a       	subi	r16, 0xA5	; 165
      e8:	2a f7       	brpl	.-54     	; 0xb4 <__trampolines_end+0x60>
      ea:	5c 93       	st	X, r21
      ec:	6b 6c       	ori	r22, 0xCB	; 203
      ee:	f9 67       	ori	r31, 0x79	; 121
      f0:	6d c1       	rjmp	.+730    	; 0x3cc <rotate_anticlockwise+0x26>
      f2:	1b fc       	.word	0xfc1b	; ????
      f4:	e0 e4       	ldi	r30, 0x40	; 64
      f6:	0d 47       	sbci	r16, 0x7D	; 125
      f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
      fa:	20 e6       	ldi	r18, 0x60	; 96
      fc:	b5 00       	.word	0x00b5	; ????
      fe:	d0 ed       	ldi	r29, 0xD0	; 208
     100:	90 2e       	mov	r9, r16
     102:	03 00       	.word	0x0003	; ????
     104:	94 35       	cpi	r25, 0x54	; 84
     106:	77 05       	cpc	r23, r7
     108:	00 80       	ld	r0, Z
     10a:	84 1e       	adc	r8, r20
     10c:	08 00       	.word	0x0008	; ????
     10e:	00 20       	and	r0, r0
     110:	4e 0a       	sbc	r4, r30
     112:	00 00       	nop
     114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
     116:	0c 33       	cpi	r16, 0x3C	; 60
     118:	33 33       	cpi	r19, 0x33	; 51
     11a:	33 0f       	add	r19, r19
     11c:	98 6e       	ori	r25, 0xE8	; 232
     11e:	12 83       	std	Z+2, r17	; 0x02
     120:	11 41       	sbci	r17, 0x11	; 17
     122:	ef 8d       	ldd	r30, Y+31	; 0x1f
     124:	21 14       	cp	r2, r1
     126:	89 3b       	cpi	r24, 0xB9	; 185
     128:	e6 55       	subi	r30, 0x56	; 86
     12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
     12c:	fe e6       	ldi	r31, 0x6E	; 110
     12e:	db 18       	sub	r13, r11
     130:	d1 84       	ldd	r13, Z+9	; 0x09
     132:	4b 38       	cpi	r20, 0x8B	; 139
     134:	1b f7       	brvc	.-58     	; 0xfc <__trampolines_end+0xa8>
     136:	7c 1d       	adc	r23, r12
     138:	90 1d       	adc	r25, r0
     13a:	a4 bb       	out	0x14, r26	; 20
     13c:	e4 24       	eor	r14, r4
     13e:	20 32       	cpi	r18, 0x20	; 32
     140:	84 72       	andi	r24, 0x24	; 36
     142:	5e 22       	and	r5, r30
     144:	81 00       	.word	0x0081	; ????
     146:	c9 f1       	breq	.+114    	; 0x1ba <lcd_write+0x26>
     148:	24 ec       	ldi	r18, 0xC4	; 196
     14a:	a1 e5       	ldi	r26, 0x51	; 81
     14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
     14e:	11 24       	eor	r1, r1
     150:	1f be       	out	0x3f, r1	; 63
     152:	cf e5       	ldi	r28, 0x5F	; 95
     154:	d4 e0       	ldi	r29, 0x04	; 4
     156:	de bf       	out	0x3e, r29	; 62
     158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
     15a:	10 e0       	ldi	r17, 0x00	; 0
     15c:	a0 e6       	ldi	r26, 0x60	; 96
     15e:	b0 e0       	ldi	r27, 0x00	; 0
     160:	ee e4       	ldi	r30, 0x4E	; 78
     162:	f1 e1       	ldi	r31, 0x11	; 17
     164:	02 c0       	rjmp	.+4      	; 0x16a <__do_copy_data+0x10>
     166:	05 90       	lpm	r0, Z+
     168:	0d 92       	st	X+, r0
     16a:	a4 3c       	cpi	r26, 0xC4	; 196
     16c:	b1 07       	cpc	r27, r17
     16e:	d9 f7       	brne	.-10     	; 0x166 <__do_copy_data+0xc>

00000170 <__do_clear_bss>:
     170:	20 e0       	ldi	r18, 0x00	; 0
     172:	a4 ec       	ldi	r26, 0xC4	; 196
     174:	b0 e0       	ldi	r27, 0x00	; 0
     176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
     178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
     17a:	a9 3e       	cpi	r26, 0xE9	; 233
     17c:	b2 07       	cpc	r27, r18
     17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
     180:	0e 94 f5 02 	call	0x5ea	; 0x5ea <main>
     184:	0c 94 a5 08 	jmp	0x114a	; 0x114a <_exit>

00000188 <__bad_interrupt>:
     188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <toggle_e>:

void save_distance(float distance, int user){
	
	int pozicija = 100 + user;
	
	eeprom_write_float((float *) pozicija, distance); /* writing distance value to nth position in eeprom */
     18c:	ae 9a       	sbi	0x15, 6	; 21
     18e:	00 c0       	rjmp	.+0      	; 0x190 <toggle_e+0x4>
     190:	ae 98       	cbi	0x15, 6	; 21
     192:	08 95       	ret

00000194 <lcd_write>:
     194:	cf 93       	push	r28
     196:	df 93       	push	r29
     198:	d8 2f       	mov	r29, r24
     19a:	66 23       	and	r22, r22
     19c:	11 f0       	breq	.+4      	; 0x1a2 <lcd_write+0xe>
     19e:	a8 9a       	sbi	0x15, 0	; 21
     1a0:	01 c0       	rjmp	.+2      	; 0x1a4 <lcd_write+0x10>
     1a2:	a8 98       	cbi	0x15, 0	; 21
     1a4:	a9 98       	cbi	0x15, 1	; 21
     1a6:	87 b3       	in	r24, 0x17	; 23
     1a8:	8f 60       	ori	r24, 0x0F	; 15
     1aa:	87 bb       	out	0x17, r24	; 23
     1ac:	c8 b3       	in	r28, 0x18	; 24
     1ae:	c0 7f       	andi	r28, 0xF0	; 240
     1b0:	8d 2f       	mov	r24, r29
     1b2:	82 95       	swap	r24
     1b4:	8f 70       	andi	r24, 0x0F	; 15
     1b6:	8c 2b       	or	r24, r28
     1b8:	88 bb       	out	0x18, r24	; 24
     1ba:	0e 94 c6 00 	call	0x18c	; 0x18c <toggle_e>
     1be:	df 70       	andi	r29, 0x0F	; 15
     1c0:	dc 2b       	or	r29, r28
     1c2:	d8 bb       	out	0x18, r29	; 24
     1c4:	0e 94 c6 00 	call	0x18c	; 0x18c <toggle_e>
     1c8:	cf 60       	ori	r28, 0x0F	; 15
     1ca:	c8 bb       	out	0x18, r28	; 24
     1cc:	df 91       	pop	r29
     1ce:	cf 91       	pop	r28
     1d0:	08 95       	ret

000001d2 <lcd_read>:
     1d2:	88 23       	and	r24, r24
     1d4:	11 f0       	breq	.+4      	; 0x1da <lcd_read+0x8>
     1d6:	a8 9a       	sbi	0x15, 0	; 21
     1d8:	01 c0       	rjmp	.+2      	; 0x1dc <lcd_read+0xa>
     1da:	a8 98       	cbi	0x15, 0	; 21
     1dc:	a9 9a       	sbi	0x15, 1	; 21
     1de:	87 b3       	in	r24, 0x17	; 23
     1e0:	80 7f       	andi	r24, 0xF0	; 240
     1e2:	87 bb       	out	0x17, r24	; 23
     1e4:	ae 9a       	sbi	0x15, 6	; 21
     1e6:	00 c0       	rjmp	.+0      	; 0x1e8 <lcd_read+0x16>
     1e8:	96 b3       	in	r25, 0x16	; 22
     1ea:	ae 98       	cbi	0x15, 6	; 21
     1ec:	00 c0       	rjmp	.+0      	; 0x1ee <lcd_read+0x1c>
     1ee:	ae 9a       	sbi	0x15, 6	; 21
     1f0:	00 c0       	rjmp	.+0      	; 0x1f2 <lcd_read+0x20>
     1f2:	26 b3       	in	r18, 0x16	; 22
     1f4:	2f 70       	andi	r18, 0x0F	; 15
     1f6:	89 2f       	mov	r24, r25
     1f8:	82 95       	swap	r24
     1fa:	80 7f       	andi	r24, 0xF0	; 240
     1fc:	ae 98       	cbi	0x15, 6	; 21
     1fe:	82 2b       	or	r24, r18
     200:	08 95       	ret

00000202 <lcd_waitbusy>:
     202:	80 e0       	ldi	r24, 0x00	; 0
     204:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <lcd_read>
     208:	88 23       	and	r24, r24
     20a:	dc f3       	brlt	.-10     	; 0x202 <lcd_waitbusy>
     20c:	83 e0       	ldi	r24, 0x03	; 3
     20e:	90 e0       	ldi	r25, 0x00	; 0
     210:	01 97       	sbiw	r24, 0x01	; 1
     212:	f1 f7       	brne	.-4      	; 0x210 <lcd_waitbusy+0xe>
     214:	80 e0       	ldi	r24, 0x00	; 0
     216:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <lcd_read>
     21a:	08 95       	ret

0000021c <lcd_command>:
     21c:	cf 93       	push	r28
     21e:	c8 2f       	mov	r28, r24
     220:	0e 94 01 01 	call	0x202	; 0x202 <lcd_waitbusy>
     224:	60 e0       	ldi	r22, 0x00	; 0
     226:	8c 2f       	mov	r24, r28
     228:	0e 94 ca 00 	call	0x194	; 0x194 <lcd_write>
     22c:	cf 91       	pop	r28
     22e:	08 95       	ret

00000230 <lcd_clrscr>:
     230:	81 e0       	ldi	r24, 0x01	; 1
     232:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_command>
     236:	08 95       	ret

00000238 <lcd_putc>:
     238:	cf 93       	push	r28
     23a:	c8 2f       	mov	r28, r24
     23c:	0e 94 01 01 	call	0x202	; 0x202 <lcd_waitbusy>
     240:	ca 30       	cpi	r28, 0x0A	; 10
     242:	49 f4       	brne	.+18     	; 0x256 <lcd_putc+0x1e>
     244:	80 34       	cpi	r24, 0x40	; 64
     246:	10 f0       	brcs	.+4      	; 0x24c <lcd_putc+0x14>
     248:	80 e0       	ldi	r24, 0x00	; 0
     24a:	01 c0       	rjmp	.+2      	; 0x24e <lcd_putc+0x16>
     24c:	80 e4       	ldi	r24, 0x40	; 64
     24e:	80 58       	subi	r24, 0x80	; 128
     250:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_command>
     254:	04 c0       	rjmp	.+8      	; 0x25e <lcd_putc+0x26>
     256:	61 e0       	ldi	r22, 0x01	; 1
     258:	8c 2f       	mov	r24, r28
     25a:	0e 94 ca 00 	call	0x194	; 0x194 <lcd_write>
     25e:	cf 91       	pop	r28
     260:	08 95       	ret

00000262 <lcd_puts>:
     262:	cf 93       	push	r28
     264:	df 93       	push	r29
     266:	ec 01       	movw	r28, r24
     268:	21 96       	adiw	r28, 0x01	; 1
     26a:	fc 01       	movw	r30, r24
     26c:	80 81       	ld	r24, Z
     26e:	88 23       	and	r24, r24
     270:	29 f0       	breq	.+10     	; 0x27c <lcd_puts+0x1a>
     272:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_putc>
     276:	89 91       	ld	r24, Y+
     278:	81 11       	cpse	r24, r1
     27a:	fb cf       	rjmp	.-10     	; 0x272 <lcd_puts+0x10>
     27c:	df 91       	pop	r29
     27e:	cf 91       	pop	r28
     280:	08 95       	ret

00000282 <lcd_init>:
     282:	1f 93       	push	r17
     284:	cf 93       	push	r28
     286:	df 93       	push	r29
     288:	18 2f       	mov	r17, r24
     28a:	87 b3       	in	r24, 0x17	; 23
     28c:	8f 60       	ori	r24, 0x0F	; 15
     28e:	87 bb       	out	0x17, r24	; 23
     290:	a0 9a       	sbi	0x14, 0	; 20
     292:	a1 9a       	sbi	0x14, 1	; 20
     294:	a6 9a       	sbi	0x14, 6	; 20
     296:	80 e3       	ldi	r24, 0x30	; 48
     298:	93 e7       	ldi	r25, 0x73	; 115
     29a:	01 97       	sbiw	r24, 0x01	; 1
     29c:	f1 f7       	brne	.-4      	; 0x29a <lcd_init+0x18>
     29e:	c1 9a       	sbi	0x18, 1	; 24
     2a0:	c0 9a       	sbi	0x18, 0	; 24
     2a2:	0e 94 c6 00 	call	0x18c	; 0x18c <toggle_e>
     2a6:	80 ef       	ldi	r24, 0xF0	; 240
     2a8:	93 e2       	ldi	r25, 0x23	; 35
     2aa:	01 97       	sbiw	r24, 0x01	; 1
     2ac:	f1 f7       	brne	.-4      	; 0x2aa <lcd_init+0x28>
     2ae:	0e 94 c6 00 	call	0x18c	; 0x18c <toggle_e>
     2b2:	c5 e7       	ldi	r28, 0x75	; 117
     2b4:	d0 e0       	ldi	r29, 0x00	; 0
     2b6:	ce 01       	movw	r24, r28
     2b8:	01 97       	sbiw	r24, 0x01	; 1
     2ba:	f1 f7       	brne	.-4      	; 0x2b8 <lcd_init+0x36>
     2bc:	0e 94 c6 00 	call	0x18c	; 0x18c <toggle_e>
     2c0:	ce 01       	movw	r24, r28
     2c2:	01 97       	sbiw	r24, 0x01	; 1
     2c4:	f1 f7       	brne	.-4      	; 0x2c2 <lcd_init+0x40>
     2c6:	c0 98       	cbi	0x18, 0	; 24
     2c8:	0e 94 c6 00 	call	0x18c	; 0x18c <toggle_e>
     2cc:	21 97       	sbiw	r28, 0x01	; 1
     2ce:	f1 f7       	brne	.-4      	; 0x2cc <lcd_init+0x4a>
     2d0:	88 e2       	ldi	r24, 0x28	; 40
     2d2:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_command>
     2d6:	88 e0       	ldi	r24, 0x08	; 8
     2d8:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_command>
     2dc:	0e 94 18 01 	call	0x230	; 0x230 <lcd_clrscr>
     2e0:	86 e0       	ldi	r24, 0x06	; 6
     2e2:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_command>
     2e6:	81 2f       	mov	r24, r17
     2e8:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_command>
     2ec:	df 91       	pop	r29
     2ee:	cf 91       	pop	r28
     2f0:	1f 91       	pop	r17
     2f2:	08 95       	ret

000002f4 <rotate_clockwise>:
     2f4:	80 e7       	ldi	r24, 0x70	; 112
     2f6:	88 bb       	out	0x18, r24	; 24
     2f8:	88 b3       	in	r24, 0x18	; 24
     2fa:	80 95       	com	r24
     2fc:	88 bb       	out	0x18, r24	; 24
     2fe:	8f ef       	ldi	r24, 0xFF	; 255
     300:	93 e2       	ldi	r25, 0x23	; 35
     302:	01 97       	sbiw	r24, 0x01	; 1
     304:	f1 f7       	brne	.-4      	; 0x302 <rotate_clockwise+0xe>
     306:	00 c0       	rjmp	.+0      	; 0x308 <rotate_clockwise+0x14>
     308:	00 00       	nop
     30a:	80 e3       	ldi	r24, 0x30	; 48
     30c:	88 bb       	out	0x18, r24	; 24
     30e:	88 b3       	in	r24, 0x18	; 24
     310:	80 95       	com	r24
     312:	88 bb       	out	0x18, r24	; 24
     314:	8f ef       	ldi	r24, 0xFF	; 255
     316:	93 e2       	ldi	r25, 0x23	; 35
     318:	01 97       	sbiw	r24, 0x01	; 1
     31a:	f1 f7       	brne	.-4      	; 0x318 <rotate_clockwise+0x24>
     31c:	00 c0       	rjmp	.+0      	; 0x31e <rotate_clockwise+0x2a>
     31e:	00 00       	nop
     320:	80 eb       	ldi	r24, 0xB0	; 176
     322:	88 bb       	out	0x18, r24	; 24
     324:	88 b3       	in	r24, 0x18	; 24
     326:	80 95       	com	r24
     328:	88 bb       	out	0x18, r24	; 24
     32a:	8f ef       	ldi	r24, 0xFF	; 255
     32c:	93 e2       	ldi	r25, 0x23	; 35
     32e:	01 97       	sbiw	r24, 0x01	; 1
     330:	f1 f7       	brne	.-4      	; 0x32e <rotate_clockwise+0x3a>
     332:	00 c0       	rjmp	.+0      	; 0x334 <rotate_clockwise+0x40>
     334:	00 00       	nop
     336:	80 e9       	ldi	r24, 0x90	; 144
     338:	88 bb       	out	0x18, r24	; 24
     33a:	88 b3       	in	r24, 0x18	; 24
     33c:	80 95       	com	r24
     33e:	88 bb       	out	0x18, r24	; 24
     340:	8f ef       	ldi	r24, 0xFF	; 255
     342:	93 e2       	ldi	r25, 0x23	; 35
     344:	01 97       	sbiw	r24, 0x01	; 1
     346:	f1 f7       	brne	.-4      	; 0x344 <rotate_clockwise+0x50>
     348:	00 c0       	rjmp	.+0      	; 0x34a <rotate_clockwise+0x56>
     34a:	00 00       	nop
     34c:	80 ed       	ldi	r24, 0xD0	; 208
     34e:	88 bb       	out	0x18, r24	; 24
     350:	88 b3       	in	r24, 0x18	; 24
     352:	80 95       	com	r24
     354:	88 bb       	out	0x18, r24	; 24
     356:	8f ef       	ldi	r24, 0xFF	; 255
     358:	93 e2       	ldi	r25, 0x23	; 35
     35a:	01 97       	sbiw	r24, 0x01	; 1
     35c:	f1 f7       	brne	.-4      	; 0x35a <rotate_clockwise+0x66>
     35e:	00 c0       	rjmp	.+0      	; 0x360 <rotate_clockwise+0x6c>
     360:	00 00       	nop
     362:	80 ec       	ldi	r24, 0xC0	; 192
     364:	88 bb       	out	0x18, r24	; 24
     366:	88 b3       	in	r24, 0x18	; 24
     368:	80 95       	com	r24
     36a:	88 bb       	out	0x18, r24	; 24
     36c:	8f ef       	ldi	r24, 0xFF	; 255
     36e:	93 e2       	ldi	r25, 0x23	; 35
     370:	01 97       	sbiw	r24, 0x01	; 1
     372:	f1 f7       	brne	.-4      	; 0x370 <rotate_clockwise+0x7c>
     374:	00 c0       	rjmp	.+0      	; 0x376 <rotate_clockwise+0x82>
     376:	00 00       	nop
     378:	80 ee       	ldi	r24, 0xE0	; 224
     37a:	88 bb       	out	0x18, r24	; 24
     37c:	88 b3       	in	r24, 0x18	; 24
     37e:	80 95       	com	r24
     380:	88 bb       	out	0x18, r24	; 24
     382:	8f ef       	ldi	r24, 0xFF	; 255
     384:	93 e2       	ldi	r25, 0x23	; 35
     386:	01 97       	sbiw	r24, 0x01	; 1
     388:	f1 f7       	brne	.-4      	; 0x386 <rotate_clockwise+0x92>
     38a:	00 c0       	rjmp	.+0      	; 0x38c <rotate_clockwise+0x98>
     38c:	00 00       	nop
     38e:	80 e6       	ldi	r24, 0x60	; 96
     390:	88 bb       	out	0x18, r24	; 24
     392:	88 b3       	in	r24, 0x18	; 24
     394:	80 95       	com	r24
     396:	88 bb       	out	0x18, r24	; 24
     398:	8f ef       	ldi	r24, 0xFF	; 255
     39a:	93 e2       	ldi	r25, 0x23	; 35
     39c:	01 97       	sbiw	r24, 0x01	; 1
     39e:	f1 f7       	brne	.-4      	; 0x39c <rotate_clockwise+0xa8>
     3a0:	00 c0       	rjmp	.+0      	; 0x3a2 <rotate_clockwise+0xae>
     3a2:	00 00       	nop
     3a4:	08 95       	ret

000003a6 <rotate_anticlockwise>:
     3a6:	80 e6       	ldi	r24, 0x60	; 96
     3a8:	88 bb       	out	0x18, r24	; 24
     3aa:	88 b3       	in	r24, 0x18	; 24
     3ac:	80 95       	com	r24
     3ae:	88 bb       	out	0x18, r24	; 24
     3b0:	8f ef       	ldi	r24, 0xFF	; 255
     3b2:	93 e2       	ldi	r25, 0x23	; 35
     3b4:	01 97       	sbiw	r24, 0x01	; 1
     3b6:	f1 f7       	brne	.-4      	; 0x3b4 <rotate_anticlockwise+0xe>
     3b8:	00 c0       	rjmp	.+0      	; 0x3ba <rotate_anticlockwise+0x14>
     3ba:	00 00       	nop
     3bc:	80 ee       	ldi	r24, 0xE0	; 224
     3be:	88 bb       	out	0x18, r24	; 24
     3c0:	88 b3       	in	r24, 0x18	; 24
     3c2:	80 95       	com	r24
     3c4:	88 bb       	out	0x18, r24	; 24
     3c6:	8f ef       	ldi	r24, 0xFF	; 255
     3c8:	93 e2       	ldi	r25, 0x23	; 35
     3ca:	01 97       	sbiw	r24, 0x01	; 1
     3cc:	f1 f7       	brne	.-4      	; 0x3ca <rotate_anticlockwise+0x24>
     3ce:	00 c0       	rjmp	.+0      	; 0x3d0 <rotate_anticlockwise+0x2a>
     3d0:	00 00       	nop
     3d2:	80 ec       	ldi	r24, 0xC0	; 192
     3d4:	88 bb       	out	0x18, r24	; 24
     3d6:	88 b3       	in	r24, 0x18	; 24
     3d8:	80 95       	com	r24
     3da:	88 bb       	out	0x18, r24	; 24
     3dc:	8f ef       	ldi	r24, 0xFF	; 255
     3de:	93 e2       	ldi	r25, 0x23	; 35
     3e0:	01 97       	sbiw	r24, 0x01	; 1
     3e2:	f1 f7       	brne	.-4      	; 0x3e0 <rotate_anticlockwise+0x3a>
     3e4:	00 c0       	rjmp	.+0      	; 0x3e6 <rotate_anticlockwise+0x40>
     3e6:	00 00       	nop
     3e8:	80 ed       	ldi	r24, 0xD0	; 208
     3ea:	88 bb       	out	0x18, r24	; 24
     3ec:	88 b3       	in	r24, 0x18	; 24
     3ee:	80 95       	com	r24
     3f0:	88 bb       	out	0x18, r24	; 24
     3f2:	8f ef       	ldi	r24, 0xFF	; 255
     3f4:	93 e2       	ldi	r25, 0x23	; 35
     3f6:	01 97       	sbiw	r24, 0x01	; 1
     3f8:	f1 f7       	brne	.-4      	; 0x3f6 <rotate_anticlockwise+0x50>
     3fa:	00 c0       	rjmp	.+0      	; 0x3fc <rotate_anticlockwise+0x56>
     3fc:	00 00       	nop
     3fe:	80 e9       	ldi	r24, 0x90	; 144
     400:	88 bb       	out	0x18, r24	; 24
     402:	88 b3       	in	r24, 0x18	; 24
     404:	80 95       	com	r24
     406:	88 bb       	out	0x18, r24	; 24
     408:	8f ef       	ldi	r24, 0xFF	; 255
     40a:	93 e2       	ldi	r25, 0x23	; 35
     40c:	01 97       	sbiw	r24, 0x01	; 1
     40e:	f1 f7       	brne	.-4      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
     410:	00 c0       	rjmp	.+0      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
     412:	00 00       	nop
     414:	80 eb       	ldi	r24, 0xB0	; 176
     416:	88 bb       	out	0x18, r24	; 24
     418:	88 b3       	in	r24, 0x18	; 24
     41a:	80 95       	com	r24
     41c:	88 bb       	out	0x18, r24	; 24
     41e:	8f ef       	ldi	r24, 0xFF	; 255
     420:	93 e2       	ldi	r25, 0x23	; 35
     422:	01 97       	sbiw	r24, 0x01	; 1
     424:	f1 f7       	brne	.-4      	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     426:	00 c0       	rjmp	.+0      	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
     428:	00 00       	nop
     42a:	80 e3       	ldi	r24, 0x30	; 48
     42c:	88 bb       	out	0x18, r24	; 24
     42e:	88 b3       	in	r24, 0x18	; 24
     430:	80 95       	com	r24
     432:	88 bb       	out	0x18, r24	; 24
     434:	8f ef       	ldi	r24, 0xFF	; 255
     436:	93 e2       	ldi	r25, 0x23	; 35
     438:	01 97       	sbiw	r24, 0x01	; 1
     43a:	f1 f7       	brne	.-4      	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
     43c:	00 c0       	rjmp	.+0      	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     43e:	00 00       	nop
     440:	80 e7       	ldi	r24, 0x70	; 112
     442:	88 bb       	out	0x18, r24	; 24
     444:	88 b3       	in	r24, 0x18	; 24
     446:	80 95       	com	r24
     448:	88 bb       	out	0x18, r24	; 24
     44a:	8f ef       	ldi	r24, 0xFF	; 255
     44c:	93 e2       	ldi	r25, 0x23	; 35
     44e:	01 97       	sbiw	r24, 0x01	; 1
     450:	f1 f7       	brne	.-4      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     452:	00 c0       	rjmp	.+0      	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
     454:	00 00       	nop
     456:	08 95       	ret

00000458 <rotate_motors>:
     458:	0f 93       	push	r16
     45a:	1f 93       	push	r17
     45c:	cf 93       	push	r28
     45e:	df 93       	push	r29
     460:	ec 01       	movw	r28, r24
     462:	8a 01       	movw	r16, r20
     464:	86 17       	cp	r24, r22
     466:	97 07       	cpc	r25, r23
     468:	14 f4       	brge	.+4      	; 0x46e <__stack+0xf>
     46a:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <rotate_clockwise>
     46e:	0c 17       	cp	r16, r28
     470:	1d 07       	cpc	r17, r29
     472:	14 f4       	brge	.+4      	; 0x478 <__stack+0x19>
     474:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <rotate_anticlockwise>
     478:	df 91       	pop	r29
     47a:	cf 91       	pop	r28
     47c:	1f 91       	pop	r17
     47e:	0f 91       	pop	r16
     480:	08 95       	ret

00000482 <ADC_Init>:
     482:	1a ba       	out	0x1a, r1	; 26
     484:	87 e8       	ldi	r24, 0x87	; 135
     486:	86 b9       	out	0x06, r24	; 6
     488:	80 e4       	ldi	r24, 0x40	; 64
     48a:	87 b9       	out	0x07, r24	; 7
     48c:	08 95       	ret

0000048e <ADC_Read>:
     48e:	97 b1       	in	r25, 0x07	; 7
     490:	8f 70       	andi	r24, 0x0F	; 15
     492:	98 2b       	or	r25, r24
     494:	97 b9       	out	0x07, r25	; 7
     496:	36 9a       	sbi	0x06, 6	; 6
     498:	34 9b       	sbis	0x06, 4	; 6
     49a:	fe cf       	rjmp	.-4      	; 0x498 <ADC_Read+0xa>
     49c:	88 e1       	ldi	r24, 0x18	; 24
     49e:	8a 95       	dec	r24
     4a0:	f1 f7       	brne	.-4      	; 0x49e <ADC_Read+0x10>
     4a2:	00 c0       	rjmp	.+0      	; 0x4a4 <ADC_Read+0x16>
     4a4:	24 b1       	in	r18, 0x04	; 4
     4a6:	85 b1       	in	r24, 0x05	; 5
     4a8:	90 e0       	ldi	r25, 0x00	; 0
     4aa:	98 2f       	mov	r25, r24
     4ac:	88 27       	eor	r24, r24
     4ae:	82 0f       	add	r24, r18
     4b0:	91 1d       	adc	r25, r1
     4b2:	08 95       	ret

000004b4 <SENSOR_Init>:
     4b4:	80 e2       	ldi	r24, 0x20	; 32
     4b6:	81 bb       	out	0x11, r24	; 17
     4b8:	80 e4       	ldi	r24, 0x40	; 64
     4ba:	82 bb       	out	0x12, r24	; 18
     4bc:	78 94       	sei
     4be:	84 e0       	ldi	r24, 0x04	; 4
     4c0:	89 bf       	out	0x39, r24	; 57
     4c2:	1f bc       	out	0x2f, r1	; 47
     4c4:	08 95       	ret

000004c6 <__vector_8>:
     4c6:	1f 92       	push	r1
     4c8:	0f 92       	push	r0
     4ca:	0f b6       	in	r0, 0x3f	; 63
     4cc:	0f 92       	push	r0
     4ce:	11 24       	eor	r1, r1
     4d0:	8f 93       	push	r24
     4d2:	9f 93       	push	r25
     4d4:	80 91 cc 00 	lds	r24, 0x00CC	; 0x8000cc <TimerOverflow>
     4d8:	90 91 cd 00 	lds	r25, 0x00CD	; 0x8000cd <TimerOverflow+0x1>
     4dc:	01 96       	adiw	r24, 0x01	; 1
     4de:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <TimerOverflow+0x1>
     4e2:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <TimerOverflow>
     4e6:	9f 91       	pop	r25
     4e8:	8f 91       	pop	r24
     4ea:	0f 90       	pop	r0
     4ec:	0f be       	out	0x3f, r0	; 63
     4ee:	0f 90       	pop	r0
     4f0:	1f 90       	pop	r1
     4f2:	18 95       	reti

000004f4 <mesure_distance>:
     4f4:	95 9a       	sbi	0x12, 5	; 18
     4f6:	88 e1       	ldi	r24, 0x18	; 24
     4f8:	8a 95       	dec	r24
     4fa:	f1 f7       	brne	.-4      	; 0x4f8 <mesure_distance+0x4>
     4fc:	00 c0       	rjmp	.+0      	; 0x4fe <mesure_distance+0xa>
     4fe:	95 98       	cbi	0x12, 5	; 18
     500:	1d bc       	out	0x2d, r1	; 45
     502:	1c bc       	out	0x2c, r1	; 44
     504:	81 e4       	ldi	r24, 0x41	; 65
     506:	8e bd       	out	0x2e, r24	; 46
     508:	80 e2       	ldi	r24, 0x20	; 32
     50a:	88 bf       	out	0x38, r24	; 56
     50c:	84 e0       	ldi	r24, 0x04	; 4
     50e:	88 bf       	out	0x38, r24	; 56
     510:	08 b6       	in	r0, 0x38	; 56
     512:	05 fe       	sbrs	r0, 5
     514:	fd cf       	rjmp	.-6      	; 0x510 <mesure_distance+0x1c>
     516:	1d bc       	out	0x2d, r1	; 45
     518:	1c bc       	out	0x2c, r1	; 44
     51a:	81 e0       	ldi	r24, 0x01	; 1
     51c:	8e bd       	out	0x2e, r24	; 46
     51e:	80 e2       	ldi	r24, 0x20	; 32
     520:	88 bf       	out	0x38, r24	; 56
     522:	84 e0       	ldi	r24, 0x04	; 4
     524:	88 bf       	out	0x38, r24	; 56
     526:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <TimerOverflow+0x1>
     52a:	10 92 cc 00 	sts	0x00CC, r1	; 0x8000cc <TimerOverflow>
     52e:	08 b6       	in	r0, 0x38	; 56
     530:	05 fe       	sbrs	r0, 5
     532:	fd cf       	rjmp	.-6      	; 0x52e <mesure_distance+0x3a>
     534:	66 b5       	in	r22, 0x26	; 38
     536:	77 b5       	in	r23, 0x27	; 39
     538:	80 e0       	ldi	r24, 0x00	; 0
     53a:	90 e0       	ldi	r25, 0x00	; 0
     53c:	60 93 e5 00 	sts	0x00E5, r22	; 0x8000e5 <count>
     540:	70 93 e6 00 	sts	0x00E6, r23	; 0x8000e6 <count+0x1>
     544:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <count+0x2>
     548:	90 93 e8 00 	sts	0x00E8, r25	; 0x8000e8 <count+0x3>
     54c:	0e 94 60 05 	call	0xac0	; 0xac0 <__floatsisf>
     550:	23 ec       	ldi	r18, 0xC3	; 195
     552:	35 e5       	ldi	r19, 0x55	; 85
     554:	46 ed       	ldi	r20, 0xD6	; 214
     556:	53 e4       	ldi	r21, 0x43	; 67
     558:	0e 94 b6 04 	call	0x96c	; 0x96c <__divsf3>
     55c:	60 93 e1 00 	sts	0x00E1, r22	; 0x8000e1 <distance>
     560:	70 93 e2 00 	sts	0x00E2, r23	; 0x8000e2 <distance+0x1>
     564:	80 93 e3 00 	sts	0x00E3, r24	; 0x8000e3 <distance+0x2>
     568:	90 93 e4 00 	sts	0x00E4, r25	; 0x8000e4 <distance+0x3>
     56c:	08 95       	ret

0000056e <distance_to_string>:
     56e:	0f 93       	push	r16
     570:	1f 93       	push	r17
     572:	02 ed       	ldi	r16, 0xD2	; 210
     574:	10 e0       	ldi	r17, 0x00	; 0
     576:	22 e0       	ldi	r18, 0x02	; 2
     578:	42 e0       	ldi	r20, 0x02	; 2
     57a:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <dtostrf>
     57e:	0e 94 18 01 	call	0x230	; 0x230 <lcd_clrscr>
     582:	c8 01       	movw	r24, r16
     584:	0e 94 31 01 	call	0x262	; 0x262 <lcd_puts>
     588:	1f 91       	pop	r17
     58a:	0f 91       	pop	r16
     58c:	08 95       	ret

0000058e <lcd_main_init>:
     58e:	80 e8       	ldi	r24, 0x80	; 128
     590:	84 bb       	out	0x14, r24	; 20
     592:	81 e2       	ldi	r24, 0x21	; 33
     594:	8f bd       	out	0x2f, r24	; 47
     596:	8a e0       	ldi	r24, 0x0A	; 10
     598:	8e bd       	out	0x2e, r24	; 46
     59a:	8e e0       	ldi	r24, 0x0E	; 14
     59c:	90 e0       	ldi	r25, 0x00	; 0
     59e:	99 bd       	out	0x29, r25	; 41
     5a0:	88 bd       	out	0x28, r24	; 40
     5a2:	8c e0       	ldi	r24, 0x0C	; 12
     5a4:	0e 94 41 01 	call	0x282	; 0x282 <lcd_init>
     5a8:	81 e0       	ldi	r24, 0x01	; 1
     5aa:	81 bb       	out	0x11, r24	; 17
     5ac:	08 95       	ret

000005ae <read_distance>:

int read_distance(int user){
	
	int pozicija = 100 + user;
	
	distance_red = eeprom_read_float((float *) pozicija);
     5ae:	8c 59       	subi	r24, 0x9C	; 156
     5b0:	9f 4f       	sbci	r25, 0xFF	; 255
     5b2:	0e 94 3e 08 	call	0x107c	; 0x107c <eeprom_read_dword>
     5b6:	60 93 ce 00 	sts	0x00CE, r22	; 0x8000ce <distance_red>
     5ba:	70 93 cf 00 	sts	0x00CF, r23	; 0x8000cf <distance_red+0x1>
     5be:	80 93 d0 00 	sts	0x00D0, r24	; 0x8000d0 <distance_red+0x2>
     5c2:	90 93 d1 00 	sts	0x00D1, r25	; 0x8000d1 <distance_red+0x3>
	
	return distance_red;
     5c6:	0e 94 28 05 	call	0xa50	; 0xa50 <__fixsfsi>
}
     5ca:	cb 01       	movw	r24, r22
     5cc:	08 95       	ret

000005ce <show_distance>:

void show_distance(){
	
	
	distance_to_string(mesure_distance());
     5ce:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <mesure_distance>
     5d2:	0e 94 b7 02 	call	0x56e	; 0x56e <distance_to_string>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     5d6:	2f ef       	ldi	r18, 0xFF	; 255
     5d8:	8f e7       	ldi	r24, 0x7F	; 127
     5da:	93 e4       	ldi	r25, 0x43	; 67
     5dc:	21 50       	subi	r18, 0x01	; 1
     5de:	80 40       	sbci	r24, 0x00	; 0
     5e0:	90 40       	sbci	r25, 0x00	; 0
     5e2:	e1 f7       	brne	.-8      	; 0x5dc <show_distance+0xe>
     5e4:	00 c0       	rjmp	.+0      	; 0x5e6 <show_distance+0x18>
     5e6:	00 00       	nop
     5e8:	08 95       	ret

000005ea <main>:
int main(void)
{
	
	int value;
	
	lcd_main_init();
     5ea:	0e 94 c7 02 	call	0x58e	; 0x58e <lcd_main_init>
	
	ADC_Init();
     5ee:	0e 94 41 02 	call	0x482	; 0x482 <ADC_Init>

/* init of a stepper motor pins */

void STEPPER_Init(){
	
	DDRB = 0xF0; /* Make PORTB lower pins as output */
     5f2:	80 ef       	ldi	r24, 0xF0	; 240
     5f4:	87 bb       	out	0x17, r24	; 23
	
	STEPPER_Init();
	
	SENSOR_Init();
     5f6:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <SENSOR_Init>
	
	PORTB = 0x0F;
     5fa:	8f e0       	ldi	r24, 0x0F	; 15
     5fc:	88 bb       	out	0x18, r24	; 24
	DDRB = 0;
     5fe:	17 ba       	out	0x17, r1	; 23
						_delay_ms(200);
					}
					
					if(bit_is_clear(PINB,2)){
						
						start_screen_flag = 1; // return
     600:	01 e0       	ldi	r16, 0x01	; 1
     602:	10 e0       	ldi	r17, 0x00	; 0
	PORTB = 0x0F;
	DDRB = 0;
	
	while (1) {
		
		value = ADC_Read(0);    /* Read ADC channel */
     604:	80 e0       	ldi	r24, 0x00	; 0
     606:	0e 94 47 02 	call	0x48e	; 0x48e <ADC_Read>
     60a:	ec 01       	movw	r28, r24
		
		distance_counter = 0;

		} */
		
		if(start_screen_flag){
     60c:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     610:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     614:	89 2b       	or	r24, r25
     616:	09 f4       	brne	.+2      	; 0x61a <main+0x30>
     618:	9b c1       	rjmp	.+822    	; 0x950 <main+0x366>
		
		lcd_clrscr();
     61a:	0e 94 18 01 	call	0x230	; 0x230 <lcd_clrscr>
		lcd_puts("USER1 USER2 VIS");
     61e:	84 e6       	ldi	r24, 0x64	; 100
     620:	90 e0       	ldi	r25, 0x00	; 0
     622:	0e 94 31 01 	call	0x262	; 0x262 <lcd_puts>
#endif
#if LCD_LINES==2
    if ( y==0 ) 
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE1+x);
    else
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE2+x);
     626:	80 ec       	ldi	r24, 0xC0	; 192
     628:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_command>
		lcd_gotoxy(0,1);
		lcd_puts("KEY1  KEY2 KEY3");
     62c:	84 e7       	ldi	r24, 0x74	; 116
     62e:	90 e0       	ldi	r25, 0x00	; 0
     630:	0e 94 31 01 	call	0x262	; 0x262 <lcd_puts>
		
		
		if(bit_is_clear(PINB,0)){
     634:	b0 99       	sbic	0x16, 0	; 22
     636:	12 c0       	rjmp	.+36     	; 0x65c <main+0x72>
			
			user1_flag = 1; // user 1 is chosen
     638:	10 93 cb 00 	sts	0x00CB, r17	; 0x8000cb <user1_flag+0x1>
     63c:	00 93 ca 00 	sts	0x00CA, r16	; 0x8000ca <user1_flag>
			start_screen_flag = 0;
     640:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     644:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     648:	2f ef       	ldi	r18, 0xFF	; 255
     64a:	8f e7       	ldi	r24, 0x7F	; 127
     64c:	94 e0       	ldi	r25, 0x04	; 4
     64e:	21 50       	subi	r18, 0x01	; 1
     650:	80 40       	sbci	r24, 0x00	; 0
     652:	90 40       	sbci	r25, 0x00	; 0
     654:	e1 f7       	brne	.-8      	; 0x64e <main+0x64>
     656:	00 c0       	rjmp	.+0      	; 0x658 <main+0x6e>
     658:	00 00       	nop
     65a:	21 c0       	rjmp	.+66     	; 0x69e <main+0xb4>
			_delay_ms(200); // debounce
		}else if(bit_is_clear(PINB,1)){
     65c:	b1 99       	sbic	0x16, 1	; 22
     65e:	12 c0       	rjmp	.+36     	; 0x684 <main+0x9a>
			
			user2_flag = 1;  // user 2 is chosen
     660:	10 93 c7 00 	sts	0x00C7, r17	; 0x8000c7 <user2_flag+0x1>
     664:	00 93 c6 00 	sts	0x00C6, r16	; 0x8000c6 <user2_flag>
			start_screen_flag = 0;
     668:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     66c:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     670:	2f ef       	ldi	r18, 0xFF	; 255
     672:	8f e7       	ldi	r24, 0x7F	; 127
     674:	94 e0       	ldi	r25, 0x04	; 4
     676:	21 50       	subi	r18, 0x01	; 1
     678:	80 40       	sbci	r24, 0x00	; 0
     67a:	90 40       	sbci	r25, 0x00	; 0
     67c:	e1 f7       	brne	.-8      	; 0x676 <main+0x8c>
     67e:	00 c0       	rjmp	.+0      	; 0x680 <main+0x96>
     680:	00 00       	nop
     682:	0d c0       	rjmp	.+26     	; 0x69e <main+0xb4>
			_delay_ms(200);
		}else if(bit_is_clear(PINB,2)){
     684:	b2 99       	sbic	0x16, 2	; 22
     686:	0b c0       	rjmp	.+22     	; 0x69e <main+0xb4>
		
		show_distance();
     688:	0e 94 e7 02 	call	0x5ce	; 0x5ce <show_distance>
     68c:	2f ef       	ldi	r18, 0xFF	; 255
     68e:	8f e7       	ldi	r24, 0x7F	; 127
     690:	94 e0       	ldi	r25, 0x04	; 4
     692:	21 50       	subi	r18, 0x01	; 1
     694:	80 40       	sbci	r24, 0x00	; 0
     696:	90 40       	sbci	r25, 0x00	; 0
     698:	e1 f7       	brne	.-8      	; 0x692 <main+0xa8>
     69a:	00 c0       	rjmp	.+0      	; 0x69c <main+0xb2>
     69c:	00 00       	nop
		}
		
		
		
		
		if(user1_flag && start_screen_flag == 0){
     69e:	80 91 ca 00 	lds	r24, 0x00CA	; 0x8000ca <user1_flag>
     6a2:	90 91 cb 00 	lds	r25, 0x00CB	; 0x8000cb <user1_flag+0x1>
     6a6:	89 2b       	or	r24, r25
     6a8:	09 f4       	brne	.+2      	; 0x6ac <main+0xc2>
     6aa:	a1 c0       	rjmp	.+322    	; 0x7ee <main+0x204>
     6ac:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     6b0:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     6b4:	89 2b       	or	r24, r25
     6b6:	09 f0       	breq	.+2      	; 0x6ba <main+0xd0>
     6b8:	44 c1       	rjmp	.+648    	; 0x942 <main+0x358>
			
			user2_flag = 0;
     6ba:	10 92 c7 00 	sts	0x00C7, r1	; 0x8000c7 <user2_flag+0x1>
     6be:	10 92 c6 00 	sts	0x00C6, r1	; 0x8000c6 <user2_flag>
			
			if(read_distance(1) != 0){
     6c2:	c8 01       	movw	r24, r16
     6c4:	0e 94 d7 02 	call	0x5ae	; 0x5ae <read_distance>
     6c8:	89 2b       	or	r24, r25
     6ca:	b1 f0       	breq	.+44     	; 0x6f8 <main+0x10e>
				
				distance = read_distance(1); 
     6cc:	c8 01       	movw	r24, r16
     6ce:	0e 94 d7 02 	call	0x5ae	; 0x5ae <read_distance>
     6d2:	bc 01       	movw	r22, r24
     6d4:	99 0f       	add	r25, r25
     6d6:	88 0b       	sbc	r24, r24
     6d8:	99 0b       	sbc	r25, r25
     6da:	0e 94 60 05 	call	0xac0	; 0xac0 <__floatsisf>
     6de:	60 93 e1 00 	sts	0x00E1, r22	; 0x8000e1 <distance>
     6e2:	70 93 e2 00 	sts	0x00E2, r23	; 0x8000e2 <distance+0x1>
     6e6:	80 93 e3 00 	sts	0x00E3, r24	; 0x8000e3 <distance+0x2>
     6ea:	90 93 e4 00 	sts	0x00E4, r25	; 0x8000e4 <distance+0x3>
				// if hight already exists, set the hight of a table to this
				// also starting position( sitting standing should be automatically determined 
				// depending of a hight
				// average sitting table hight is 75 cm, so everything under 100 should be sitting
				
				distance_user1_exists = 1;
     6ee:	10 93 c9 00 	sts	0x00C9, r17	; 0x8000c9 <distance_user1_exists+0x1>
     6f2:	00 93 c8 00 	sts	0x00C8, r16	; 0x8000c8 <distance_user1_exists>
     6f6:	3a c0       	rjmp	.+116    	; 0x76c <main+0x182>
			}
			else{
				
				lcd_clrscr();
     6f8:	0e 94 18 01 	call	0x230	; 0x230 <lcd_clrscr>
				lcd_puts("POSTAVITE VISINU");
     6fc:	84 e8       	ldi	r24, 0x84	; 132
     6fe:	90 e0       	ldi	r25, 0x00	; 0
     700:	0e 94 31 01 	call	0x262	; 0x262 <lcd_puts>
     704:	80 ec       	ldi	r24, 0xC0	; 192
     706:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_command>
				lcd_gotoxy(0,1);
				lcd_puts("KEY1 ---> DONE");
     70a:	85 e9       	ldi	r24, 0x95	; 149
     70c:	90 e0       	ldi	r25, 0x00	; 0
     70e:	0e 94 31 01 	call	0x262	; 0x262 <lcd_puts>
				
				rotate_motors(value,low_margin,high_margin);
     712:	42 e9       	ldi	r20, 0x92	; 146
     714:	52 e0       	ldi	r21, 0x02	; 2
     716:	6e ef       	ldi	r22, 0xFE	; 254
     718:	71 e0       	ldi	r23, 0x01	; 1
     71a:	ce 01       	movw	r24, r28
     71c:	0e 94 2c 02 	call	0x458	; 0x458 <rotate_motors>
				
				if(bit_is_clear(PINB,0)){
     720:	b0 99       	sbic	0x16, 0	; 22
     722:	1d c0       	rjmp	.+58     	; 0x75e <main+0x174>
					
					distance = mesure_distance();
     724:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <mesure_distance>
     728:	ab 01       	movw	r20, r22
     72a:	bc 01       	movw	r22, r24
     72c:	40 93 e1 00 	sts	0x00E1, r20	; 0x8000e1 <distance>
     730:	50 93 e2 00 	sts	0x00E2, r21	; 0x8000e2 <distance+0x1>
     734:	60 93 e3 00 	sts	0x00E3, r22	; 0x8000e3 <distance+0x2>
     738:	70 93 e4 00 	sts	0x00E4, r23	; 0x8000e4 <distance+0x3>

void save_distance(float distance, int user){
	
	int pozicija = 100 + user;
	
	eeprom_write_float((float *) pozicija, distance); /* writing distance value to nth position in eeprom */
     73c:	85 e6       	ldi	r24, 0x65	; 101
     73e:	90 e0       	ldi	r25, 0x00	; 0
     740:	0e 94 44 08 	call	0x1088	; 0x1088 <eeprom_write_dword>
					
					save_distance(distance,1); /* saving distance(hight) for user, calculating average */
					
					// standing position ???
				
				distance_user1_exists = 1;
     744:	10 93 c9 00 	sts	0x00C9, r17	; 0x8000c9 <distance_user1_exists+0x1>
     748:	00 93 c8 00 	sts	0x00C8, r16	; 0x8000c8 <distance_user1_exists>
     74c:	2f ef       	ldi	r18, 0xFF	; 255
     74e:	8f e7       	ldi	r24, 0x7F	; 127
     750:	94 e0       	ldi	r25, 0x04	; 4
     752:	21 50       	subi	r18, 0x01	; 1
     754:	80 40       	sbci	r24, 0x00	; 0
     756:	90 40       	sbci	r25, 0x00	; 0
     758:	e1 f7       	brne	.-8      	; 0x752 <main+0x168>
     75a:	00 c0       	rjmp	.+0      	; 0x75c <main+0x172>
     75c:	00 00       	nop
				_delay_ms(200);
				
				}
			}
				
				if(distance_user1_exists){
     75e:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <distance_user1_exists>
     762:	90 91 c9 00 	lds	r25, 0x00C9	; 0x8000c9 <distance_user1_exists+0x1>
     766:	89 2b       	or	r24, r25
     768:	09 f4       	brne	.+2      	; 0x76c <main+0x182>
     76a:	41 c0       	rjmp	.+130    	; 0x7ee <main+0x204>
					
					lcd_clrscr();
     76c:	0e 94 18 01 	call	0x230	; 0x230 <lcd_clrscr>
					lcd_puts("STD P. RESET ESC");
     770:	84 ea       	ldi	r24, 0xA4	; 164
     772:	90 e0       	ldi	r25, 0x00	; 0
     774:	0e 94 31 01 	call	0x262	; 0x262 <lcd_puts>
     778:	80 ec       	ldi	r24, 0xC0	; 192
     77a:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_command>
					lcd_gotoxy(0,1);
					lcd_puts("KEY1 KEY2 KEY3");
     77e:	85 eb       	ldi	r24, 0xB5	; 181
     780:	90 e0       	ldi	r25, 0x00	; 0
     782:	0e 94 31 01 	call	0x262	; 0x262 <lcd_puts>
					
					if(bit_is_clear(PINB,0)){
     786:	b0 99       	sbic	0x16, 0	; 22
     788:	09 c0       	rjmp	.+18     	; 0x79c <main+0x1b2>
     78a:	2f ef       	ldi	r18, 0xFF	; 255
     78c:	8f e7       	ldi	r24, 0x7F	; 127
     78e:	94 e0       	ldi	r25, 0x04	; 4
     790:	21 50       	subi	r18, 0x01	; 1
     792:	80 40       	sbci	r24, 0x00	; 0
     794:	90 40       	sbci	r25, 0x00	; 0
     796:	e1 f7       	brne	.-8      	; 0x790 <main+0x1a6>
     798:	00 c0       	rjmp	.+0      	; 0x79a <main+0x1b0>
     79a:	00 00       	nop
						// set a logic to changing to a standing position
						// mby 2 memory spaces for each user
						
						_delay_ms(200);
					}
					if(bit_is_clear(PINB,1)){
     79c:	b1 99       	sbic	0x16, 1	; 22
     79e:	18 c0       	rjmp	.+48     	; 0x7d0 <main+0x1e6>

void save_distance(float distance, int user){
	
	int pozicija = 100 + user;
	
	eeprom_write_float((float *) pozicija, distance); /* writing distance value to nth position in eeprom */
     7a0:	40 e0       	ldi	r20, 0x00	; 0
     7a2:	50 e0       	ldi	r21, 0x00	; 0
     7a4:	ba 01       	movw	r22, r20
     7a6:	85 e6       	ldi	r24, 0x65	; 101
     7a8:	90 e0       	ldi	r25, 0x00	; 0
     7aa:	0e 94 44 08 	call	0x1088	; 0x1088 <eeprom_write_dword>
					}
					if(bit_is_clear(PINB,1)){
						
						save_distance(0,1); // writing 0 to "reset" user height
						
						start_screen_flag = 1;
     7ae:	10 93 61 00 	sts	0x0061, r17	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     7b2:	00 93 60 00 	sts	0x0060, r16	; 0x800060 <__DATA_REGION_ORIGIN__>
						distance_user1_exists = 0;
     7b6:	10 92 c9 00 	sts	0x00C9, r1	; 0x8000c9 <distance_user1_exists+0x1>
     7ba:	10 92 c8 00 	sts	0x00C8, r1	; 0x8000c8 <distance_user1_exists>
     7be:	2f ef       	ldi	r18, 0xFF	; 255
     7c0:	8f e7       	ldi	r24, 0x7F	; 127
     7c2:	94 e0       	ldi	r25, 0x04	; 4
     7c4:	21 50       	subi	r18, 0x01	; 1
     7c6:	80 40       	sbci	r24, 0x00	; 0
     7c8:	90 40       	sbci	r25, 0x00	; 0
     7ca:	e1 f7       	brne	.-8      	; 0x7c4 <main+0x1da>
     7cc:	00 c0       	rjmp	.+0      	; 0x7ce <main+0x1e4>
     7ce:	00 00       	nop
						
						_delay_ms(200);
					}
					
					if(bit_is_clear(PINB,2)){
     7d0:	b2 99       	sbic	0x16, 2	; 22
     7d2:	0d c0       	rjmp	.+26     	; 0x7ee <main+0x204>
						
						start_screen_flag = 1; // return
     7d4:	10 93 61 00 	sts	0x0061, r17	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     7d8:	00 93 60 00 	sts	0x0060, r16	; 0x800060 <__DATA_REGION_ORIGIN__>
     7dc:	2f ef       	ldi	r18, 0xFF	; 255
     7de:	8f e7       	ldi	r24, 0x7F	; 127
     7e0:	94 e0       	ldi	r25, 0x04	; 4
     7e2:	21 50       	subi	r18, 0x01	; 1
     7e4:	80 40       	sbci	r24, 0x00	; 0
     7e6:	90 40       	sbci	r25, 0x00	; 0
     7e8:	e1 f7       	brne	.-8      	; 0x7e2 <main+0x1f8>
     7ea:	00 c0       	rjmp	.+0      	; 0x7ec <main+0x202>
     7ec:	00 00       	nop
						
						_delay_ms(200);
					}	
				}
			}
			if(user2_flag && start_screen_flag == 0){
     7ee:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <user2_flag>
     7f2:	90 91 c7 00 	lds	r25, 0x00C7	; 0x8000c7 <user2_flag+0x1>
     7f6:	89 2b       	or	r24, r25
     7f8:	09 f4       	brne	.+2      	; 0x7fc <main+0x212>
     7fa:	a3 c0       	rjmp	.+326    	; 0x942 <main+0x358>
     7fc:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     800:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     804:	89 2b       	or	r24, r25
     806:	09 f0       	breq	.+2      	; 0x80a <main+0x220>
     808:	9c c0       	rjmp	.+312    	; 0x942 <main+0x358>
				
				user1_flag = 0;
     80a:	10 92 cb 00 	sts	0x00CB, r1	; 0x8000cb <user1_flag+0x1>
     80e:	10 92 ca 00 	sts	0x00CA, r1	; 0x8000ca <user1_flag>
				
				
				if(read_distance(2) != 0){
     812:	82 e0       	ldi	r24, 0x02	; 2
     814:	90 e0       	ldi	r25, 0x00	; 0
     816:	0e 94 d7 02 	call	0x5ae	; 0x5ae <read_distance>
     81a:	89 2b       	or	r24, r25
     81c:	b9 f0       	breq	.+46     	; 0x84c <main+0x262>
					
					distance = read_distance(2);
     81e:	82 e0       	ldi	r24, 0x02	; 2
     820:	90 e0       	ldi	r25, 0x00	; 0
     822:	0e 94 d7 02 	call	0x5ae	; 0x5ae <read_distance>
     826:	bc 01       	movw	r22, r24
     828:	99 0f       	add	r25, r25
     82a:	88 0b       	sbc	r24, r24
     82c:	99 0b       	sbc	r25, r25
     82e:	0e 94 60 05 	call	0xac0	; 0xac0 <__floatsisf>
     832:	60 93 e1 00 	sts	0x00E1, r22	; 0x8000e1 <distance>
     836:	70 93 e2 00 	sts	0x00E2, r23	; 0x8000e2 <distance+0x1>
     83a:	80 93 e3 00 	sts	0x00E3, r24	; 0x8000e3 <distance+0x2>
     83e:	90 93 e4 00 	sts	0x00E4, r25	; 0x8000e4 <distance+0x3>
					// if hight already exists, set the hight of a table to this
					// also starting position( sitting standing should be automatically determined
					// depending of a hight
					// average sitting table hight is 75 cm, so everything under 100 should be sitting
					
					distance_user2_exists = 1;
     842:	10 93 c5 00 	sts	0x00C5, r17	; 0x8000c5 <__data_end+0x1>
     846:	00 93 c4 00 	sts	0x00C4, r16	; 0x8000c4 <__data_end>
     84a:	3a c0       	rjmp	.+116    	; 0x8c0 <main+0x2d6>
				}
				else{
					
					lcd_clrscr();
     84c:	0e 94 18 01 	call	0x230	; 0x230 <lcd_clrscr>
					lcd_puts("POSTAVITE VISINU");
     850:	84 e8       	ldi	r24, 0x84	; 132
     852:	90 e0       	ldi	r25, 0x00	; 0
     854:	0e 94 31 01 	call	0x262	; 0x262 <lcd_puts>
     858:	80 ec       	ldi	r24, 0xC0	; 192
     85a:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_command>
					lcd_gotoxy(0,1);
					lcd_puts("KEY1 ---> DONE");
     85e:	85 e9       	ldi	r24, 0x95	; 149
     860:	90 e0       	ldi	r25, 0x00	; 0
     862:	0e 94 31 01 	call	0x262	; 0x262 <lcd_puts>
					
					rotate_motors(value,low_margin,high_margin);
     866:	42 e9       	ldi	r20, 0x92	; 146
     868:	52 e0       	ldi	r21, 0x02	; 2
     86a:	6e ef       	ldi	r22, 0xFE	; 254
     86c:	71 e0       	ldi	r23, 0x01	; 1
     86e:	ce 01       	movw	r24, r28
     870:	0e 94 2c 02 	call	0x458	; 0x458 <rotate_motors>
					
					if(bit_is_clear(PINB,0)){
     874:	b0 99       	sbic	0x16, 0	; 22
     876:	1d c0       	rjmp	.+58     	; 0x8b2 <main+0x2c8>
						
						distance = mesure_distance();
     878:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <mesure_distance>
     87c:	ab 01       	movw	r20, r22
     87e:	bc 01       	movw	r22, r24
     880:	40 93 e1 00 	sts	0x00E1, r20	; 0x8000e1 <distance>
     884:	50 93 e2 00 	sts	0x00E2, r21	; 0x8000e2 <distance+0x1>
     888:	60 93 e3 00 	sts	0x00E3, r22	; 0x8000e3 <distance+0x2>
     88c:	70 93 e4 00 	sts	0x00E4, r23	; 0x8000e4 <distance+0x3>

void save_distance(float distance, int user){
	
	int pozicija = 100 + user;
	
	eeprom_write_float((float *) pozicija, distance); /* writing distance value to nth position in eeprom */
     890:	86 e6       	ldi	r24, 0x66	; 102
     892:	90 e0       	ldi	r25, 0x00	; 0
     894:	0e 94 44 08 	call	0x1088	; 0x1088 <eeprom_write_dword>
						
						save_distance(distance,2); /* saving distance(hight) for user, calculating average */
						
						// standing position ???
						
						distance_user2_exists = 1;
     898:	10 93 c5 00 	sts	0x00C5, r17	; 0x8000c5 <__data_end+0x1>
     89c:	00 93 c4 00 	sts	0x00C4, r16	; 0x8000c4 <__data_end>
     8a0:	2f ef       	ldi	r18, 0xFF	; 255
     8a2:	8f e7       	ldi	r24, 0x7F	; 127
     8a4:	94 e0       	ldi	r25, 0x04	; 4
     8a6:	21 50       	subi	r18, 0x01	; 1
     8a8:	80 40       	sbci	r24, 0x00	; 0
     8aa:	90 40       	sbci	r25, 0x00	; 0
     8ac:	e1 f7       	brne	.-8      	; 0x8a6 <main+0x2bc>
     8ae:	00 c0       	rjmp	.+0      	; 0x8b0 <main+0x2c6>
     8b0:	00 00       	nop
						_delay_ms(200);
						
					}
				}
				
				if(distance_user2_exists){
     8b2:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <__data_end>
     8b6:	90 91 c5 00 	lds	r25, 0x00C5	; 0x8000c5 <__data_end+0x1>
     8ba:	89 2b       	or	r24, r25
     8bc:	09 f4       	brne	.+2      	; 0x8c0 <main+0x2d6>
     8be:	41 c0       	rjmp	.+130    	; 0x942 <main+0x358>
					
					
					lcd_clrscr();
     8c0:	0e 94 18 01 	call	0x230	; 0x230 <lcd_clrscr>
					lcd_puts("STD P. RESET ESC");
     8c4:	84 ea       	ldi	r24, 0xA4	; 164
     8c6:	90 e0       	ldi	r25, 0x00	; 0
     8c8:	0e 94 31 01 	call	0x262	; 0x262 <lcd_puts>
     8cc:	80 ec       	ldi	r24, 0xC0	; 192
     8ce:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_command>
					lcd_gotoxy(0,1);
					lcd_puts("KEY1 KEY2 KEY3");
     8d2:	85 eb       	ldi	r24, 0xB5	; 181
     8d4:	90 e0       	ldi	r25, 0x00	; 0
     8d6:	0e 94 31 01 	call	0x262	; 0x262 <lcd_puts>
					
					if(bit_is_clear(PINB,0)){
     8da:	b0 99       	sbic	0x16, 0	; 22
     8dc:	09 c0       	rjmp	.+18     	; 0x8f0 <main+0x306>
     8de:	2f ef       	ldi	r18, 0xFF	; 255
     8e0:	8f e7       	ldi	r24, 0x7F	; 127
     8e2:	94 e0       	ldi	r25, 0x04	; 4
     8e4:	21 50       	subi	r18, 0x01	; 1
     8e6:	80 40       	sbci	r24, 0x00	; 0
     8e8:	90 40       	sbci	r25, 0x00	; 0
     8ea:	e1 f7       	brne	.-8      	; 0x8e4 <main+0x2fa>
     8ec:	00 c0       	rjmp	.+0      	; 0x8ee <main+0x304>
     8ee:	00 00       	nop
						// mby 2 memory spaces for each user
						
						_delay_ms(200);
						
					}
					if(bit_is_clear(PINB,1)){
     8f0:	b1 99       	sbic	0x16, 1	; 22
     8f2:	18 c0       	rjmp	.+48     	; 0x924 <main+0x33a>

void save_distance(float distance, int user){
	
	int pozicija = 100 + user;
	
	eeprom_write_float((float *) pozicija, distance); /* writing distance value to nth position in eeprom */
     8f4:	40 e0       	ldi	r20, 0x00	; 0
     8f6:	50 e0       	ldi	r21, 0x00	; 0
     8f8:	ba 01       	movw	r22, r20
     8fa:	86 e6       	ldi	r24, 0x66	; 102
     8fc:	90 e0       	ldi	r25, 0x00	; 0
     8fe:	0e 94 44 08 	call	0x1088	; 0x1088 <eeprom_write_dword>
					}
					if(bit_is_clear(PINB,1)){
						
						save_distance(0,2); // writing 0 to "reset" user height
						
						start_screen_flag = 1;
     902:	10 93 61 00 	sts	0x0061, r17	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     906:	00 93 60 00 	sts	0x0060, r16	; 0x800060 <__DATA_REGION_ORIGIN__>
						distance_user2_exists = 0;
     90a:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__data_end+0x1>
     90e:	10 92 c4 00 	sts	0x00C4, r1	; 0x8000c4 <__data_end>
     912:	2f ef       	ldi	r18, 0xFF	; 255
     914:	8f e7       	ldi	r24, 0x7F	; 127
     916:	94 e0       	ldi	r25, 0x04	; 4
     918:	21 50       	subi	r18, 0x01	; 1
     91a:	80 40       	sbci	r24, 0x00	; 0
     91c:	90 40       	sbci	r25, 0x00	; 0
     91e:	e1 f7       	brne	.-8      	; 0x918 <main+0x32e>
     920:	00 c0       	rjmp	.+0      	; 0x922 <main+0x338>
     922:	00 00       	nop
						
						_delay_ms(200);
					}
					
					if(bit_is_clear(PINB,2)){
     924:	b2 99       	sbic	0x16, 2	; 22
     926:	0d c0       	rjmp	.+26     	; 0x942 <main+0x358>
						
						start_screen_flag = 1; // return
     928:	10 93 61 00 	sts	0x0061, r17	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     92c:	00 93 60 00 	sts	0x0060, r16	; 0x800060 <__DATA_REGION_ORIGIN__>
     930:	2f ef       	ldi	r18, 0xFF	; 255
     932:	8f e3       	ldi	r24, 0x3F	; 63
     934:	9b e0       	ldi	r25, 0x0B	; 11
     936:	21 50       	subi	r18, 0x01	; 1
     938:	80 40       	sbci	r24, 0x00	; 0
     93a:	90 40       	sbci	r25, 0x00	; 0
     93c:	e1 f7       	brne	.-8      	; 0x936 <main+0x34c>
     93e:	00 c0       	rjmp	.+0      	; 0x940 <main+0x356>
     940:	00 00       	nop
     942:	8f ef       	ldi	r24, 0xFF	; 255
     944:	97 e4       	ldi	r25, 0x47	; 71
     946:	01 97       	sbiw	r24, 0x01	; 1
     948:	f1 f7       	brne	.-4      	; 0x946 <main+0x35c>
     94a:	00 c0       	rjmp	.+0      	; 0x94c <main+0x362>
     94c:	00 00       	nop
     94e:	5a ce       	rjmp	.-844    	; 0x604 <main+0x1a>
		}
		
		
		
		
		if(user1_flag && start_screen_flag == 0){
     950:	80 91 ca 00 	lds	r24, 0x00CA	; 0x8000ca <user1_flag>
     954:	90 91 cb 00 	lds	r25, 0x00CB	; 0x8000cb <user1_flag+0x1>
     958:	89 2b       	or	r24, r25
     95a:	09 f0       	breq	.+2      	; 0x95e <main+0x374>
     95c:	ae ce       	rjmp	.-676    	; 0x6ba <main+0xd0>
						
						_delay_ms(200);
					}	
				}
			}
			if(user2_flag && start_screen_flag == 0){
     95e:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <user2_flag>
     962:	90 91 c7 00 	lds	r25, 0x00C7	; 0x8000c7 <user2_flag+0x1>
     966:	89 2b       	or	r24, r25
     968:	61 f3       	breq	.-40     	; 0x942 <main+0x358>
     96a:	4f cf       	rjmp	.-354    	; 0x80a <main+0x220>

0000096c <__divsf3>:
     96c:	0e 94 ca 04 	call	0x994	; 0x994 <__divsf3x>
     970:	0c 94 b2 05 	jmp	0xb64	; 0xb64 <__fp_round>
     974:	0e 94 ab 05 	call	0xb56	; 0xb56 <__fp_pscB>
     978:	58 f0       	brcs	.+22     	; 0x990 <__divsf3+0x24>
     97a:	0e 94 a4 05 	call	0xb48	; 0xb48 <__fp_pscA>
     97e:	40 f0       	brcs	.+16     	; 0x990 <__divsf3+0x24>
     980:	29 f4       	brne	.+10     	; 0x98c <__divsf3+0x20>
     982:	5f 3f       	cpi	r21, 0xFF	; 255
     984:	29 f0       	breq	.+10     	; 0x990 <__divsf3+0x24>
     986:	0c 94 9b 05 	jmp	0xb36	; 0xb36 <__fp_inf>
     98a:	51 11       	cpse	r21, r1
     98c:	0c 94 e6 05 	jmp	0xbcc	; 0xbcc <__fp_szero>
     990:	0c 94 a1 05 	jmp	0xb42	; 0xb42 <__fp_nan>

00000994 <__divsf3x>:
     994:	0e 94 c3 05 	call	0xb86	; 0xb86 <__fp_split3>
     998:	68 f3       	brcs	.-38     	; 0x974 <__divsf3+0x8>

0000099a <__divsf3_pse>:
     99a:	99 23       	and	r25, r25
     99c:	b1 f3       	breq	.-20     	; 0x98a <__divsf3+0x1e>
     99e:	55 23       	and	r21, r21
     9a0:	91 f3       	breq	.-28     	; 0x986 <__divsf3+0x1a>
     9a2:	95 1b       	sub	r25, r21
     9a4:	55 0b       	sbc	r21, r21
     9a6:	bb 27       	eor	r27, r27
     9a8:	aa 27       	eor	r26, r26
     9aa:	62 17       	cp	r22, r18
     9ac:	73 07       	cpc	r23, r19
     9ae:	84 07       	cpc	r24, r20
     9b0:	38 f0       	brcs	.+14     	; 0x9c0 <__divsf3_pse+0x26>
     9b2:	9f 5f       	subi	r25, 0xFF	; 255
     9b4:	5f 4f       	sbci	r21, 0xFF	; 255
     9b6:	22 0f       	add	r18, r18
     9b8:	33 1f       	adc	r19, r19
     9ba:	44 1f       	adc	r20, r20
     9bc:	aa 1f       	adc	r26, r26
     9be:	a9 f3       	breq	.-22     	; 0x9aa <__divsf3_pse+0x10>
     9c0:	35 d0       	rcall	.+106    	; 0xa2c <__divsf3_pse+0x92>
     9c2:	0e 2e       	mov	r0, r30
     9c4:	3a f0       	brmi	.+14     	; 0x9d4 <__divsf3_pse+0x3a>
     9c6:	e0 e8       	ldi	r30, 0x80	; 128
     9c8:	32 d0       	rcall	.+100    	; 0xa2e <__divsf3_pse+0x94>
     9ca:	91 50       	subi	r25, 0x01	; 1
     9cc:	50 40       	sbci	r21, 0x00	; 0
     9ce:	e6 95       	lsr	r30
     9d0:	00 1c       	adc	r0, r0
     9d2:	ca f7       	brpl	.-14     	; 0x9c6 <__divsf3_pse+0x2c>
     9d4:	2b d0       	rcall	.+86     	; 0xa2c <__divsf3_pse+0x92>
     9d6:	fe 2f       	mov	r31, r30
     9d8:	29 d0       	rcall	.+82     	; 0xa2c <__divsf3_pse+0x92>
     9da:	66 0f       	add	r22, r22
     9dc:	77 1f       	adc	r23, r23
     9de:	88 1f       	adc	r24, r24
     9e0:	bb 1f       	adc	r27, r27
     9e2:	26 17       	cp	r18, r22
     9e4:	37 07       	cpc	r19, r23
     9e6:	48 07       	cpc	r20, r24
     9e8:	ab 07       	cpc	r26, r27
     9ea:	b0 e8       	ldi	r27, 0x80	; 128
     9ec:	09 f0       	breq	.+2      	; 0x9f0 <__divsf3_pse+0x56>
     9ee:	bb 0b       	sbc	r27, r27
     9f0:	80 2d       	mov	r24, r0
     9f2:	bf 01       	movw	r22, r30
     9f4:	ff 27       	eor	r31, r31
     9f6:	93 58       	subi	r25, 0x83	; 131
     9f8:	5f 4f       	sbci	r21, 0xFF	; 255
     9fa:	3a f0       	brmi	.+14     	; 0xa0a <__divsf3_pse+0x70>
     9fc:	9e 3f       	cpi	r25, 0xFE	; 254
     9fe:	51 05       	cpc	r21, r1
     a00:	78 f0       	brcs	.+30     	; 0xa20 <__divsf3_pse+0x86>
     a02:	0c 94 9b 05 	jmp	0xb36	; 0xb36 <__fp_inf>
     a06:	0c 94 e6 05 	jmp	0xbcc	; 0xbcc <__fp_szero>
     a0a:	5f 3f       	cpi	r21, 0xFF	; 255
     a0c:	e4 f3       	brlt	.-8      	; 0xa06 <__divsf3_pse+0x6c>
     a0e:	98 3e       	cpi	r25, 0xE8	; 232
     a10:	d4 f3       	brlt	.-12     	; 0xa06 <__divsf3_pse+0x6c>
     a12:	86 95       	lsr	r24
     a14:	77 95       	ror	r23
     a16:	67 95       	ror	r22
     a18:	b7 95       	ror	r27
     a1a:	f7 95       	ror	r31
     a1c:	9f 5f       	subi	r25, 0xFF	; 255
     a1e:	c9 f7       	brne	.-14     	; 0xa12 <__divsf3_pse+0x78>
     a20:	88 0f       	add	r24, r24
     a22:	91 1d       	adc	r25, r1
     a24:	96 95       	lsr	r25
     a26:	87 95       	ror	r24
     a28:	97 f9       	bld	r25, 7
     a2a:	08 95       	ret
     a2c:	e1 e0       	ldi	r30, 0x01	; 1
     a2e:	66 0f       	add	r22, r22
     a30:	77 1f       	adc	r23, r23
     a32:	88 1f       	adc	r24, r24
     a34:	bb 1f       	adc	r27, r27
     a36:	62 17       	cp	r22, r18
     a38:	73 07       	cpc	r23, r19
     a3a:	84 07       	cpc	r24, r20
     a3c:	ba 07       	cpc	r27, r26
     a3e:	20 f0       	brcs	.+8      	; 0xa48 <__divsf3_pse+0xae>
     a40:	62 1b       	sub	r22, r18
     a42:	73 0b       	sbc	r23, r19
     a44:	84 0b       	sbc	r24, r20
     a46:	ba 0b       	sbc	r27, r26
     a48:	ee 1f       	adc	r30, r30
     a4a:	88 f7       	brcc	.-30     	; 0xa2e <__divsf3_pse+0x94>
     a4c:	e0 95       	com	r30
     a4e:	08 95       	ret

00000a50 <__fixsfsi>:
     a50:	0e 94 2f 05 	call	0xa5e	; 0xa5e <__fixunssfsi>
     a54:	68 94       	set
     a56:	b1 11       	cpse	r27, r1
     a58:	0c 94 e6 05 	jmp	0xbcc	; 0xbcc <__fp_szero>
     a5c:	08 95       	ret

00000a5e <__fixunssfsi>:
     a5e:	0e 94 cb 05 	call	0xb96	; 0xb96 <__fp_splitA>
     a62:	88 f0       	brcs	.+34     	; 0xa86 <__fixunssfsi+0x28>
     a64:	9f 57       	subi	r25, 0x7F	; 127
     a66:	98 f0       	brcs	.+38     	; 0xa8e <__fixunssfsi+0x30>
     a68:	b9 2f       	mov	r27, r25
     a6a:	99 27       	eor	r25, r25
     a6c:	b7 51       	subi	r27, 0x17	; 23
     a6e:	b0 f0       	brcs	.+44     	; 0xa9c <__fixunssfsi+0x3e>
     a70:	e1 f0       	breq	.+56     	; 0xaaa <__fixunssfsi+0x4c>
     a72:	66 0f       	add	r22, r22
     a74:	77 1f       	adc	r23, r23
     a76:	88 1f       	adc	r24, r24
     a78:	99 1f       	adc	r25, r25
     a7a:	1a f0       	brmi	.+6      	; 0xa82 <__fixunssfsi+0x24>
     a7c:	ba 95       	dec	r27
     a7e:	c9 f7       	brne	.-14     	; 0xa72 <__fixunssfsi+0x14>
     a80:	14 c0       	rjmp	.+40     	; 0xaaa <__fixunssfsi+0x4c>
     a82:	b1 30       	cpi	r27, 0x01	; 1
     a84:	91 f0       	breq	.+36     	; 0xaaa <__fixunssfsi+0x4c>
     a86:	0e 94 e5 05 	call	0xbca	; 0xbca <__fp_zero>
     a8a:	b1 e0       	ldi	r27, 0x01	; 1
     a8c:	08 95       	ret
     a8e:	0c 94 e5 05 	jmp	0xbca	; 0xbca <__fp_zero>
     a92:	67 2f       	mov	r22, r23
     a94:	78 2f       	mov	r23, r24
     a96:	88 27       	eor	r24, r24
     a98:	b8 5f       	subi	r27, 0xF8	; 248
     a9a:	39 f0       	breq	.+14     	; 0xaaa <__fixunssfsi+0x4c>
     a9c:	b9 3f       	cpi	r27, 0xF9	; 249
     a9e:	cc f3       	brlt	.-14     	; 0xa92 <__fixunssfsi+0x34>
     aa0:	86 95       	lsr	r24
     aa2:	77 95       	ror	r23
     aa4:	67 95       	ror	r22
     aa6:	b3 95       	inc	r27
     aa8:	d9 f7       	brne	.-10     	; 0xaa0 <__fixunssfsi+0x42>
     aaa:	3e f4       	brtc	.+14     	; 0xaba <__fixunssfsi+0x5c>
     aac:	90 95       	com	r25
     aae:	80 95       	com	r24
     ab0:	70 95       	com	r23
     ab2:	61 95       	neg	r22
     ab4:	7f 4f       	sbci	r23, 0xFF	; 255
     ab6:	8f 4f       	sbci	r24, 0xFF	; 255
     ab8:	9f 4f       	sbci	r25, 0xFF	; 255
     aba:	08 95       	ret

00000abc <__floatunsisf>:
     abc:	e8 94       	clt
     abe:	09 c0       	rjmp	.+18     	; 0xad2 <__floatsisf+0x12>

00000ac0 <__floatsisf>:
     ac0:	97 fb       	bst	r25, 7
     ac2:	3e f4       	brtc	.+14     	; 0xad2 <__floatsisf+0x12>
     ac4:	90 95       	com	r25
     ac6:	80 95       	com	r24
     ac8:	70 95       	com	r23
     aca:	61 95       	neg	r22
     acc:	7f 4f       	sbci	r23, 0xFF	; 255
     ace:	8f 4f       	sbci	r24, 0xFF	; 255
     ad0:	9f 4f       	sbci	r25, 0xFF	; 255
     ad2:	99 23       	and	r25, r25
     ad4:	a9 f0       	breq	.+42     	; 0xb00 <__floatsisf+0x40>
     ad6:	f9 2f       	mov	r31, r25
     ad8:	96 e9       	ldi	r25, 0x96	; 150
     ada:	bb 27       	eor	r27, r27
     adc:	93 95       	inc	r25
     ade:	f6 95       	lsr	r31
     ae0:	87 95       	ror	r24
     ae2:	77 95       	ror	r23
     ae4:	67 95       	ror	r22
     ae6:	b7 95       	ror	r27
     ae8:	f1 11       	cpse	r31, r1
     aea:	f8 cf       	rjmp	.-16     	; 0xadc <__floatsisf+0x1c>
     aec:	fa f4       	brpl	.+62     	; 0xb2c <__floatsisf+0x6c>
     aee:	bb 0f       	add	r27, r27
     af0:	11 f4       	brne	.+4      	; 0xaf6 <__floatsisf+0x36>
     af2:	60 ff       	sbrs	r22, 0
     af4:	1b c0       	rjmp	.+54     	; 0xb2c <__floatsisf+0x6c>
     af6:	6f 5f       	subi	r22, 0xFF	; 255
     af8:	7f 4f       	sbci	r23, 0xFF	; 255
     afa:	8f 4f       	sbci	r24, 0xFF	; 255
     afc:	9f 4f       	sbci	r25, 0xFF	; 255
     afe:	16 c0       	rjmp	.+44     	; 0xb2c <__floatsisf+0x6c>
     b00:	88 23       	and	r24, r24
     b02:	11 f0       	breq	.+4      	; 0xb08 <__floatsisf+0x48>
     b04:	96 e9       	ldi	r25, 0x96	; 150
     b06:	11 c0       	rjmp	.+34     	; 0xb2a <__floatsisf+0x6a>
     b08:	77 23       	and	r23, r23
     b0a:	21 f0       	breq	.+8      	; 0xb14 <__floatsisf+0x54>
     b0c:	9e e8       	ldi	r25, 0x8E	; 142
     b0e:	87 2f       	mov	r24, r23
     b10:	76 2f       	mov	r23, r22
     b12:	05 c0       	rjmp	.+10     	; 0xb1e <__floatsisf+0x5e>
     b14:	66 23       	and	r22, r22
     b16:	71 f0       	breq	.+28     	; 0xb34 <__floatsisf+0x74>
     b18:	96 e8       	ldi	r25, 0x86	; 134
     b1a:	86 2f       	mov	r24, r22
     b1c:	70 e0       	ldi	r23, 0x00	; 0
     b1e:	60 e0       	ldi	r22, 0x00	; 0
     b20:	2a f0       	brmi	.+10     	; 0xb2c <__floatsisf+0x6c>
     b22:	9a 95       	dec	r25
     b24:	66 0f       	add	r22, r22
     b26:	77 1f       	adc	r23, r23
     b28:	88 1f       	adc	r24, r24
     b2a:	da f7       	brpl	.-10     	; 0xb22 <__floatsisf+0x62>
     b2c:	88 0f       	add	r24, r24
     b2e:	96 95       	lsr	r25
     b30:	87 95       	ror	r24
     b32:	97 f9       	bld	r25, 7
     b34:	08 95       	ret

00000b36 <__fp_inf>:
     b36:	97 f9       	bld	r25, 7
     b38:	9f 67       	ori	r25, 0x7F	; 127
     b3a:	80 e8       	ldi	r24, 0x80	; 128
     b3c:	70 e0       	ldi	r23, 0x00	; 0
     b3e:	60 e0       	ldi	r22, 0x00	; 0
     b40:	08 95       	ret

00000b42 <__fp_nan>:
     b42:	9f ef       	ldi	r25, 0xFF	; 255
     b44:	80 ec       	ldi	r24, 0xC0	; 192
     b46:	08 95       	ret

00000b48 <__fp_pscA>:
     b48:	00 24       	eor	r0, r0
     b4a:	0a 94       	dec	r0
     b4c:	16 16       	cp	r1, r22
     b4e:	17 06       	cpc	r1, r23
     b50:	18 06       	cpc	r1, r24
     b52:	09 06       	cpc	r0, r25
     b54:	08 95       	ret

00000b56 <__fp_pscB>:
     b56:	00 24       	eor	r0, r0
     b58:	0a 94       	dec	r0
     b5a:	12 16       	cp	r1, r18
     b5c:	13 06       	cpc	r1, r19
     b5e:	14 06       	cpc	r1, r20
     b60:	05 06       	cpc	r0, r21
     b62:	08 95       	ret

00000b64 <__fp_round>:
     b64:	09 2e       	mov	r0, r25
     b66:	03 94       	inc	r0
     b68:	00 0c       	add	r0, r0
     b6a:	11 f4       	brne	.+4      	; 0xb70 <__fp_round+0xc>
     b6c:	88 23       	and	r24, r24
     b6e:	52 f0       	brmi	.+20     	; 0xb84 <__fp_round+0x20>
     b70:	bb 0f       	add	r27, r27
     b72:	40 f4       	brcc	.+16     	; 0xb84 <__fp_round+0x20>
     b74:	bf 2b       	or	r27, r31
     b76:	11 f4       	brne	.+4      	; 0xb7c <__fp_round+0x18>
     b78:	60 ff       	sbrs	r22, 0
     b7a:	04 c0       	rjmp	.+8      	; 0xb84 <__fp_round+0x20>
     b7c:	6f 5f       	subi	r22, 0xFF	; 255
     b7e:	7f 4f       	sbci	r23, 0xFF	; 255
     b80:	8f 4f       	sbci	r24, 0xFF	; 255
     b82:	9f 4f       	sbci	r25, 0xFF	; 255
     b84:	08 95       	ret

00000b86 <__fp_split3>:
     b86:	57 fd       	sbrc	r21, 7
     b88:	90 58       	subi	r25, 0x80	; 128
     b8a:	44 0f       	add	r20, r20
     b8c:	55 1f       	adc	r21, r21
     b8e:	59 f0       	breq	.+22     	; 0xba6 <__fp_splitA+0x10>
     b90:	5f 3f       	cpi	r21, 0xFF	; 255
     b92:	71 f0       	breq	.+28     	; 0xbb0 <__fp_splitA+0x1a>
     b94:	47 95       	ror	r20

00000b96 <__fp_splitA>:
     b96:	88 0f       	add	r24, r24
     b98:	97 fb       	bst	r25, 7
     b9a:	99 1f       	adc	r25, r25
     b9c:	61 f0       	breq	.+24     	; 0xbb6 <__fp_splitA+0x20>
     b9e:	9f 3f       	cpi	r25, 0xFF	; 255
     ba0:	79 f0       	breq	.+30     	; 0xbc0 <__fp_splitA+0x2a>
     ba2:	87 95       	ror	r24
     ba4:	08 95       	ret
     ba6:	12 16       	cp	r1, r18
     ba8:	13 06       	cpc	r1, r19
     baa:	14 06       	cpc	r1, r20
     bac:	55 1f       	adc	r21, r21
     bae:	f2 cf       	rjmp	.-28     	; 0xb94 <__fp_split3+0xe>
     bb0:	46 95       	lsr	r20
     bb2:	f1 df       	rcall	.-30     	; 0xb96 <__fp_splitA>
     bb4:	08 c0       	rjmp	.+16     	; 0xbc6 <__fp_splitA+0x30>
     bb6:	16 16       	cp	r1, r22
     bb8:	17 06       	cpc	r1, r23
     bba:	18 06       	cpc	r1, r24
     bbc:	99 1f       	adc	r25, r25
     bbe:	f1 cf       	rjmp	.-30     	; 0xba2 <__fp_splitA+0xc>
     bc0:	86 95       	lsr	r24
     bc2:	71 05       	cpc	r23, r1
     bc4:	61 05       	cpc	r22, r1
     bc6:	08 94       	sec
     bc8:	08 95       	ret

00000bca <__fp_zero>:
     bca:	e8 94       	clt

00000bcc <__fp_szero>:
     bcc:	bb 27       	eor	r27, r27
     bce:	66 27       	eor	r22, r22
     bd0:	77 27       	eor	r23, r23
     bd2:	cb 01       	movw	r24, r22
     bd4:	97 f9       	bld	r25, 7
     bd6:	08 95       	ret

00000bd8 <dtostrf>:
     bd8:	ef 92       	push	r14
     bda:	0f 93       	push	r16
     bdc:	1f 93       	push	r17
     bde:	cf 93       	push	r28
     be0:	df 93       	push	r29
     be2:	e8 01       	movw	r28, r16
     be4:	47 fd       	sbrc	r20, 7
     be6:	02 c0       	rjmp	.+4      	; 0xbec <dtostrf+0x14>
     be8:	34 e0       	ldi	r19, 0x04	; 4
     bea:	01 c0       	rjmp	.+2      	; 0xbee <dtostrf+0x16>
     bec:	34 e1       	ldi	r19, 0x14	; 20
     bee:	04 2e       	mov	r0, r20
     bf0:	00 0c       	add	r0, r0
     bf2:	55 0b       	sbc	r21, r21
     bf4:	57 ff       	sbrs	r21, 7
     bf6:	03 c0       	rjmp	.+6      	; 0xbfe <dtostrf+0x26>
     bf8:	51 95       	neg	r21
     bfa:	41 95       	neg	r20
     bfc:	51 09       	sbc	r21, r1
     bfe:	e3 2e       	mov	r14, r19
     c00:	02 2f       	mov	r16, r18
     c02:	24 2f       	mov	r18, r20
     c04:	ae 01       	movw	r20, r28
     c06:	0e 94 0c 06 	call	0xc18	; 0xc18 <dtoa_prf>
     c0a:	ce 01       	movw	r24, r28
     c0c:	df 91       	pop	r29
     c0e:	cf 91       	pop	r28
     c10:	1f 91       	pop	r17
     c12:	0f 91       	pop	r16
     c14:	ef 90       	pop	r14
     c16:	08 95       	ret

00000c18 <dtoa_prf>:
     c18:	a9 e0       	ldi	r26, 0x09	; 9
     c1a:	b0 e0       	ldi	r27, 0x00	; 0
     c1c:	e2 e1       	ldi	r30, 0x12	; 18
     c1e:	f6 e0       	ldi	r31, 0x06	; 6
     c20:	0c 94 74 08 	jmp	0x10e8	; 0x10e8 <__prologue_saves__+0xc>
     c24:	6a 01       	movw	r12, r20
     c26:	12 2f       	mov	r17, r18
     c28:	b0 2e       	mov	r11, r16
     c2a:	2b e3       	ldi	r18, 0x3B	; 59
     c2c:	20 17       	cp	r18, r16
     c2e:	20 f0       	brcs	.+8      	; 0xc38 <dtoa_prf+0x20>
     c30:	ff 24       	eor	r15, r15
     c32:	f3 94       	inc	r15
     c34:	f0 0e       	add	r15, r16
     c36:	02 c0       	rjmp	.+4      	; 0xc3c <dtoa_prf+0x24>
     c38:	2c e3       	ldi	r18, 0x3C	; 60
     c3a:	f2 2e       	mov	r15, r18
     c3c:	0f 2d       	mov	r16, r15
     c3e:	27 e0       	ldi	r18, 0x07	; 7
     c40:	ae 01       	movw	r20, r28
     c42:	4f 5f       	subi	r20, 0xFF	; 255
     c44:	5f 4f       	sbci	r21, 0xFF	; 255
     c46:	0e 94 66 07 	call	0xecc	; 0xecc <__ftoa_engine>
     c4a:	bc 01       	movw	r22, r24
     c4c:	49 81       	ldd	r20, Y+1	; 0x01
     c4e:	84 2f       	mov	r24, r20
     c50:	89 70       	andi	r24, 0x09	; 9
     c52:	81 30       	cpi	r24, 0x01	; 1
     c54:	31 f0       	breq	.+12     	; 0xc62 <dtoa_prf+0x4a>
     c56:	e1 fc       	sbrc	r14, 1
     c58:	06 c0       	rjmp	.+12     	; 0xc66 <dtoa_prf+0x4e>
     c5a:	e0 fe       	sbrs	r14, 0
     c5c:	06 c0       	rjmp	.+12     	; 0xc6a <dtoa_prf+0x52>
     c5e:	90 e2       	ldi	r25, 0x20	; 32
     c60:	05 c0       	rjmp	.+10     	; 0xc6c <dtoa_prf+0x54>
     c62:	9d e2       	ldi	r25, 0x2D	; 45
     c64:	03 c0       	rjmp	.+6      	; 0xc6c <dtoa_prf+0x54>
     c66:	9b e2       	ldi	r25, 0x2B	; 43
     c68:	01 c0       	rjmp	.+2      	; 0xc6c <dtoa_prf+0x54>
     c6a:	90 e0       	ldi	r25, 0x00	; 0
     c6c:	5e 2d       	mov	r21, r14
     c6e:	50 71       	andi	r21, 0x10	; 16
     c70:	43 ff       	sbrs	r20, 3
     c72:	3c c0       	rjmp	.+120    	; 0xcec <dtoa_prf+0xd4>
     c74:	91 11       	cpse	r25, r1
     c76:	02 c0       	rjmp	.+4      	; 0xc7c <dtoa_prf+0x64>
     c78:	83 e0       	ldi	r24, 0x03	; 3
     c7a:	01 c0       	rjmp	.+2      	; 0xc7e <dtoa_prf+0x66>
     c7c:	84 e0       	ldi	r24, 0x04	; 4
     c7e:	81 17       	cp	r24, r17
     c80:	18 f4       	brcc	.+6      	; 0xc88 <dtoa_prf+0x70>
     c82:	21 2f       	mov	r18, r17
     c84:	28 1b       	sub	r18, r24
     c86:	01 c0       	rjmp	.+2      	; 0xc8a <dtoa_prf+0x72>
     c88:	20 e0       	ldi	r18, 0x00	; 0
     c8a:	51 11       	cpse	r21, r1
     c8c:	0b c0       	rjmp	.+22     	; 0xca4 <dtoa_prf+0x8c>
     c8e:	f6 01       	movw	r30, r12
     c90:	82 2f       	mov	r24, r18
     c92:	30 e2       	ldi	r19, 0x20	; 32
     c94:	88 23       	and	r24, r24
     c96:	19 f0       	breq	.+6      	; 0xc9e <dtoa_prf+0x86>
     c98:	31 93       	st	Z+, r19
     c9a:	81 50       	subi	r24, 0x01	; 1
     c9c:	fb cf       	rjmp	.-10     	; 0xc94 <dtoa_prf+0x7c>
     c9e:	c2 0e       	add	r12, r18
     ca0:	d1 1c       	adc	r13, r1
     ca2:	20 e0       	ldi	r18, 0x00	; 0
     ca4:	99 23       	and	r25, r25
     ca6:	29 f0       	breq	.+10     	; 0xcb2 <dtoa_prf+0x9a>
     ca8:	d6 01       	movw	r26, r12
     caa:	9c 93       	st	X, r25
     cac:	f6 01       	movw	r30, r12
     cae:	31 96       	adiw	r30, 0x01	; 1
     cb0:	6f 01       	movw	r12, r30
     cb2:	c6 01       	movw	r24, r12
     cb4:	03 96       	adiw	r24, 0x03	; 3
     cb6:	e2 fe       	sbrs	r14, 2
     cb8:	0a c0       	rjmp	.+20     	; 0xcce <dtoa_prf+0xb6>
     cba:	3e e4       	ldi	r19, 0x4E	; 78
     cbc:	d6 01       	movw	r26, r12
     cbe:	3c 93       	st	X, r19
     cc0:	41 e4       	ldi	r20, 0x41	; 65
     cc2:	11 96       	adiw	r26, 0x01	; 1
     cc4:	4c 93       	st	X, r20
     cc6:	11 97       	sbiw	r26, 0x01	; 1
     cc8:	12 96       	adiw	r26, 0x02	; 2
     cca:	3c 93       	st	X, r19
     ccc:	06 c0       	rjmp	.+12     	; 0xcda <dtoa_prf+0xc2>
     cce:	3e e6       	ldi	r19, 0x6E	; 110
     cd0:	f6 01       	movw	r30, r12
     cd2:	30 83       	st	Z, r19
     cd4:	41 e6       	ldi	r20, 0x61	; 97
     cd6:	41 83       	std	Z+1, r20	; 0x01
     cd8:	32 83       	std	Z+2, r19	; 0x02
     cda:	fc 01       	movw	r30, r24
     cdc:	32 2f       	mov	r19, r18
     cde:	40 e2       	ldi	r20, 0x20	; 32
     ce0:	33 23       	and	r19, r19
     ce2:	09 f4       	brne	.+2      	; 0xce6 <dtoa_prf+0xce>
     ce4:	42 c0       	rjmp	.+132    	; 0xd6a <dtoa_prf+0x152>
     ce6:	41 93       	st	Z+, r20
     ce8:	31 50       	subi	r19, 0x01	; 1
     cea:	fa cf       	rjmp	.-12     	; 0xce0 <dtoa_prf+0xc8>
     cec:	42 ff       	sbrs	r20, 2
     cee:	44 c0       	rjmp	.+136    	; 0xd78 <dtoa_prf+0x160>
     cf0:	91 11       	cpse	r25, r1
     cf2:	02 c0       	rjmp	.+4      	; 0xcf8 <dtoa_prf+0xe0>
     cf4:	83 e0       	ldi	r24, 0x03	; 3
     cf6:	01 c0       	rjmp	.+2      	; 0xcfa <dtoa_prf+0xe2>
     cf8:	84 e0       	ldi	r24, 0x04	; 4
     cfa:	81 17       	cp	r24, r17
     cfc:	18 f4       	brcc	.+6      	; 0xd04 <dtoa_prf+0xec>
     cfe:	21 2f       	mov	r18, r17
     d00:	28 1b       	sub	r18, r24
     d02:	01 c0       	rjmp	.+2      	; 0xd06 <dtoa_prf+0xee>
     d04:	20 e0       	ldi	r18, 0x00	; 0
     d06:	51 11       	cpse	r21, r1
     d08:	0b c0       	rjmp	.+22     	; 0xd20 <dtoa_prf+0x108>
     d0a:	f6 01       	movw	r30, r12
     d0c:	82 2f       	mov	r24, r18
     d0e:	30 e2       	ldi	r19, 0x20	; 32
     d10:	88 23       	and	r24, r24
     d12:	19 f0       	breq	.+6      	; 0xd1a <dtoa_prf+0x102>
     d14:	31 93       	st	Z+, r19
     d16:	81 50       	subi	r24, 0x01	; 1
     d18:	fb cf       	rjmp	.-10     	; 0xd10 <dtoa_prf+0xf8>
     d1a:	c2 0e       	add	r12, r18
     d1c:	d1 1c       	adc	r13, r1
     d1e:	20 e0       	ldi	r18, 0x00	; 0
     d20:	99 23       	and	r25, r25
     d22:	29 f0       	breq	.+10     	; 0xd2e <dtoa_prf+0x116>
     d24:	d6 01       	movw	r26, r12
     d26:	9c 93       	st	X, r25
     d28:	f6 01       	movw	r30, r12
     d2a:	31 96       	adiw	r30, 0x01	; 1
     d2c:	6f 01       	movw	r12, r30
     d2e:	c6 01       	movw	r24, r12
     d30:	03 96       	adiw	r24, 0x03	; 3
     d32:	e2 fe       	sbrs	r14, 2
     d34:	0b c0       	rjmp	.+22     	; 0xd4c <dtoa_prf+0x134>
     d36:	39 e4       	ldi	r19, 0x49	; 73
     d38:	d6 01       	movw	r26, r12
     d3a:	3c 93       	st	X, r19
     d3c:	3e e4       	ldi	r19, 0x4E	; 78
     d3e:	11 96       	adiw	r26, 0x01	; 1
     d40:	3c 93       	st	X, r19
     d42:	11 97       	sbiw	r26, 0x01	; 1
     d44:	36 e4       	ldi	r19, 0x46	; 70
     d46:	12 96       	adiw	r26, 0x02	; 2
     d48:	3c 93       	st	X, r19
     d4a:	07 c0       	rjmp	.+14     	; 0xd5a <dtoa_prf+0x142>
     d4c:	39 e6       	ldi	r19, 0x69	; 105
     d4e:	f6 01       	movw	r30, r12
     d50:	30 83       	st	Z, r19
     d52:	3e e6       	ldi	r19, 0x6E	; 110
     d54:	31 83       	std	Z+1, r19	; 0x01
     d56:	36 e6       	ldi	r19, 0x66	; 102
     d58:	32 83       	std	Z+2, r19	; 0x02
     d5a:	fc 01       	movw	r30, r24
     d5c:	32 2f       	mov	r19, r18
     d5e:	40 e2       	ldi	r20, 0x20	; 32
     d60:	33 23       	and	r19, r19
     d62:	19 f0       	breq	.+6      	; 0xd6a <dtoa_prf+0x152>
     d64:	41 93       	st	Z+, r20
     d66:	31 50       	subi	r19, 0x01	; 1
     d68:	fb cf       	rjmp	.-10     	; 0xd60 <dtoa_prf+0x148>
     d6a:	fc 01       	movw	r30, r24
     d6c:	e2 0f       	add	r30, r18
     d6e:	f1 1d       	adc	r31, r1
     d70:	10 82       	st	Z, r1
     d72:	8e ef       	ldi	r24, 0xFE	; 254
     d74:	9f ef       	ldi	r25, 0xFF	; 255
     d76:	a6 c0       	rjmp	.+332    	; 0xec4 <dtoa_prf+0x2ac>
     d78:	21 e0       	ldi	r18, 0x01	; 1
     d7a:	30 e0       	ldi	r19, 0x00	; 0
     d7c:	91 11       	cpse	r25, r1
     d7e:	02 c0       	rjmp	.+4      	; 0xd84 <dtoa_prf+0x16c>
     d80:	20 e0       	ldi	r18, 0x00	; 0
     d82:	30 e0       	ldi	r19, 0x00	; 0
     d84:	16 16       	cp	r1, r22
     d86:	17 06       	cpc	r1, r23
     d88:	1c f4       	brge	.+6      	; 0xd90 <dtoa_prf+0x178>
     d8a:	fb 01       	movw	r30, r22
     d8c:	31 96       	adiw	r30, 0x01	; 1
     d8e:	02 c0       	rjmp	.+4      	; 0xd94 <dtoa_prf+0x17c>
     d90:	e1 e0       	ldi	r30, 0x01	; 1
     d92:	f0 e0       	ldi	r31, 0x00	; 0
     d94:	2e 0f       	add	r18, r30
     d96:	3f 1f       	adc	r19, r31
     d98:	bb 20       	and	r11, r11
     d9a:	21 f0       	breq	.+8      	; 0xda4 <dtoa_prf+0x18c>
     d9c:	eb 2d       	mov	r30, r11
     d9e:	f0 e0       	ldi	r31, 0x00	; 0
     da0:	31 96       	adiw	r30, 0x01	; 1
     da2:	02 c0       	rjmp	.+4      	; 0xda8 <dtoa_prf+0x190>
     da4:	e0 e0       	ldi	r30, 0x00	; 0
     da6:	f0 e0       	ldi	r31, 0x00	; 0
     da8:	2e 0f       	add	r18, r30
     daa:	3f 1f       	adc	r19, r31
     dac:	e1 2f       	mov	r30, r17
     dae:	f0 e0       	ldi	r31, 0x00	; 0
     db0:	2e 17       	cp	r18, r30
     db2:	3f 07       	cpc	r19, r31
     db4:	1c f4       	brge	.+6      	; 0xdbc <dtoa_prf+0x1a4>
     db6:	12 1b       	sub	r17, r18
     db8:	21 2f       	mov	r18, r17
     dba:	01 c0       	rjmp	.+2      	; 0xdbe <dtoa_prf+0x1a6>
     dbc:	20 e0       	ldi	r18, 0x00	; 0
     dbe:	8e 2d       	mov	r24, r14
     dc0:	88 71       	andi	r24, 0x18	; 24
     dc2:	59 f4       	brne	.+22     	; 0xdda <dtoa_prf+0x1c2>
     dc4:	f6 01       	movw	r30, r12
     dc6:	82 2f       	mov	r24, r18
     dc8:	30 e2       	ldi	r19, 0x20	; 32
     dca:	88 23       	and	r24, r24
     dcc:	19 f0       	breq	.+6      	; 0xdd4 <dtoa_prf+0x1bc>
     dce:	31 93       	st	Z+, r19
     dd0:	81 50       	subi	r24, 0x01	; 1
     dd2:	fb cf       	rjmp	.-10     	; 0xdca <dtoa_prf+0x1b2>
     dd4:	c2 0e       	add	r12, r18
     dd6:	d1 1c       	adc	r13, r1
     dd8:	20 e0       	ldi	r18, 0x00	; 0
     dda:	99 23       	and	r25, r25
     ddc:	29 f0       	breq	.+10     	; 0xde8 <dtoa_prf+0x1d0>
     dde:	d6 01       	movw	r26, r12
     de0:	9c 93       	st	X, r25
     de2:	f6 01       	movw	r30, r12
     de4:	31 96       	adiw	r30, 0x01	; 1
     de6:	6f 01       	movw	r12, r30
     de8:	51 11       	cpse	r21, r1
     dea:	0b c0       	rjmp	.+22     	; 0xe02 <dtoa_prf+0x1ea>
     dec:	f6 01       	movw	r30, r12
     dee:	82 2f       	mov	r24, r18
     df0:	90 e3       	ldi	r25, 0x30	; 48
     df2:	88 23       	and	r24, r24
     df4:	19 f0       	breq	.+6      	; 0xdfc <dtoa_prf+0x1e4>
     df6:	91 93       	st	Z+, r25
     df8:	81 50       	subi	r24, 0x01	; 1
     dfa:	fb cf       	rjmp	.-10     	; 0xdf2 <dtoa_prf+0x1da>
     dfc:	c2 0e       	add	r12, r18
     dfe:	d1 1c       	adc	r13, r1
     e00:	20 e0       	ldi	r18, 0x00	; 0
     e02:	0f 2d       	mov	r16, r15
     e04:	06 0f       	add	r16, r22
     e06:	9a 81       	ldd	r25, Y+2	; 0x02
     e08:	34 2f       	mov	r19, r20
     e0a:	30 71       	andi	r19, 0x10	; 16
     e0c:	44 ff       	sbrs	r20, 4
     e0e:	03 c0       	rjmp	.+6      	; 0xe16 <dtoa_prf+0x1fe>
     e10:	91 33       	cpi	r25, 0x31	; 49
     e12:	09 f4       	brne	.+2      	; 0xe16 <dtoa_prf+0x1fe>
     e14:	01 50       	subi	r16, 0x01	; 1
     e16:	10 16       	cp	r1, r16
     e18:	24 f4       	brge	.+8      	; 0xe22 <dtoa_prf+0x20a>
     e1a:	09 30       	cpi	r16, 0x09	; 9
     e1c:	18 f0       	brcs	.+6      	; 0xe24 <dtoa_prf+0x20c>
     e1e:	08 e0       	ldi	r16, 0x08	; 8
     e20:	01 c0       	rjmp	.+2      	; 0xe24 <dtoa_prf+0x20c>
     e22:	01 e0       	ldi	r16, 0x01	; 1
     e24:	ab 01       	movw	r20, r22
     e26:	77 ff       	sbrs	r23, 7
     e28:	02 c0       	rjmp	.+4      	; 0xe2e <dtoa_prf+0x216>
     e2a:	40 e0       	ldi	r20, 0x00	; 0
     e2c:	50 e0       	ldi	r21, 0x00	; 0
     e2e:	fb 01       	movw	r30, r22
     e30:	e4 1b       	sub	r30, r20
     e32:	f5 0b       	sbc	r31, r21
     e34:	a1 e0       	ldi	r26, 0x01	; 1
     e36:	b0 e0       	ldi	r27, 0x00	; 0
     e38:	ac 0f       	add	r26, r28
     e3a:	bd 1f       	adc	r27, r29
     e3c:	ea 0f       	add	r30, r26
     e3e:	fb 1f       	adc	r31, r27
     e40:	8e e2       	ldi	r24, 0x2E	; 46
     e42:	a8 2e       	mov	r10, r24
     e44:	4b 01       	movw	r8, r22
     e46:	80 1a       	sub	r8, r16
     e48:	91 08       	sbc	r9, r1
     e4a:	0b 2d       	mov	r16, r11
     e4c:	10 e0       	ldi	r17, 0x00	; 0
     e4e:	11 95       	neg	r17
     e50:	01 95       	neg	r16
     e52:	11 09       	sbc	r17, r1
     e54:	4f 3f       	cpi	r20, 0xFF	; 255
     e56:	bf ef       	ldi	r27, 0xFF	; 255
     e58:	5b 07       	cpc	r21, r27
     e5a:	21 f4       	brne	.+8      	; 0xe64 <dtoa_prf+0x24c>
     e5c:	d6 01       	movw	r26, r12
     e5e:	ac 92       	st	X, r10
     e60:	11 96       	adiw	r26, 0x01	; 1
     e62:	6d 01       	movw	r12, r26
     e64:	64 17       	cp	r22, r20
     e66:	75 07       	cpc	r23, r21
     e68:	2c f0       	brlt	.+10     	; 0xe74 <dtoa_prf+0x25c>
     e6a:	84 16       	cp	r8, r20
     e6c:	95 06       	cpc	r9, r21
     e6e:	14 f4       	brge	.+4      	; 0xe74 <dtoa_prf+0x25c>
     e70:	81 81       	ldd	r24, Z+1	; 0x01
     e72:	01 c0       	rjmp	.+2      	; 0xe76 <dtoa_prf+0x25e>
     e74:	80 e3       	ldi	r24, 0x30	; 48
     e76:	41 50       	subi	r20, 0x01	; 1
     e78:	51 09       	sbc	r21, r1
     e7a:	31 96       	adiw	r30, 0x01	; 1
     e7c:	d6 01       	movw	r26, r12
     e7e:	11 96       	adiw	r26, 0x01	; 1
     e80:	7d 01       	movw	r14, r26
     e82:	40 17       	cp	r20, r16
     e84:	51 07       	cpc	r21, r17
     e86:	24 f0       	brlt	.+8      	; 0xe90 <dtoa_prf+0x278>
     e88:	d6 01       	movw	r26, r12
     e8a:	8c 93       	st	X, r24
     e8c:	67 01       	movw	r12, r14
     e8e:	e2 cf       	rjmp	.-60     	; 0xe54 <dtoa_prf+0x23c>
     e90:	64 17       	cp	r22, r20
     e92:	75 07       	cpc	r23, r21
     e94:	39 f4       	brne	.+14     	; 0xea4 <dtoa_prf+0x28c>
     e96:	96 33       	cpi	r25, 0x36	; 54
     e98:	20 f4       	brcc	.+8      	; 0xea2 <dtoa_prf+0x28a>
     e9a:	95 33       	cpi	r25, 0x35	; 53
     e9c:	19 f4       	brne	.+6      	; 0xea4 <dtoa_prf+0x28c>
     e9e:	31 11       	cpse	r19, r1
     ea0:	01 c0       	rjmp	.+2      	; 0xea4 <dtoa_prf+0x28c>
     ea2:	81 e3       	ldi	r24, 0x31	; 49
     ea4:	f6 01       	movw	r30, r12
     ea6:	80 83       	st	Z, r24
     ea8:	f7 01       	movw	r30, r14
     eaa:	82 2f       	mov	r24, r18
     eac:	90 e2       	ldi	r25, 0x20	; 32
     eae:	88 23       	and	r24, r24
     eb0:	19 f0       	breq	.+6      	; 0xeb8 <dtoa_prf+0x2a0>
     eb2:	91 93       	st	Z+, r25
     eb4:	81 50       	subi	r24, 0x01	; 1
     eb6:	fb cf       	rjmp	.-10     	; 0xeae <dtoa_prf+0x296>
     eb8:	f7 01       	movw	r30, r14
     eba:	e2 0f       	add	r30, r18
     ebc:	f1 1d       	adc	r31, r1
     ebe:	10 82       	st	Z, r1
     ec0:	80 e0       	ldi	r24, 0x00	; 0
     ec2:	90 e0       	ldi	r25, 0x00	; 0
     ec4:	29 96       	adiw	r28, 0x09	; 9
     ec6:	ec e0       	ldi	r30, 0x0C	; 12
     ec8:	0c 94 90 08 	jmp	0x1120	; 0x1120 <__epilogue_restores__+0xc>

00000ecc <__ftoa_engine>:
     ecc:	28 30       	cpi	r18, 0x08	; 8
     ece:	08 f0       	brcs	.+2      	; 0xed2 <__ftoa_engine+0x6>
     ed0:	27 e0       	ldi	r18, 0x07	; 7
     ed2:	33 27       	eor	r19, r19
     ed4:	da 01       	movw	r26, r20
     ed6:	99 0f       	add	r25, r25
     ed8:	31 1d       	adc	r19, r1
     eda:	87 fd       	sbrc	r24, 7
     edc:	91 60       	ori	r25, 0x01	; 1
     ede:	00 96       	adiw	r24, 0x00	; 0
     ee0:	61 05       	cpc	r22, r1
     ee2:	71 05       	cpc	r23, r1
     ee4:	39 f4       	brne	.+14     	; 0xef4 <__ftoa_engine+0x28>
     ee6:	32 60       	ori	r19, 0x02	; 2
     ee8:	2e 5f       	subi	r18, 0xFE	; 254
     eea:	3d 93       	st	X+, r19
     eec:	30 e3       	ldi	r19, 0x30	; 48
     eee:	2a 95       	dec	r18
     ef0:	e1 f7       	brne	.-8      	; 0xeea <__ftoa_engine+0x1e>
     ef2:	08 95       	ret
     ef4:	9f 3f       	cpi	r25, 0xFF	; 255
     ef6:	30 f0       	brcs	.+12     	; 0xf04 <__ftoa_engine+0x38>
     ef8:	80 38       	cpi	r24, 0x80	; 128
     efa:	71 05       	cpc	r23, r1
     efc:	61 05       	cpc	r22, r1
     efe:	09 f0       	breq	.+2      	; 0xf02 <__ftoa_engine+0x36>
     f00:	3c 5f       	subi	r19, 0xFC	; 252
     f02:	3c 5f       	subi	r19, 0xFC	; 252
     f04:	3d 93       	st	X+, r19
     f06:	91 30       	cpi	r25, 0x01	; 1
     f08:	08 f0       	brcs	.+2      	; 0xf0c <__ftoa_engine+0x40>
     f0a:	80 68       	ori	r24, 0x80	; 128
     f0c:	91 1d       	adc	r25, r1
     f0e:	df 93       	push	r29
     f10:	cf 93       	push	r28
     f12:	1f 93       	push	r17
     f14:	0f 93       	push	r16
     f16:	ff 92       	push	r15
     f18:	ef 92       	push	r14
     f1a:	19 2f       	mov	r17, r25
     f1c:	98 7f       	andi	r25, 0xF8	; 248
     f1e:	96 95       	lsr	r25
     f20:	e9 2f       	mov	r30, r25
     f22:	96 95       	lsr	r25
     f24:	96 95       	lsr	r25
     f26:	e9 0f       	add	r30, r25
     f28:	ff 27       	eor	r31, r31
     f2a:	e2 55       	subi	r30, 0x52	; 82
     f2c:	ff 4f       	sbci	r31, 0xFF	; 255
     f2e:	99 27       	eor	r25, r25
     f30:	33 27       	eor	r19, r19
     f32:	ee 24       	eor	r14, r14
     f34:	ff 24       	eor	r15, r15
     f36:	a7 01       	movw	r20, r14
     f38:	e7 01       	movw	r28, r14
     f3a:	05 90       	lpm	r0, Z+
     f3c:	08 94       	sec
     f3e:	07 94       	ror	r0
     f40:	28 f4       	brcc	.+10     	; 0xf4c <__ftoa_engine+0x80>
     f42:	36 0f       	add	r19, r22
     f44:	e7 1e       	adc	r14, r23
     f46:	f8 1e       	adc	r15, r24
     f48:	49 1f       	adc	r20, r25
     f4a:	51 1d       	adc	r21, r1
     f4c:	66 0f       	add	r22, r22
     f4e:	77 1f       	adc	r23, r23
     f50:	88 1f       	adc	r24, r24
     f52:	99 1f       	adc	r25, r25
     f54:	06 94       	lsr	r0
     f56:	a1 f7       	brne	.-24     	; 0xf40 <__ftoa_engine+0x74>
     f58:	05 90       	lpm	r0, Z+
     f5a:	07 94       	ror	r0
     f5c:	28 f4       	brcc	.+10     	; 0xf68 <__ftoa_engine+0x9c>
     f5e:	e7 0e       	add	r14, r23
     f60:	f8 1e       	adc	r15, r24
     f62:	49 1f       	adc	r20, r25
     f64:	56 1f       	adc	r21, r22
     f66:	c1 1d       	adc	r28, r1
     f68:	77 0f       	add	r23, r23
     f6a:	88 1f       	adc	r24, r24
     f6c:	99 1f       	adc	r25, r25
     f6e:	66 1f       	adc	r22, r22
     f70:	06 94       	lsr	r0
     f72:	a1 f7       	brne	.-24     	; 0xf5c <__ftoa_engine+0x90>
     f74:	05 90       	lpm	r0, Z+
     f76:	07 94       	ror	r0
     f78:	28 f4       	brcc	.+10     	; 0xf84 <__ftoa_engine+0xb8>
     f7a:	f8 0e       	add	r15, r24
     f7c:	49 1f       	adc	r20, r25
     f7e:	56 1f       	adc	r21, r22
     f80:	c7 1f       	adc	r28, r23
     f82:	d1 1d       	adc	r29, r1
     f84:	88 0f       	add	r24, r24
     f86:	99 1f       	adc	r25, r25
     f88:	66 1f       	adc	r22, r22
     f8a:	77 1f       	adc	r23, r23
     f8c:	06 94       	lsr	r0
     f8e:	a1 f7       	brne	.-24     	; 0xf78 <__ftoa_engine+0xac>
     f90:	05 90       	lpm	r0, Z+
     f92:	07 94       	ror	r0
     f94:	20 f4       	brcc	.+8      	; 0xf9e <__ftoa_engine+0xd2>
     f96:	49 0f       	add	r20, r25
     f98:	56 1f       	adc	r21, r22
     f9a:	c7 1f       	adc	r28, r23
     f9c:	d8 1f       	adc	r29, r24
     f9e:	99 0f       	add	r25, r25
     fa0:	66 1f       	adc	r22, r22
     fa2:	77 1f       	adc	r23, r23
     fa4:	88 1f       	adc	r24, r24
     fa6:	06 94       	lsr	r0
     fa8:	a9 f7       	brne	.-22     	; 0xf94 <__ftoa_engine+0xc8>
     faa:	84 91       	lpm	r24, Z
     fac:	10 95       	com	r17
     fae:	17 70       	andi	r17, 0x07	; 7
     fb0:	41 f0       	breq	.+16     	; 0xfc2 <__ftoa_engine+0xf6>
     fb2:	d6 95       	lsr	r29
     fb4:	c7 95       	ror	r28
     fb6:	57 95       	ror	r21
     fb8:	47 95       	ror	r20
     fba:	f7 94       	ror	r15
     fbc:	e7 94       	ror	r14
     fbe:	1a 95       	dec	r17
     fc0:	c1 f7       	brne	.-16     	; 0xfb2 <__ftoa_engine+0xe6>
     fc2:	e4 e5       	ldi	r30, 0x54	; 84
     fc4:	f0 e0       	ldi	r31, 0x00	; 0
     fc6:	68 94       	set
     fc8:	15 90       	lpm	r1, Z+
     fca:	15 91       	lpm	r17, Z+
     fcc:	35 91       	lpm	r19, Z+
     fce:	65 91       	lpm	r22, Z+
     fd0:	95 91       	lpm	r25, Z+
     fd2:	05 90       	lpm	r0, Z+
     fd4:	7f e2       	ldi	r23, 0x2F	; 47
     fd6:	73 95       	inc	r23
     fd8:	e1 18       	sub	r14, r1
     fda:	f1 0a       	sbc	r15, r17
     fdc:	43 0b       	sbc	r20, r19
     fde:	56 0b       	sbc	r21, r22
     fe0:	c9 0b       	sbc	r28, r25
     fe2:	d0 09       	sbc	r29, r0
     fe4:	c0 f7       	brcc	.-16     	; 0xfd6 <__ftoa_engine+0x10a>
     fe6:	e1 0c       	add	r14, r1
     fe8:	f1 1e       	adc	r15, r17
     fea:	43 1f       	adc	r20, r19
     fec:	56 1f       	adc	r21, r22
     fee:	c9 1f       	adc	r28, r25
     ff0:	d0 1d       	adc	r29, r0
     ff2:	7e f4       	brtc	.+30     	; 0x1012 <__ftoa_engine+0x146>
     ff4:	70 33       	cpi	r23, 0x30	; 48
     ff6:	11 f4       	brne	.+4      	; 0xffc <__ftoa_engine+0x130>
     ff8:	8a 95       	dec	r24
     ffa:	e6 cf       	rjmp	.-52     	; 0xfc8 <__ftoa_engine+0xfc>
     ffc:	e8 94       	clt
     ffe:	01 50       	subi	r16, 0x01	; 1
    1000:	30 f0       	brcs	.+12     	; 0x100e <__ftoa_engine+0x142>
    1002:	08 0f       	add	r16, r24
    1004:	0a f4       	brpl	.+2      	; 0x1008 <__ftoa_engine+0x13c>
    1006:	00 27       	eor	r16, r16
    1008:	02 17       	cp	r16, r18
    100a:	08 f4       	brcc	.+2      	; 0x100e <__ftoa_engine+0x142>
    100c:	20 2f       	mov	r18, r16
    100e:	23 95       	inc	r18
    1010:	02 2f       	mov	r16, r18
    1012:	7a 33       	cpi	r23, 0x3A	; 58
    1014:	28 f0       	brcs	.+10     	; 0x1020 <__ftoa_engine+0x154>
    1016:	79 e3       	ldi	r23, 0x39	; 57
    1018:	7d 93       	st	X+, r23
    101a:	2a 95       	dec	r18
    101c:	e9 f7       	brne	.-6      	; 0x1018 <__ftoa_engine+0x14c>
    101e:	10 c0       	rjmp	.+32     	; 0x1040 <__ftoa_engine+0x174>
    1020:	7d 93       	st	X+, r23
    1022:	2a 95       	dec	r18
    1024:	89 f6       	brne	.-94     	; 0xfc8 <__ftoa_engine+0xfc>
    1026:	06 94       	lsr	r0
    1028:	97 95       	ror	r25
    102a:	67 95       	ror	r22
    102c:	37 95       	ror	r19
    102e:	17 95       	ror	r17
    1030:	17 94       	ror	r1
    1032:	e1 18       	sub	r14, r1
    1034:	f1 0a       	sbc	r15, r17
    1036:	43 0b       	sbc	r20, r19
    1038:	56 0b       	sbc	r21, r22
    103a:	c9 0b       	sbc	r28, r25
    103c:	d0 09       	sbc	r29, r0
    103e:	98 f0       	brcs	.+38     	; 0x1066 <__ftoa_engine+0x19a>
    1040:	23 95       	inc	r18
    1042:	7e 91       	ld	r23, -X
    1044:	73 95       	inc	r23
    1046:	7a 33       	cpi	r23, 0x3A	; 58
    1048:	08 f0       	brcs	.+2      	; 0x104c <__ftoa_engine+0x180>
    104a:	70 e3       	ldi	r23, 0x30	; 48
    104c:	7c 93       	st	X, r23
    104e:	20 13       	cpse	r18, r16
    1050:	b8 f7       	brcc	.-18     	; 0x1040 <__ftoa_engine+0x174>
    1052:	7e 91       	ld	r23, -X
    1054:	70 61       	ori	r23, 0x10	; 16
    1056:	7d 93       	st	X+, r23
    1058:	30 f0       	brcs	.+12     	; 0x1066 <__ftoa_engine+0x19a>
    105a:	83 95       	inc	r24
    105c:	71 e3       	ldi	r23, 0x31	; 49
    105e:	7d 93       	st	X+, r23
    1060:	70 e3       	ldi	r23, 0x30	; 48
    1062:	2a 95       	dec	r18
    1064:	e1 f7       	brne	.-8      	; 0x105e <__ftoa_engine+0x192>
    1066:	11 24       	eor	r1, r1
    1068:	ef 90       	pop	r14
    106a:	ff 90       	pop	r15
    106c:	0f 91       	pop	r16
    106e:	1f 91       	pop	r17
    1070:	cf 91       	pop	r28
    1072:	df 91       	pop	r29
    1074:	99 27       	eor	r25, r25
    1076:	87 fd       	sbrc	r24, 7
    1078:	90 95       	com	r25
    107a:	08 95       	ret

0000107c <eeprom_read_dword>:
    107c:	a6 e1       	ldi	r26, 0x16	; 22
    107e:	b0 e0       	ldi	r27, 0x00	; 0
    1080:	44 e0       	ldi	r20, 0x04	; 4
    1082:	50 e0       	ldi	r21, 0x00	; 0
    1084:	0c 94 53 08 	jmp	0x10a6	; 0x10a6 <eeprom_read_blraw>

00001088 <eeprom_write_dword>:
    1088:	24 2f       	mov	r18, r20
    108a:	0e 94 62 08 	call	0x10c4	; 0x10c4 <eeprom_write_r18>
    108e:	25 2f       	mov	r18, r21
    1090:	0e 94 62 08 	call	0x10c4	; 0x10c4 <eeprom_write_r18>
    1094:	0c 94 4c 08 	jmp	0x1098	; 0x1098 <eeprom_write_word>

00001098 <eeprom_write_word>:
    1098:	0e 94 61 08 	call	0x10c2	; 0x10c2 <eeprom_write_byte>
    109c:	27 2f       	mov	r18, r23
    109e:	0c 94 62 08 	jmp	0x10c4	; 0x10c4 <eeprom_write_r18>

000010a2 <eeprom_read_block>:
    10a2:	dc 01       	movw	r26, r24
    10a4:	cb 01       	movw	r24, r22

000010a6 <eeprom_read_blraw>:
    10a6:	fc 01       	movw	r30, r24
    10a8:	e1 99       	sbic	0x1c, 1	; 28
    10aa:	fe cf       	rjmp	.-4      	; 0x10a8 <eeprom_read_blraw+0x2>
    10ac:	06 c0       	rjmp	.+12     	; 0x10ba <eeprom_read_blraw+0x14>
    10ae:	ff bb       	out	0x1f, r31	; 31
    10b0:	ee bb       	out	0x1e, r30	; 30
    10b2:	e0 9a       	sbi	0x1c, 0	; 28
    10b4:	31 96       	adiw	r30, 0x01	; 1
    10b6:	0d b2       	in	r0, 0x1d	; 29
    10b8:	0d 92       	st	X+, r0
    10ba:	41 50       	subi	r20, 0x01	; 1
    10bc:	50 40       	sbci	r21, 0x00	; 0
    10be:	b8 f7       	brcc	.-18     	; 0x10ae <eeprom_read_blraw+0x8>
    10c0:	08 95       	ret

000010c2 <eeprom_write_byte>:
    10c2:	26 2f       	mov	r18, r22

000010c4 <eeprom_write_r18>:
    10c4:	e1 99       	sbic	0x1c, 1	; 28
    10c6:	fe cf       	rjmp	.-4      	; 0x10c4 <eeprom_write_r18>
    10c8:	9f bb       	out	0x1f, r25	; 31
    10ca:	8e bb       	out	0x1e, r24	; 30
    10cc:	2d bb       	out	0x1d, r18	; 29
    10ce:	0f b6       	in	r0, 0x3f	; 63
    10d0:	f8 94       	cli
    10d2:	e2 9a       	sbi	0x1c, 2	; 28
    10d4:	e1 9a       	sbi	0x1c, 1	; 28
    10d6:	0f be       	out	0x3f, r0	; 63
    10d8:	01 96       	adiw	r24, 0x01	; 1
    10da:	08 95       	ret

000010dc <__prologue_saves__>:
    10dc:	2f 92       	push	r2
    10de:	3f 92       	push	r3
    10e0:	4f 92       	push	r4
    10e2:	5f 92       	push	r5
    10e4:	6f 92       	push	r6
    10e6:	7f 92       	push	r7
    10e8:	8f 92       	push	r8
    10ea:	9f 92       	push	r9
    10ec:	af 92       	push	r10
    10ee:	bf 92       	push	r11
    10f0:	cf 92       	push	r12
    10f2:	df 92       	push	r13
    10f4:	ef 92       	push	r14
    10f6:	ff 92       	push	r15
    10f8:	0f 93       	push	r16
    10fa:	1f 93       	push	r17
    10fc:	cf 93       	push	r28
    10fe:	df 93       	push	r29
    1100:	cd b7       	in	r28, 0x3d	; 61
    1102:	de b7       	in	r29, 0x3e	; 62
    1104:	ca 1b       	sub	r28, r26
    1106:	db 0b       	sbc	r29, r27
    1108:	0f b6       	in	r0, 0x3f	; 63
    110a:	f8 94       	cli
    110c:	de bf       	out	0x3e, r29	; 62
    110e:	0f be       	out	0x3f, r0	; 63
    1110:	cd bf       	out	0x3d, r28	; 61
    1112:	09 94       	ijmp

00001114 <__epilogue_restores__>:
    1114:	2a 88       	ldd	r2, Y+18	; 0x12
    1116:	39 88       	ldd	r3, Y+17	; 0x11
    1118:	48 88       	ldd	r4, Y+16	; 0x10
    111a:	5f 84       	ldd	r5, Y+15	; 0x0f
    111c:	6e 84       	ldd	r6, Y+14	; 0x0e
    111e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1120:	8c 84       	ldd	r8, Y+12	; 0x0c
    1122:	9b 84       	ldd	r9, Y+11	; 0x0b
    1124:	aa 84       	ldd	r10, Y+10	; 0x0a
    1126:	b9 84       	ldd	r11, Y+9	; 0x09
    1128:	c8 84       	ldd	r12, Y+8	; 0x08
    112a:	df 80       	ldd	r13, Y+7	; 0x07
    112c:	ee 80       	ldd	r14, Y+6	; 0x06
    112e:	fd 80       	ldd	r15, Y+5	; 0x05
    1130:	0c 81       	ldd	r16, Y+4	; 0x04
    1132:	1b 81       	ldd	r17, Y+3	; 0x03
    1134:	aa 81       	ldd	r26, Y+2	; 0x02
    1136:	b9 81       	ldd	r27, Y+1	; 0x01
    1138:	ce 0f       	add	r28, r30
    113a:	d1 1d       	adc	r29, r1
    113c:	0f b6       	in	r0, 0x3f	; 63
    113e:	f8 94       	cli
    1140:	de bf       	out	0x3e, r29	; 62
    1142:	0f be       	out	0x3f, r0	; 63
    1144:	cd bf       	out	0x3d, r28	; 61
    1146:	ed 01       	movw	r28, r26
    1148:	08 95       	ret

0000114a <_exit>:
    114a:	f8 94       	cli

0000114c <__stop_program>:
    114c:	ff cf       	rjmp	.-2      	; 0x114c <__stop_program>
