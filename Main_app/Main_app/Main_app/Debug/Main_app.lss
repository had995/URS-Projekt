
Main_app.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000ebc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000016  00800060  00000ebc  00000f50  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000014  00800076  00800076  00000f66  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000f66  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000f98  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00000fd4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000148c  00000000  00000000  000010ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000925  00000000  00000000  00002538  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000aa3  00000000  00000000  00002e5d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000238  00000000  00000000  00003900  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000051c  00000000  00000000  00003b38  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000cfb  00000000  00000000  00004054  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  00004d4f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
   4:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
   8:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
   c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  18:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  1c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  20:	0c 94 98 01 	jmp	0x330	; 0x330 <__vector_8>
  24:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  2c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  38:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  4c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>

00000054 <__trampolines_end>:
  54:	00 40       	sbci	r16, 0x00	; 0
  56:	7a 10       	cpse	r7, r10
  58:	f3 5a       	subi	r31, 0xA3	; 163
  5a:	00 a0       	ldd	r0, Z+32	; 0x20
  5c:	72 4e       	sbci	r23, 0xE2	; 226
  5e:	18 09       	sbc	r17, r8
  60:	00 10       	cpse	r0, r0
  62:	a5 d4       	rcall	.+2378   	; 0x9ae <__utoa_common+0x1a>
  64:	e8 00       	.word	0x00e8	; ????
  66:	00 e8       	ldi	r16, 0x80	; 128
  68:	76 48       	sbci	r23, 0x86	; 134
  6a:	17 00       	.word	0x0017	; ????
  6c:	00 e4       	ldi	r16, 0x40	; 64
  6e:	0b 54       	subi	r16, 0x4B	; 75
  70:	02 00       	.word	0x0002	; ????
  72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
  74:	9a 3b       	cpi	r25, 0xBA	; 186
  76:	00 00       	nop
  78:	00 e1       	ldi	r16, 0x10	; 16
  7a:	f5 05       	cpc	r31, r5
  7c:	00 00       	nop
  7e:	80 96       	adiw	r24, 0x20	; 32
  80:	98 00       	.word	0x0098	; ????
  82:	00 00       	nop
  84:	40 42       	sbci	r20, 0x20	; 32
  86:	0f 00       	.word	0x000f	; ????
  88:	00 00       	nop
  8a:	a0 86       	std	Z+8, r10	; 0x08
  8c:	01 00       	.word	0x0001	; ????
  8e:	00 00       	nop
  90:	10 27       	eor	r17, r16
  92:	00 00       	nop
  94:	00 00       	nop
  96:	e8 03       	fmulsu	r22, r16
  98:	00 00       	nop
  9a:	00 00       	nop
  9c:	64 00       	.word	0x0064	; ????
  9e:	00 00       	nop
  a0:	00 00       	nop
  a2:	0a 00       	.word	0x000a	; ????
  a4:	00 00       	nop
  a6:	00 00       	nop
  a8:	01 00       	.word	0x0001	; ????
  aa:	00 00       	nop
  ac:	00 00       	nop
  ae:	2c 76       	andi	r18, 0x6C	; 108
  b0:	d8 88       	ldd	r13, Y+16	; 0x10
  b2:	dc 67       	ori	r29, 0x7C	; 124
  b4:	4f 08       	sbc	r4, r15
  b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
  b8:	c1 df       	rcall	.-126    	; 0x3c <__FUSE_REGION_LENGTH__+0x3a>
  ba:	ae 59       	subi	r26, 0x9E	; 158
  bc:	e1 b1       	in	r30, 0x01	; 1
  be:	b7 96       	adiw	r30, 0x27	; 39
  c0:	e5 e3       	ldi	r30, 0x35	; 53
  c2:	e4 53       	subi	r30, 0x34	; 52
  c4:	c6 3a       	cpi	r28, 0xA6	; 166
  c6:	e6 51       	subi	r30, 0x16	; 22
  c8:	99 76       	andi	r25, 0x69	; 105
  ca:	96 e8       	ldi	r25, 0x86	; 134
  cc:	e6 c2       	rjmp	.+1484   	; 0x69a <main+0x10>
  ce:	84 26       	eor	r8, r20
  d0:	eb 89       	ldd	r30, Y+19	; 0x13
  d2:	8c 9b       	sbis	0x11, 4	; 17
  d4:	62 ed       	ldi	r22, 0xD2	; 210
  d6:	40 7c       	andi	r20, 0xC0	; 192
  d8:	6f fc       	.word	0xfc6f	; ????
  da:	ef bc       	out	0x2f, r14	; 47
  dc:	9c 9f       	mul	r25, r28
  de:	40 f2       	brcs	.-112    	; 0x70 <__trampolines_end+0x1c>
  e0:	ba a5       	ldd	r27, Y+42	; 0x2a
  e2:	6f a5       	ldd	r22, Y+47	; 0x2f
  e4:	f4 90       	lpm	r15, Z
  e6:	05 5a       	subi	r16, 0xA5	; 165
  e8:	2a f7       	brpl	.-54     	; 0xb4 <__trampolines_end+0x60>
  ea:	5c 93       	st	X, r21
  ec:	6b 6c       	ori	r22, 0xCB	; 203
  ee:	f9 67       	ori	r31, 0x79	; 121
  f0:	6d c1       	rjmp	.+730    	; 0x3cc <rotate_clockwise+0x4>
  f2:	1b fc       	.word	0xfc1b	; ????
  f4:	e0 e4       	ldi	r30, 0x40	; 64
  f6:	0d 47       	sbci	r16, 0x7D	; 125
  f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
  fa:	20 e6       	ldi	r18, 0x60	; 96
  fc:	b5 00       	.word	0x00b5	; ????
  fe:	d0 ed       	ldi	r29, 0xD0	; 208
 100:	90 2e       	mov	r9, r16
 102:	03 00       	.word	0x0003	; ????
 104:	94 35       	cpi	r25, 0x54	; 84
 106:	77 05       	cpc	r23, r7
 108:	00 80       	ld	r0, Z
 10a:	84 1e       	adc	r8, r20
 10c:	08 00       	.word	0x0008	; ????
 10e:	00 20       	and	r0, r0
 110:	4e 0a       	sbc	r4, r30
 112:	00 00       	nop
 114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
 116:	0c 33       	cpi	r16, 0x3C	; 60
 118:	33 33       	cpi	r19, 0x33	; 51
 11a:	33 0f       	add	r19, r19
 11c:	98 6e       	ori	r25, 0xE8	; 232
 11e:	12 83       	std	Z+2, r17	; 0x02
 120:	11 41       	sbci	r17, 0x11	; 17
 122:	ef 8d       	ldd	r30, Y+31	; 0x1f
 124:	21 14       	cp	r2, r1
 126:	89 3b       	cpi	r24, 0xB9	; 185
 128:	e6 55       	subi	r30, 0x56	; 86
 12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
 12c:	fe e6       	ldi	r31, 0x6E	; 110
 12e:	db 18       	sub	r13, r11
 130:	d1 84       	ldd	r13, Z+9	; 0x09
 132:	4b 38       	cpi	r20, 0x8B	; 139
 134:	1b f7       	brvc	.-58     	; 0xfc <__trampolines_end+0xa8>
 136:	7c 1d       	adc	r23, r12
 138:	90 1d       	adc	r25, r0
 13a:	a4 bb       	out	0x14, r26	; 20
 13c:	e4 24       	eor	r14, r4
 13e:	20 32       	cpi	r18, 0x20	; 32
 140:	84 72       	andi	r24, 0x24	; 36
 142:	5e 22       	and	r5, r30
 144:	81 00       	.word	0x0081	; ????
 146:	c9 f1       	breq	.+114    	; 0x1ba <lcd_write+0x26>
 148:	24 ec       	ldi	r18, 0xC4	; 196
 14a:	a1 e5       	ldi	r26, 0x51	; 81
 14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
 14e:	11 24       	eor	r1, r1
 150:	1f be       	out	0x3f, r1	; 63
 152:	cf e5       	ldi	r28, 0x5F	; 95
 154:	d4 e0       	ldi	r29, 0x04	; 4
 156:	de bf       	out	0x3e, r29	; 62
 158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
 15a:	10 e0       	ldi	r17, 0x00	; 0
 15c:	a0 e6       	ldi	r26, 0x60	; 96
 15e:	b0 e0       	ldi	r27, 0x00	; 0
 160:	ec eb       	ldi	r30, 0xBC	; 188
 162:	fe e0       	ldi	r31, 0x0E	; 14
 164:	02 c0       	rjmp	.+4      	; 0x16a <__do_copy_data+0x10>
 166:	05 90       	lpm	r0, Z+
 168:	0d 92       	st	X+, r0
 16a:	a6 37       	cpi	r26, 0x76	; 118
 16c:	b1 07       	cpc	r27, r17
 16e:	d9 f7       	brne	.-10     	; 0x166 <__do_copy_data+0xc>

00000170 <__do_clear_bss>:
 170:	20 e0       	ldi	r18, 0x00	; 0
 172:	a6 e7       	ldi	r26, 0x76	; 118
 174:	b0 e0       	ldi	r27, 0x00	; 0
 176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
 178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
 17a:	aa 38       	cpi	r26, 0x8A	; 138
 17c:	b2 07       	cpc	r27, r18
 17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
 180:	0e 94 45 03 	call	0x68a	; 0x68a <main>
 184:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <_exit>

00000188 <__bad_interrupt>:
 188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <toggle_e>:
	_delay_ms(20);
}

void STEPPER_Init(){
	
	DDRB = 0x0F; /* Make PORTB lower pins as output */
 18c:	ae 9a       	sbi	0x15, 6	; 21
 18e:	00 c0       	rjmp	.+0      	; 0x190 <toggle_e+0x4>
 190:	ae 98       	cbi	0x15, 6	; 21
 192:	08 95       	ret

00000194 <lcd_write>:
 194:	cf 93       	push	r28
 196:	c8 2f       	mov	r28, r24
 198:	66 23       	and	r22, r22
 19a:	11 f0       	breq	.+4      	; 0x1a0 <lcd_write+0xc>
 19c:	a8 9a       	sbi	0x15, 0	; 21
 19e:	01 c0       	rjmp	.+2      	; 0x1a2 <lcd_write+0xe>
 1a0:	a8 98       	cbi	0x15, 0	; 21
 1a2:	a9 98       	cbi	0x15, 1	; 21
 1a4:	bc 9a       	sbi	0x17, 4	; 23
 1a6:	bd 9a       	sbi	0x17, 5	; 23
 1a8:	be 9a       	sbi	0x17, 6	; 23
 1aa:	bf 9a       	sbi	0x17, 7	; 23
 1ac:	c7 98       	cbi	0x18, 7	; 24
 1ae:	c6 98       	cbi	0x18, 6	; 24
 1b0:	c5 98       	cbi	0x18, 5	; 24
 1b2:	c4 98       	cbi	0x18, 4	; 24
 1b4:	cc 23       	and	r28, r28
 1b6:	0c f4       	brge	.+2      	; 0x1ba <lcd_write+0x26>
 1b8:	c7 9a       	sbi	0x18, 7	; 24
 1ba:	c6 fd       	sbrc	r28, 6
 1bc:	c6 9a       	sbi	0x18, 6	; 24
 1be:	c5 fd       	sbrc	r28, 5
 1c0:	c5 9a       	sbi	0x18, 5	; 24
 1c2:	c4 fd       	sbrc	r28, 4
 1c4:	c4 9a       	sbi	0x18, 4	; 24
 1c6:	0e 94 c6 00 	call	0x18c	; 0x18c <toggle_e>
 1ca:	c7 98       	cbi	0x18, 7	; 24
 1cc:	c6 98       	cbi	0x18, 6	; 24
 1ce:	c5 98       	cbi	0x18, 5	; 24
 1d0:	c4 98       	cbi	0x18, 4	; 24
 1d2:	c3 fd       	sbrc	r28, 3
 1d4:	c7 9a       	sbi	0x18, 7	; 24
 1d6:	c2 fd       	sbrc	r28, 2
 1d8:	c6 9a       	sbi	0x18, 6	; 24
 1da:	c1 fd       	sbrc	r28, 1
 1dc:	c5 9a       	sbi	0x18, 5	; 24
 1de:	c0 fd       	sbrc	r28, 0
 1e0:	c4 9a       	sbi	0x18, 4	; 24
 1e2:	0e 94 c6 00 	call	0x18c	; 0x18c <toggle_e>
 1e6:	c4 9a       	sbi	0x18, 4	; 24
 1e8:	c5 9a       	sbi	0x18, 5	; 24
 1ea:	c6 9a       	sbi	0x18, 6	; 24
 1ec:	c7 9a       	sbi	0x18, 7	; 24
 1ee:	cf 91       	pop	r28
 1f0:	08 95       	ret

000001f2 <lcd_read>:
 1f2:	88 23       	and	r24, r24
 1f4:	11 f0       	breq	.+4      	; 0x1fa <lcd_read+0x8>
 1f6:	a8 9a       	sbi	0x15, 0	; 21
 1f8:	01 c0       	rjmp	.+2      	; 0x1fc <lcd_read+0xa>
 1fa:	a8 98       	cbi	0x15, 0	; 21
 1fc:	a9 9a       	sbi	0x15, 1	; 21
 1fe:	bc 98       	cbi	0x17, 4	; 23
 200:	bd 98       	cbi	0x17, 5	; 23
 202:	be 98       	cbi	0x17, 6	; 23
 204:	bf 98       	cbi	0x17, 7	; 23
 206:	ae 9a       	sbi	0x15, 6	; 21
 208:	00 c0       	rjmp	.+0      	; 0x20a <lcd_read+0x18>
 20a:	b4 9b       	sbis	0x16, 4	; 22
 20c:	02 c0       	rjmp	.+4      	; 0x212 <lcd_read+0x20>
 20e:	80 e1       	ldi	r24, 0x10	; 16
 210:	01 c0       	rjmp	.+2      	; 0x214 <lcd_read+0x22>
 212:	80 e0       	ldi	r24, 0x00	; 0
 214:	b5 99       	sbic	0x16, 5	; 22
 216:	80 62       	ori	r24, 0x20	; 32
 218:	b6 99       	sbic	0x16, 6	; 22
 21a:	80 64       	ori	r24, 0x40	; 64
 21c:	b7 99       	sbic	0x16, 7	; 22
 21e:	80 68       	ori	r24, 0x80	; 128
 220:	ae 98       	cbi	0x15, 6	; 21
 222:	00 c0       	rjmp	.+0      	; 0x224 <lcd_read+0x32>
 224:	ae 9a       	sbi	0x15, 6	; 21
 226:	00 c0       	rjmp	.+0      	; 0x228 <lcd_read+0x36>
 228:	b4 99       	sbic	0x16, 4	; 22
 22a:	81 60       	ori	r24, 0x01	; 1
 22c:	b5 99       	sbic	0x16, 5	; 22
 22e:	82 60       	ori	r24, 0x02	; 2
 230:	b6 99       	sbic	0x16, 6	; 22
 232:	84 60       	ori	r24, 0x04	; 4
 234:	b7 99       	sbic	0x16, 7	; 22
 236:	88 60       	ori	r24, 0x08	; 8
 238:	ae 98       	cbi	0x15, 6	; 21
 23a:	08 95       	ret

0000023c <lcd_waitbusy>:
 23c:	80 e0       	ldi	r24, 0x00	; 0
 23e:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <lcd_read>
 242:	88 23       	and	r24, r24
 244:	dc f3       	brlt	.-10     	; 0x23c <lcd_waitbusy>
 246:	83 e0       	ldi	r24, 0x03	; 3
 248:	90 e0       	ldi	r25, 0x00	; 0
 24a:	01 97       	sbiw	r24, 0x01	; 1
 24c:	f1 f7       	brne	.-4      	; 0x24a <lcd_waitbusy+0xe>
 24e:	80 e0       	ldi	r24, 0x00	; 0
 250:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <lcd_read>
 254:	08 95       	ret

00000256 <lcd_command>:
 256:	cf 93       	push	r28
 258:	c8 2f       	mov	r28, r24
 25a:	0e 94 1e 01 	call	0x23c	; 0x23c <lcd_waitbusy>
 25e:	60 e0       	ldi	r22, 0x00	; 0
 260:	8c 2f       	mov	r24, r28
 262:	0e 94 ca 00 	call	0x194	; 0x194 <lcd_write>
 266:	cf 91       	pop	r28
 268:	08 95       	ret

0000026a <lcd_clrscr>:
 26a:	81 e0       	ldi	r24, 0x01	; 1
 26c:	0e 94 2b 01 	call	0x256	; 0x256 <lcd_command>
 270:	08 95       	ret

00000272 <lcd_putc>:
 272:	cf 93       	push	r28
 274:	c8 2f       	mov	r28, r24
 276:	0e 94 1e 01 	call	0x23c	; 0x23c <lcd_waitbusy>
 27a:	ca 30       	cpi	r28, 0x0A	; 10
 27c:	49 f4       	brne	.+18     	; 0x290 <lcd_putc+0x1e>
 27e:	80 34       	cpi	r24, 0x40	; 64
 280:	10 f0       	brcs	.+4      	; 0x286 <lcd_putc+0x14>
 282:	80 e0       	ldi	r24, 0x00	; 0
 284:	01 c0       	rjmp	.+2      	; 0x288 <lcd_putc+0x16>
 286:	80 e4       	ldi	r24, 0x40	; 64
 288:	80 58       	subi	r24, 0x80	; 128
 28a:	0e 94 2b 01 	call	0x256	; 0x256 <lcd_command>
 28e:	04 c0       	rjmp	.+8      	; 0x298 <lcd_putc+0x26>
 290:	61 e0       	ldi	r22, 0x01	; 1
 292:	8c 2f       	mov	r24, r28
 294:	0e 94 ca 00 	call	0x194	; 0x194 <lcd_write>
 298:	cf 91       	pop	r28
 29a:	08 95       	ret

0000029c <lcd_puts>:
 29c:	cf 93       	push	r28
 29e:	df 93       	push	r29
 2a0:	ec 01       	movw	r28, r24
 2a2:	21 96       	adiw	r28, 0x01	; 1
 2a4:	fc 01       	movw	r30, r24
 2a6:	80 81       	ld	r24, Z
 2a8:	88 23       	and	r24, r24
 2aa:	29 f0       	breq	.+10     	; 0x2b6 <lcd_puts+0x1a>
 2ac:	0e 94 39 01 	call	0x272	; 0x272 <lcd_putc>
 2b0:	89 91       	ld	r24, Y+
 2b2:	81 11       	cpse	r24, r1
 2b4:	fb cf       	rjmp	.-10     	; 0x2ac <lcd_puts+0x10>
 2b6:	df 91       	pop	r29
 2b8:	cf 91       	pop	r28
 2ba:	08 95       	ret

000002bc <lcd_init>:
 2bc:	1f 93       	push	r17
 2be:	cf 93       	push	r28
 2c0:	df 93       	push	r29
 2c2:	18 2f       	mov	r17, r24
 2c4:	a0 9a       	sbi	0x14, 0	; 20
 2c6:	a1 9a       	sbi	0x14, 1	; 20
 2c8:	a6 9a       	sbi	0x14, 6	; 20
 2ca:	bc 9a       	sbi	0x17, 4	; 23
 2cc:	bd 9a       	sbi	0x17, 5	; 23
 2ce:	be 9a       	sbi	0x17, 6	; 23
 2d0:	bf 9a       	sbi	0x17, 7	; 23
 2d2:	80 e3       	ldi	r24, 0x30	; 48
 2d4:	93 e7       	ldi	r25, 0x73	; 115
 2d6:	01 97       	sbiw	r24, 0x01	; 1
 2d8:	f1 f7       	brne	.-4      	; 0x2d6 <lcd_init+0x1a>
 2da:	c5 9a       	sbi	0x18, 5	; 24
 2dc:	c4 9a       	sbi	0x18, 4	; 24
 2de:	0e 94 c6 00 	call	0x18c	; 0x18c <toggle_e>
 2e2:	80 ef       	ldi	r24, 0xF0	; 240
 2e4:	93 e2       	ldi	r25, 0x23	; 35
 2e6:	01 97       	sbiw	r24, 0x01	; 1
 2e8:	f1 f7       	brne	.-4      	; 0x2e6 <lcd_init+0x2a>
 2ea:	0e 94 c6 00 	call	0x18c	; 0x18c <toggle_e>
 2ee:	c5 e7       	ldi	r28, 0x75	; 117
 2f0:	d0 e0       	ldi	r29, 0x00	; 0
 2f2:	ce 01       	movw	r24, r28
 2f4:	01 97       	sbiw	r24, 0x01	; 1
 2f6:	f1 f7       	brne	.-4      	; 0x2f4 <lcd_init+0x38>
 2f8:	0e 94 c6 00 	call	0x18c	; 0x18c <toggle_e>
 2fc:	ce 01       	movw	r24, r28
 2fe:	01 97       	sbiw	r24, 0x01	; 1
 300:	f1 f7       	brne	.-4      	; 0x2fe <lcd_init+0x42>
 302:	c4 98       	cbi	0x18, 4	; 24
 304:	0e 94 c6 00 	call	0x18c	; 0x18c <toggle_e>
 308:	21 97       	sbiw	r28, 0x01	; 1
 30a:	f1 f7       	brne	.-4      	; 0x308 <lcd_init+0x4c>
 30c:	88 e2       	ldi	r24, 0x28	; 40
 30e:	0e 94 2b 01 	call	0x256	; 0x256 <lcd_command>
 312:	88 e0       	ldi	r24, 0x08	; 8
 314:	0e 94 2b 01 	call	0x256	; 0x256 <lcd_command>
 318:	0e 94 35 01 	call	0x26a	; 0x26a <lcd_clrscr>
 31c:	86 e0       	ldi	r24, 0x06	; 6
 31e:	0e 94 2b 01 	call	0x256	; 0x256 <lcd_command>
 322:	81 2f       	mov	r24, r17
 324:	0e 94 2b 01 	call	0x256	; 0x256 <lcd_command>
 328:	df 91       	pop	r29
 32a:	cf 91       	pop	r28
 32c:	1f 91       	pop	r17
 32e:	08 95       	ret

00000330 <__vector_8>:
 330:	1f 92       	push	r1
 332:	0f 92       	push	r0
 334:	0f b6       	in	r0, 0x3f	; 63
 336:	0f 92       	push	r0
 338:	11 24       	eor	r1, r1
 33a:	8f 93       	push	r24
 33c:	9f 93       	push	r25
 33e:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <__data_end>
 342:	90 91 77 00 	lds	r25, 0x0077	; 0x800077 <__data_end+0x1>
 346:	01 96       	adiw	r24, 0x01	; 1
 348:	90 93 77 00 	sts	0x0077, r25	; 0x800077 <__data_end+0x1>
 34c:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <__data_end>
 350:	9f 91       	pop	r25
 352:	8f 91       	pop	r24
 354:	0f 90       	pop	r0
 356:	0f be       	out	0x3f, r0	; 63
 358:	0f 90       	pop	r0
 35a:	1f 90       	pop	r1
 35c:	18 95       	reti

0000035e <writeLCD>:
 35e:	0f 93       	push	r16
 360:	1f 93       	push	r17
 362:	cf 93       	push	r28
 364:	df 93       	push	r29
 366:	cd b7       	in	r28, 0x3d	; 61
 368:	de b7       	in	r29, 0x3e	; 62
 36a:	60 97       	sbiw	r28, 0x10	; 16
 36c:	0f b6       	in	r0, 0x3f	; 63
 36e:	f8 94       	cli
 370:	de bf       	out	0x3e, r29	; 62
 372:	0f be       	out	0x3f, r0	; 63
 374:	cd bf       	out	0x3d, r28	; 61
 376:	8c 01       	movw	r16, r24
 378:	0e 94 35 01 	call	0x26a	; 0x26a <lcd_clrscr>
 37c:	4a e0       	ldi	r20, 0x0A	; 10
 37e:	be 01       	movw	r22, r28
 380:	6f 5f       	subi	r22, 0xFF	; 255
 382:	7f 4f       	sbci	r23, 0xFF	; 255
 384:	c8 01       	movw	r24, r16
 386:	0e 94 be 04 	call	0x97c	; 0x97c <__itoa_ncheck>
 38a:	80 ec       	ldi	r24, 0xC0	; 192
 38c:	0e 94 2b 01 	call	0x256	; 0x256 <lcd_command>
 390:	80 e6       	ldi	r24, 0x60	; 96
 392:	90 e0       	ldi	r25, 0x00	; 0
 394:	0e 94 4e 01 	call	0x29c	; 0x29c <lcd_puts>
 398:	86 ec       	ldi	r24, 0xC6	; 198
 39a:	0e 94 2b 01 	call	0x256	; 0x256 <lcd_command>
 39e:	ce 01       	movw	r24, r28
 3a0:	01 96       	adiw	r24, 0x01	; 1
 3a2:	0e 94 4e 01 	call	0x29c	; 0x29c <lcd_puts>
 3a6:	8f ef       	ldi	r24, 0xFF	; 255
 3a8:	9f e8       	ldi	r25, 0x8F	; 143
 3aa:	01 97       	sbiw	r24, 0x01	; 1
 3ac:	f1 f7       	brne	.-4      	; 0x3aa <writeLCD+0x4c>
 3ae:	00 c0       	rjmp	.+0      	; 0x3b0 <writeLCD+0x52>
 3b0:	00 00       	nop
 3b2:	60 96       	adiw	r28, 0x10	; 16
 3b4:	0f b6       	in	r0, 0x3f	; 63
 3b6:	f8 94       	cli
 3b8:	de bf       	out	0x3e, r29	; 62
 3ba:	0f be       	out	0x3f, r0	; 63
 3bc:	cd bf       	out	0x3d, r28	; 61
 3be:	df 91       	pop	r29
 3c0:	cf 91       	pop	r28
 3c2:	1f 91       	pop	r17
 3c4:	0f 91       	pop	r16
 3c6:	08 95       	ret

000003c8 <rotate_clockwise>:
// 4 --> NULTI PIN      07  03  0B  09  0D  0C  0E   06 (CLOCKWISE SEQUENCE)


void rotate_clockwise(){
	
		PORTB = 0x07;  //0111
 3c8:	87 e0       	ldi	r24, 0x07	; 7
 3ca:	88 bb       	out	0x18, r24	; 24
		PORTB = ~PORTB;
 3cc:	88 b3       	in	r24, 0x18	; 24
 3ce:	80 95       	com	r24
 3d0:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3d2:	8f ef       	ldi	r24, 0xFF	; 255
 3d4:	93 e2       	ldi	r25, 0x23	; 35
 3d6:	01 97       	sbiw	r24, 0x01	; 1
 3d8:	f1 f7       	brne	.-4      	; 0x3d6 <rotate_clockwise+0xe>
 3da:	00 c0       	rjmp	.+0      	; 0x3dc <rotate_clockwise+0x14>
 3dc:	00 00       	nop
		_delay_ms(time);
		PORTB = 0x03;  //0011
 3de:	83 e0       	ldi	r24, 0x03	; 3
 3e0:	88 bb       	out	0x18, r24	; 24
		PORTB = ~PORTB;
 3e2:	88 b3       	in	r24, 0x18	; 24
 3e4:	80 95       	com	r24
 3e6:	88 bb       	out	0x18, r24	; 24
 3e8:	8f ef       	ldi	r24, 0xFF	; 255
 3ea:	93 e2       	ldi	r25, 0x23	; 35
 3ec:	01 97       	sbiw	r24, 0x01	; 1
 3ee:	f1 f7       	brne	.-4      	; 0x3ec <rotate_clockwise+0x24>
 3f0:	00 c0       	rjmp	.+0      	; 0x3f2 <rotate_clockwise+0x2a>
 3f2:	00 00       	nop
		_delay_ms(time);
		PORTB = 0x0B;  //1011
 3f4:	8b e0       	ldi	r24, 0x0B	; 11
 3f6:	88 bb       	out	0x18, r24	; 24
		PORTB = ~PORTB;
 3f8:	88 b3       	in	r24, 0x18	; 24
 3fa:	80 95       	com	r24
 3fc:	88 bb       	out	0x18, r24	; 24
 3fe:	8f ef       	ldi	r24, 0xFF	; 255
 400:	93 e2       	ldi	r25, 0x23	; 35
 402:	01 97       	sbiw	r24, 0x01	; 1
 404:	f1 f7       	brne	.-4      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 406:	00 c0       	rjmp	.+0      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 408:	00 00       	nop
		_delay_ms(time);
		PORTB = 0x09;
 40a:	89 e0       	ldi	r24, 0x09	; 9
 40c:	88 bb       	out	0x18, r24	; 24
		PORTB = ~PORTB;
 40e:	88 b3       	in	r24, 0x18	; 24
 410:	80 95       	com	r24
 412:	88 bb       	out	0x18, r24	; 24
 414:	8f ef       	ldi	r24, 0xFF	; 255
 416:	93 e2       	ldi	r25, 0x23	; 35
 418:	01 97       	sbiw	r24, 0x01	; 1
 41a:	f1 f7       	brne	.-4      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 41c:	00 c0       	rjmp	.+0      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 41e:	00 00       	nop
		_delay_ms(time);
		PORTB = 0x0D;
 420:	8d e0       	ldi	r24, 0x0D	; 13
 422:	88 bb       	out	0x18, r24	; 24
		PORTB = ~PORTB;
 424:	88 b3       	in	r24, 0x18	; 24
 426:	80 95       	com	r24
 428:	88 bb       	out	0x18, r24	; 24
 42a:	8f ef       	ldi	r24, 0xFF	; 255
 42c:	93 e2       	ldi	r25, 0x23	; 35
 42e:	01 97       	sbiw	r24, 0x01	; 1
 430:	f1 f7       	brne	.-4      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 432:	00 c0       	rjmp	.+0      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 434:	00 00       	nop
		_delay_ms(time);
		PORTB = 0x0C;
 436:	8c e0       	ldi	r24, 0x0C	; 12
 438:	88 bb       	out	0x18, r24	; 24
		PORTB = ~PORTB;
 43a:	88 b3       	in	r24, 0x18	; 24
 43c:	80 95       	com	r24
 43e:	88 bb       	out	0x18, r24	; 24
 440:	8f ef       	ldi	r24, 0xFF	; 255
 442:	93 e2       	ldi	r25, 0x23	; 35
 444:	01 97       	sbiw	r24, 0x01	; 1
 446:	f1 f7       	brne	.-4      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 448:	00 c0       	rjmp	.+0      	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 44a:	00 00       	nop
		_delay_ms(time);
		PORTB = 0x0E;
 44c:	8e e0       	ldi	r24, 0x0E	; 14
 44e:	88 bb       	out	0x18, r24	; 24
		PORTB = ~PORTB;
 450:	88 b3       	in	r24, 0x18	; 24
 452:	80 95       	com	r24
 454:	88 bb       	out	0x18, r24	; 24
 456:	8f ef       	ldi	r24, 0xFF	; 255
 458:	93 e2       	ldi	r25, 0x23	; 35
 45a:	01 97       	sbiw	r24, 0x01	; 1
 45c:	f1 f7       	brne	.-4      	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 45e:	00 c0       	rjmp	.+0      	; 0x460 <__stack+0x1>
 460:	00 00       	nop
		_delay_ms(time);
		PORTB = 0x06;
 462:	86 e0       	ldi	r24, 0x06	; 6
 464:	88 bb       	out	0x18, r24	; 24
		PORTB = ~PORTB;
 466:	88 b3       	in	r24, 0x18	; 24
 468:	80 95       	com	r24
 46a:	88 bb       	out	0x18, r24	; 24
 46c:	8f ef       	ldi	r24, 0xFF	; 255
 46e:	93 e2       	ldi	r25, 0x23	; 35
 470:	01 97       	sbiw	r24, 0x01	; 1
 472:	f1 f7       	brne	.-4      	; 0x470 <__stack+0x11>
 474:	00 c0       	rjmp	.+0      	; 0x476 <__stack+0x17>
 476:	00 00       	nop
 478:	08 95       	ret

0000047a <rotate_anticlockwise>:
		_delay_ms(time);
	}
void rotate_anticlockwise(){
	
	PORTB = 0x06;  
 47a:	86 e0       	ldi	r24, 0x06	; 6
 47c:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 47e:	88 b3       	in	r24, 0x18	; 24
 480:	80 95       	com	r24
 482:	88 bb       	out	0x18, r24	; 24
 484:	8f ef       	ldi	r24, 0xFF	; 255
 486:	93 e2       	ldi	r25, 0x23	; 35
 488:	01 97       	sbiw	r24, 0x01	; 1
 48a:	f1 f7       	brne	.-4      	; 0x488 <rotate_anticlockwise+0xe>
 48c:	00 c0       	rjmp	.+0      	; 0x48e <rotate_anticlockwise+0x14>
 48e:	00 00       	nop
	_delay_ms(time);
	PORTB = 0x0E; 
 490:	8e e0       	ldi	r24, 0x0E	; 14
 492:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 494:	88 b3       	in	r24, 0x18	; 24
 496:	80 95       	com	r24
 498:	88 bb       	out	0x18, r24	; 24
 49a:	8f ef       	ldi	r24, 0xFF	; 255
 49c:	93 e2       	ldi	r25, 0x23	; 35
 49e:	01 97       	sbiw	r24, 0x01	; 1
 4a0:	f1 f7       	brne	.-4      	; 0x49e <rotate_anticlockwise+0x24>
 4a2:	00 c0       	rjmp	.+0      	; 0x4a4 <rotate_anticlockwise+0x2a>
 4a4:	00 00       	nop
	_delay_ms(time);
	PORTB = 0x0C;
 4a6:	8c e0       	ldi	r24, 0x0C	; 12
 4a8:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 4aa:	88 b3       	in	r24, 0x18	; 24
 4ac:	80 95       	com	r24
 4ae:	88 bb       	out	0x18, r24	; 24
 4b0:	8f ef       	ldi	r24, 0xFF	; 255
 4b2:	93 e2       	ldi	r25, 0x23	; 35
 4b4:	01 97       	sbiw	r24, 0x01	; 1
 4b6:	f1 f7       	brne	.-4      	; 0x4b4 <rotate_anticlockwise+0x3a>
 4b8:	00 c0       	rjmp	.+0      	; 0x4ba <rotate_anticlockwise+0x40>
 4ba:	00 00       	nop
	_delay_ms(time);
	PORTB = 0x0D;
 4bc:	8d e0       	ldi	r24, 0x0D	; 13
 4be:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 4c0:	88 b3       	in	r24, 0x18	; 24
 4c2:	80 95       	com	r24
 4c4:	88 bb       	out	0x18, r24	; 24
 4c6:	8f ef       	ldi	r24, 0xFF	; 255
 4c8:	93 e2       	ldi	r25, 0x23	; 35
 4ca:	01 97       	sbiw	r24, 0x01	; 1
 4cc:	f1 f7       	brne	.-4      	; 0x4ca <rotate_anticlockwise+0x50>
 4ce:	00 c0       	rjmp	.+0      	; 0x4d0 <rotate_anticlockwise+0x56>
 4d0:	00 00       	nop
	_delay_ms(time);
	PORTB = 0x09;
 4d2:	89 e0       	ldi	r24, 0x09	; 9
 4d4:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 4d6:	88 b3       	in	r24, 0x18	; 24
 4d8:	80 95       	com	r24
 4da:	88 bb       	out	0x18, r24	; 24
 4dc:	8f ef       	ldi	r24, 0xFF	; 255
 4de:	93 e2       	ldi	r25, 0x23	; 35
 4e0:	01 97       	sbiw	r24, 0x01	; 1
 4e2:	f1 f7       	brne	.-4      	; 0x4e0 <rotate_anticlockwise+0x66>
 4e4:	00 c0       	rjmp	.+0      	; 0x4e6 <rotate_anticlockwise+0x6c>
 4e6:	00 00       	nop
	_delay_ms(time);
	PORTB = 0x0B;
 4e8:	8b e0       	ldi	r24, 0x0B	; 11
 4ea:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 4ec:	88 b3       	in	r24, 0x18	; 24
 4ee:	80 95       	com	r24
 4f0:	88 bb       	out	0x18, r24	; 24
 4f2:	8f ef       	ldi	r24, 0xFF	; 255
 4f4:	93 e2       	ldi	r25, 0x23	; 35
 4f6:	01 97       	sbiw	r24, 0x01	; 1
 4f8:	f1 f7       	brne	.-4      	; 0x4f6 <rotate_anticlockwise+0x7c>
 4fa:	00 c0       	rjmp	.+0      	; 0x4fc <rotate_anticlockwise+0x82>
 4fc:	00 00       	nop
	_delay_ms(time);
	PORTB = 0x03;
 4fe:	83 e0       	ldi	r24, 0x03	; 3
 500:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 502:	88 b3       	in	r24, 0x18	; 24
 504:	80 95       	com	r24
 506:	88 bb       	out	0x18, r24	; 24
 508:	8f ef       	ldi	r24, 0xFF	; 255
 50a:	93 e2       	ldi	r25, 0x23	; 35
 50c:	01 97       	sbiw	r24, 0x01	; 1
 50e:	f1 f7       	brne	.-4      	; 0x50c <rotate_anticlockwise+0x92>
 510:	00 c0       	rjmp	.+0      	; 0x512 <rotate_anticlockwise+0x98>
 512:	00 00       	nop
	_delay_ms(time);
	PORTB = 0x07;
 514:	87 e0       	ldi	r24, 0x07	; 7
 516:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 518:	88 b3       	in	r24, 0x18	; 24
 51a:	80 95       	com	r24
 51c:	88 bb       	out	0x18, r24	; 24
 51e:	8f ef       	ldi	r24, 0xFF	; 255
 520:	93 e2       	ldi	r25, 0x23	; 35
 522:	01 97       	sbiw	r24, 0x01	; 1
 524:	f1 f7       	brne	.-4      	; 0x522 <rotate_anticlockwise+0xa8>
 526:	00 c0       	rjmp	.+0      	; 0x528 <rotate_anticlockwise+0xae>
 528:	00 00       	nop
 52a:	08 95       	ret

0000052c <ADC_Init>:
	
}

void ADC_Init()
{
	DDRA=0x00;			/* Make ADC port as input */
 52c:	1a ba       	out	0x1a, r1	; 26
	ADCSRA = 0x87;		/* Enable ADC, fr/128  */
 52e:	87 e8       	ldi	r24, 0x87	; 135
 530:	86 b9       	out	0x06, r24	; 6
	ADMUX = 0x40;		/* Vref: Avcc, ADC channel: 0 */
 532:	80 e4       	ldi	r24, 0x40	; 64
 534:	87 b9       	out	0x07, r24	; 7
 536:	08 95       	ret

00000538 <ADC_Read>:

int ADC_Read(char channel)
{
	int Ain,AinLow;
	
	ADMUX=ADMUX|(channel & 0x0f);	/* Set input channel to read */
 538:	97 b1       	in	r25, 0x07	; 7
 53a:	8f 70       	andi	r24, 0x0F	; 15
 53c:	98 2b       	or	r25, r24
 53e:	97 b9       	out	0x07, r25	; 7

	ADCSRA |= (1<<ADSC);		/* Start conversion */
 540:	36 9a       	sbi	0x06, 6	; 6
	while((ADCSRA&(1<<ADIF))==0);	/* Monitor end of conversion interrupt */
 542:	34 9b       	sbis	0x06, 4	; 6
 544:	fe cf       	rjmp	.-4      	; 0x542 <ADC_Read+0xa>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 546:	88 e1       	ldi	r24, 0x18	; 24
 548:	8a 95       	dec	r24
 54a:	f1 f7       	brne	.-4      	; 0x548 <ADC_Read+0x10>
 54c:	00 c0       	rjmp	.+0      	; 0x54e <ADC_Read+0x16>
	
	_delay_us(10);
	AinLow = (int)ADCL;		/* Read lower byte*/
 54e:	24 b1       	in	r18, 0x04	; 4
	Ain = (int)ADCH*256;		/* Read higher 2 bits and 
 550:	85 b1       	in	r24, 0x05	; 5
 552:	90 e0       	ldi	r25, 0x00	; 0
 554:	98 2f       	mov	r25, r24
 556:	88 27       	eor	r24, r24
					Multiply with weight */
	Ain = Ain + AinLow;				
	return(Ain);			/* Return digital value*/
}
 558:	82 0f       	add	r24, r18
 55a:	91 1d       	adc	r25, r1
 55c:	08 95       	ret

0000055e <rotate_motors>:

void rotate_motors(int value){
 55e:	cf 93       	push	r28
 560:	df 93       	push	r29
 562:	ec 01       	movw	r28, r24
	
	if(value < 530){
 564:	c2 31       	cpi	r28, 0x12	; 18
 566:	82 e0       	ldi	r24, 0x02	; 2
 568:	d8 07       	cpc	r29, r24
 56a:	14 f4       	brge	.+4      	; 0x570 <rotate_motors+0x12>
		
		rotate_clockwise();
 56c:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <rotate_clockwise>
	}
	if(value > 650){
 570:	cb 38       	cpi	r28, 0x8B	; 139
 572:	d2 40       	sbci	r29, 0x02	; 2
 574:	14 f0       	brlt	.+4      	; 0x57a <rotate_motors+0x1c>
		
		rotate_anticlockwise();
 576:	0e 94 3d 02 	call	0x47a	; 0x47a <rotate_anticlockwise>
	}
	
}
 57a:	df 91       	pop	r29
 57c:	cf 91       	pop	r28
 57e:	08 95       	ret

00000580 <mesure_distance>:

void mesure_distance(){
 580:	cf 92       	push	r12
 582:	df 92       	push	r13
 584:	ef 92       	push	r14
 586:	ff 92       	push	r15
 588:	0f 93       	push	r16
 58a:	1f 93       	push	r17
	
	/* Give 10us trigger pulse on trig. pin to HC-SR04 */
	PORTD |= (1 << Trigger_pin);
 58c:	90 9a       	sbi	0x12, 0	; 18
 58e:	88 e1       	ldi	r24, 0x18	; 24
 590:	8a 95       	dec	r24
 592:	f1 f7       	brne	.-4      	; 0x590 <mesure_distance+0x10>
 594:	00 c0       	rjmp	.+0      	; 0x596 <mesure_distance+0x16>
	_delay_us(10);
	PORTD &= (~(1 << Trigger_pin));
 596:	90 98       	cbi	0x12, 0	; 18
	
	TCNT1 = 0;	/* Clear Timer counter */
 598:	1d bc       	out	0x2d, r1	; 45
 59a:	1c bc       	out	0x2c, r1	; 44
	TCCR1B = 0x41;	/* Capture on rising edge, No prescaler*/
 59c:	81 e4       	ldi	r24, 0x41	; 65
 59e:	8e bd       	out	0x2e, r24	; 46
	TIFR = (1<<ICF1);	/* Clear ICP flag (Input Capture flag) */
 5a0:	80 e2       	ldi	r24, 0x20	; 32
 5a2:	88 bf       	out	0x38, r24	; 56
	TIFR = (1<<TOV1);	/* Clear Timer Overflow flag */
 5a4:	84 e0       	ldi	r24, 0x04	; 4
 5a6:	88 bf       	out	0x38, r24	; 56

	/*Calculate width of Echo by Input Capture (ICP) */
	
	while ((TIFR & (1 << ICF1)) == 0);/* Wait for rising edge */
 5a8:	08 b6       	in	r0, 0x38	; 56
 5aa:	05 fe       	sbrs	r0, 5
 5ac:	fd cf       	rjmp	.-6      	; 0x5a8 <mesure_distance+0x28>
	TCNT1 = 0;	/* Clear Timer counter */
 5ae:	1d bc       	out	0x2d, r1	; 45
 5b0:	1c bc       	out	0x2c, r1	; 44
	TCCR1B = 0x01;	/* Capture on falling edge, No prescaler */
 5b2:	81 e0       	ldi	r24, 0x01	; 1
 5b4:	8e bd       	out	0x2e, r24	; 46
	TIFR = 1<<ICF1;	/* Clear ICP flag (Input Capture flag) */
 5b6:	80 e2       	ldi	r24, 0x20	; 32
 5b8:	88 bf       	out	0x38, r24	; 56
	TIFR = 1<<TOV1;	/* Clear Timer Overflow flag */
 5ba:	84 e0       	ldi	r24, 0x04	; 4
 5bc:	88 bf       	out	0x38, r24	; 56
	TimerOverflow = 0;/* Clear Timer overflow count */
 5be:	10 92 77 00 	sts	0x0077, r1	; 0x800077 <__data_end+0x1>
 5c2:	10 92 76 00 	sts	0x0076, r1	; 0x800076 <__data_end>

	while ((TIFR & (1 << ICF1)) == 0);/* Wait for falling edge */
 5c6:	08 b6       	in	r0, 0x38	; 56
 5c8:	05 fe       	sbrs	r0, 5
 5ca:	fd cf       	rjmp	.-6      	; 0x5c6 <mesure_distance+0x46>
	count = ICR1 + (65535 * TimerOverflow);	/*When a capture is triggered according to the ICES1 setting, 
 5cc:	66 b5       	in	r22, 0x26	; 38
 5ce:	77 b5       	in	r23, 0x27	; 39
 5d0:	80 e0       	ldi	r24, 0x00	; 0
 5d2:	90 e0       	ldi	r25, 0x00	; 0
 5d4:	60 93 86 00 	sts	0x0086, r22	; 0x800086 <count>
 5d8:	70 93 87 00 	sts	0x0087, r23	; 0x800087 <count+0x1>
 5dc:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <count+0x2>
 5e0:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <count+0x3>
											the counter value is copied into the Input Capture Register (ICR1).
											The event will also set the Input Capture Flag (ICF1), and this
											can be used to cause an Input Capture Interrupt, if this interrupt is enabled. */
	/* 7372800 MHz Timer freq, 0.136us time for one instruction, sound speed =343 m/s, 34300 cm/s */
	/* distance = speed * time / 2 */
	distance = (double)count / 428.67;
 5e4:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <__floatsisf>
 5e8:	23 ec       	ldi	r18, 0xC3	; 195
 5ea:	35 e5       	ldi	r19, 0x55	; 85
 5ec:	46 ed       	ldi	r20, 0xD6	; 214
 5ee:	53 e4       	ldi	r21, 0x43	; 67
 5f0:	0e 94 75 03 	call	0x6ea	; 0x6ea <__divsf3>
 5f4:	6b 01       	movw	r12, r22
 5f6:	7c 01       	movw	r14, r24
 5f8:	60 93 82 00 	sts	0x0082, r22	; 0x800082 <distance>
 5fc:	70 93 83 00 	sts	0x0083, r23	; 0x800083 <distance+0x1>
 600:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <distance+0x2>
 604:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <distance+0x3>
	
	if(distance < 15){
 608:	20 e0       	ldi	r18, 0x00	; 0
 60a:	30 e0       	ldi	r19, 0x00	; 0
 60c:	40 e7       	ldi	r20, 0x70	; 112
 60e:	51 e4       	ldi	r21, 0x41	; 65
 610:	0e 94 70 03 	call	0x6e0	; 0x6e0 <__cmpsf2>
 614:	88 23       	and	r24, r24
 616:	1c f4       	brge	.+6      	; 0x61e <mesure_distance+0x9e>
		
		rotate_clockwise();
 618:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <rotate_clockwise>
 61c:	0c c0       	rjmp	.+24     	; 0x636 <mesure_distance+0xb6>
		
	}else if (distance > 40)
 61e:	20 e0       	ldi	r18, 0x00	; 0
 620:	30 e0       	ldi	r19, 0x00	; 0
 622:	40 e2       	ldi	r20, 0x20	; 32
 624:	52 e4       	ldi	r21, 0x42	; 66
 626:	c7 01       	movw	r24, r14
 628:	b6 01       	movw	r22, r12
 62a:	0e 94 99 04 	call	0x932	; 0x932 <__gesf2>
 62e:	18 16       	cp	r1, r24
 630:	14 f4       	brge	.+4      	; 0x636 <mesure_distance+0xb6>
	{
		rotate_anticlockwise();
 632:	0e 94 3d 02 	call	0x47a	; 0x47a <rotate_anticlockwise>
	}
	
	dtostrf(distance, 2, 2, string);/* distance to string */
 636:	60 91 82 00 	lds	r22, 0x0082	; 0x800082 <distance>
 63a:	70 91 83 00 	lds	r23, 0x0083	; 0x800083 <distance+0x1>
 63e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <distance+0x2>
 642:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <distance+0x3>
 646:	08 e7       	ldi	r16, 0x78	; 120
 648:	10 e0       	ldi	r17, 0x00	; 0
 64a:	22 e0       	ldi	r18, 0x02	; 2
 64c:	42 e0       	ldi	r20, 0x02	; 2
 64e:	0e 94 9e 04 	call	0x93c	; 0x93c <dtostrf>
	strcat(string, " cm   ");	/* Concat unit i.e.cm */
 652:	d8 01       	movw	r26, r16
 654:	0d 90       	ld	r0, X+
 656:	00 20       	and	r0, r0
 658:	e9 f7       	brne	.-6      	; 0x654 <mesure_distance+0xd4>
 65a:	11 97       	sbiw	r26, 0x01	; 1
 65c:	87 e0       	ldi	r24, 0x07	; 7
 65e:	e6 e6       	ldi	r30, 0x66	; 102
 660:	f0 e0       	ldi	r31, 0x00	; 0
 662:	01 90       	ld	r0, Z+
 664:	0d 92       	st	X+, r0
 666:	8a 95       	dec	r24
 668:	e1 f7       	brne	.-8      	; 0x662 <mesure_distance+0xe2>
	lcd_clrscr();
 66a:	0e 94 35 01 	call	0x26a	; 0x26a <lcd_clrscr>
	lcd_puts("Dist = ");
 66e:	8d e6       	ldi	r24, 0x6D	; 109
 670:	90 e0       	ldi	r25, 0x00	; 0
 672:	0e 94 4e 01 	call	0x29c	; 0x29c <lcd_puts>
	lcd_puts(string);	/* Print distance */
 676:	c8 01       	movw	r24, r16
 678:	0e 94 4e 01 	call	0x29c	; 0x29c <lcd_puts>
}
 67c:	1f 91       	pop	r17
 67e:	0f 91       	pop	r16
 680:	ff 90       	pop	r15
 682:	ef 90       	pop	r14
 684:	df 90       	pop	r13
 686:	cf 90       	pop	r12
 688:	08 95       	ret

0000068a <main>:

int main(void)
{
	
	DDRC = _BV(7);
 68a:	80 e8       	ldi	r24, 0x80	; 128
 68c:	84 bb       	out	0x14, r24	; 20

	TCCR1A = _BV(COM1B1) | _BV(WGM10);
 68e:	81 e2       	ldi	r24, 0x21	; 33
 690:	8f bd       	out	0x2f, r24	; 47
	TCCR1B = _BV(WGM12) | _BV(CS11);
 692:	8a e0       	ldi	r24, 0x0A	; 10
 694:	8e bd       	out	0x2e, r24	; 46
	OCR1B = 14;
 696:	8e e0       	ldi	r24, 0x0E	; 14
 698:	90 e0       	ldi	r25, 0x00	; 0
 69a:	99 bd       	out	0x29, r25	; 41
 69c:	88 bd       	out	0x28, r24	; 40

	lcd_init(LCD_DISP_ON);
 69e:	8c e0       	ldi	r24, 0x0C	; 12
 6a0:	0e 94 5e 01 	call	0x2bc	; 0x2bc <lcd_init>
	
	int value;
	
	ADC_Init();
 6a4:	0e 94 96 02 	call	0x52c	; 0x52c <ADC_Init>
	_delay_ms(20);
}

void STEPPER_Init(){
	
	DDRB = 0x0F; /* Make PORTB lower pins as output */
 6a8:	8f e0       	ldi	r24, 0x0F	; 15
 6aa:	87 bb       	out	0x17, r24	; 23
	
	ADC_Init();
	
	STEPPER_Init();
	
	DDRD = 0x01;		/* Make trigger pin as output */
 6ac:	81 e0       	ldi	r24, 0x01	; 1
 6ae:	81 bb       	out	0x11, r24	; 17
	PORTD = _BV(6);		/* Turn on Pull-up */
 6b0:	80 e4       	ldi	r24, 0x40	; 64
 6b2:	82 bb       	out	0x12, r24	; 18
	
	sei();			/* Enable global interrupt */
 6b4:	78 94       	sei
	TIMSK = (1 << TOIE1);	/* Enable Timer1 overflow interrupts */
 6b6:	84 e0       	ldi	r24, 0x04	; 4
 6b8:	89 bf       	out	0x39, r24	; 57
	TCCR1A = 0;
 6ba:	1f bc       	out	0x2f, r1	; 47

	while (1) {
		
		value = ADC_Read(0);    /* Read ADC channel */
 6bc:	80 e0       	ldi	r24, 0x00	; 0
 6be:	0e 94 9c 02 	call	0x538	; 0x538 <ADC_Read>
 6c2:	ec 01       	movw	r28, r24
		
		writeLCD(value);
 6c4:	0e 94 af 01 	call	0x35e	; 0x35e <writeLCD>
		
		rotate_motors(value);
 6c8:	ce 01       	movw	r24, r28
 6ca:	0e 94 af 02 	call	0x55e	; 0x55e <rotate_motors>
		
		mesure_distance();
 6ce:	0e 94 c0 02 	call	0x580	; 0x580 <mesure_distance>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 6d2:	8f ef       	ldi	r24, 0xFF	; 255
 6d4:	97 ed       	ldi	r25, 0xD7	; 215
 6d6:	01 97       	sbiw	r24, 0x01	; 1
 6d8:	f1 f7       	brne	.-4      	; 0x6d6 <main+0x4c>
 6da:	00 c0       	rjmp	.+0      	; 0x6dc <main+0x52>
 6dc:	00 00       	nop
 6de:	ee cf       	rjmp	.-36     	; 0x6bc <main+0x32>

000006e0 <__cmpsf2>:
 6e0:	0e 94 24 04 	call	0x848	; 0x848 <__fp_cmp>
 6e4:	08 f4       	brcc	.+2      	; 0x6e8 <__cmpsf2+0x8>
 6e6:	81 e0       	ldi	r24, 0x01	; 1
 6e8:	08 95       	ret

000006ea <__divsf3>:
 6ea:	0e 94 89 03 	call	0x712	; 0x712 <__divsf3x>
 6ee:	0c 94 5f 04 	jmp	0x8be	; 0x8be <__fp_round>
 6f2:	0e 94 58 04 	call	0x8b0	; 0x8b0 <__fp_pscB>
 6f6:	58 f0       	brcs	.+22     	; 0x70e <__divsf3+0x24>
 6f8:	0e 94 51 04 	call	0x8a2	; 0x8a2 <__fp_pscA>
 6fc:	40 f0       	brcs	.+16     	; 0x70e <__divsf3+0x24>
 6fe:	29 f4       	brne	.+10     	; 0x70a <__divsf3+0x20>
 700:	5f 3f       	cpi	r21, 0xFF	; 255
 702:	29 f0       	breq	.+10     	; 0x70e <__divsf3+0x24>
 704:	0c 94 48 04 	jmp	0x890	; 0x890 <__fp_inf>
 708:	51 11       	cpse	r21, r1
 70a:	0c 94 93 04 	jmp	0x926	; 0x926 <__fp_szero>
 70e:	0c 94 4e 04 	jmp	0x89c	; 0x89c <__fp_nan>

00000712 <__divsf3x>:
 712:	0e 94 70 04 	call	0x8e0	; 0x8e0 <__fp_split3>
 716:	68 f3       	brcs	.-38     	; 0x6f2 <__divsf3+0x8>

00000718 <__divsf3_pse>:
 718:	99 23       	and	r25, r25
 71a:	b1 f3       	breq	.-20     	; 0x708 <__divsf3+0x1e>
 71c:	55 23       	and	r21, r21
 71e:	91 f3       	breq	.-28     	; 0x704 <__divsf3+0x1a>
 720:	95 1b       	sub	r25, r21
 722:	55 0b       	sbc	r21, r21
 724:	bb 27       	eor	r27, r27
 726:	aa 27       	eor	r26, r26
 728:	62 17       	cp	r22, r18
 72a:	73 07       	cpc	r23, r19
 72c:	84 07       	cpc	r24, r20
 72e:	38 f0       	brcs	.+14     	; 0x73e <__divsf3_pse+0x26>
 730:	9f 5f       	subi	r25, 0xFF	; 255
 732:	5f 4f       	sbci	r21, 0xFF	; 255
 734:	22 0f       	add	r18, r18
 736:	33 1f       	adc	r19, r19
 738:	44 1f       	adc	r20, r20
 73a:	aa 1f       	adc	r26, r26
 73c:	a9 f3       	breq	.-22     	; 0x728 <__divsf3_pse+0x10>
 73e:	35 d0       	rcall	.+106    	; 0x7aa <__divsf3_pse+0x92>
 740:	0e 2e       	mov	r0, r30
 742:	3a f0       	brmi	.+14     	; 0x752 <__divsf3_pse+0x3a>
 744:	e0 e8       	ldi	r30, 0x80	; 128
 746:	32 d0       	rcall	.+100    	; 0x7ac <__divsf3_pse+0x94>
 748:	91 50       	subi	r25, 0x01	; 1
 74a:	50 40       	sbci	r21, 0x00	; 0
 74c:	e6 95       	lsr	r30
 74e:	00 1c       	adc	r0, r0
 750:	ca f7       	brpl	.-14     	; 0x744 <__divsf3_pse+0x2c>
 752:	2b d0       	rcall	.+86     	; 0x7aa <__divsf3_pse+0x92>
 754:	fe 2f       	mov	r31, r30
 756:	29 d0       	rcall	.+82     	; 0x7aa <__divsf3_pse+0x92>
 758:	66 0f       	add	r22, r22
 75a:	77 1f       	adc	r23, r23
 75c:	88 1f       	adc	r24, r24
 75e:	bb 1f       	adc	r27, r27
 760:	26 17       	cp	r18, r22
 762:	37 07       	cpc	r19, r23
 764:	48 07       	cpc	r20, r24
 766:	ab 07       	cpc	r26, r27
 768:	b0 e8       	ldi	r27, 0x80	; 128
 76a:	09 f0       	breq	.+2      	; 0x76e <__divsf3_pse+0x56>
 76c:	bb 0b       	sbc	r27, r27
 76e:	80 2d       	mov	r24, r0
 770:	bf 01       	movw	r22, r30
 772:	ff 27       	eor	r31, r31
 774:	93 58       	subi	r25, 0x83	; 131
 776:	5f 4f       	sbci	r21, 0xFF	; 255
 778:	3a f0       	brmi	.+14     	; 0x788 <__divsf3_pse+0x70>
 77a:	9e 3f       	cpi	r25, 0xFE	; 254
 77c:	51 05       	cpc	r21, r1
 77e:	78 f0       	brcs	.+30     	; 0x79e <__divsf3_pse+0x86>
 780:	0c 94 48 04 	jmp	0x890	; 0x890 <__fp_inf>
 784:	0c 94 93 04 	jmp	0x926	; 0x926 <__fp_szero>
 788:	5f 3f       	cpi	r21, 0xFF	; 255
 78a:	e4 f3       	brlt	.-8      	; 0x784 <__divsf3_pse+0x6c>
 78c:	98 3e       	cpi	r25, 0xE8	; 232
 78e:	d4 f3       	brlt	.-12     	; 0x784 <__divsf3_pse+0x6c>
 790:	86 95       	lsr	r24
 792:	77 95       	ror	r23
 794:	67 95       	ror	r22
 796:	b7 95       	ror	r27
 798:	f7 95       	ror	r31
 79a:	9f 5f       	subi	r25, 0xFF	; 255
 79c:	c9 f7       	brne	.-14     	; 0x790 <__divsf3_pse+0x78>
 79e:	88 0f       	add	r24, r24
 7a0:	91 1d       	adc	r25, r1
 7a2:	96 95       	lsr	r25
 7a4:	87 95       	ror	r24
 7a6:	97 f9       	bld	r25, 7
 7a8:	08 95       	ret
 7aa:	e1 e0       	ldi	r30, 0x01	; 1
 7ac:	66 0f       	add	r22, r22
 7ae:	77 1f       	adc	r23, r23
 7b0:	88 1f       	adc	r24, r24
 7b2:	bb 1f       	adc	r27, r27
 7b4:	62 17       	cp	r22, r18
 7b6:	73 07       	cpc	r23, r19
 7b8:	84 07       	cpc	r24, r20
 7ba:	ba 07       	cpc	r27, r26
 7bc:	20 f0       	brcs	.+8      	; 0x7c6 <__divsf3_pse+0xae>
 7be:	62 1b       	sub	r22, r18
 7c0:	73 0b       	sbc	r23, r19
 7c2:	84 0b       	sbc	r24, r20
 7c4:	ba 0b       	sbc	r27, r26
 7c6:	ee 1f       	adc	r30, r30
 7c8:	88 f7       	brcc	.-30     	; 0x7ac <__divsf3_pse+0x94>
 7ca:	e0 95       	com	r30
 7cc:	08 95       	ret

000007ce <__floatunsisf>:
 7ce:	e8 94       	clt
 7d0:	09 c0       	rjmp	.+18     	; 0x7e4 <__floatsisf+0x12>

000007d2 <__floatsisf>:
 7d2:	97 fb       	bst	r25, 7
 7d4:	3e f4       	brtc	.+14     	; 0x7e4 <__floatsisf+0x12>
 7d6:	90 95       	com	r25
 7d8:	80 95       	com	r24
 7da:	70 95       	com	r23
 7dc:	61 95       	neg	r22
 7de:	7f 4f       	sbci	r23, 0xFF	; 255
 7e0:	8f 4f       	sbci	r24, 0xFF	; 255
 7e2:	9f 4f       	sbci	r25, 0xFF	; 255
 7e4:	99 23       	and	r25, r25
 7e6:	a9 f0       	breq	.+42     	; 0x812 <__floatsisf+0x40>
 7e8:	f9 2f       	mov	r31, r25
 7ea:	96 e9       	ldi	r25, 0x96	; 150
 7ec:	bb 27       	eor	r27, r27
 7ee:	93 95       	inc	r25
 7f0:	f6 95       	lsr	r31
 7f2:	87 95       	ror	r24
 7f4:	77 95       	ror	r23
 7f6:	67 95       	ror	r22
 7f8:	b7 95       	ror	r27
 7fa:	f1 11       	cpse	r31, r1
 7fc:	f8 cf       	rjmp	.-16     	; 0x7ee <__floatsisf+0x1c>
 7fe:	fa f4       	brpl	.+62     	; 0x83e <__floatsisf+0x6c>
 800:	bb 0f       	add	r27, r27
 802:	11 f4       	brne	.+4      	; 0x808 <__floatsisf+0x36>
 804:	60 ff       	sbrs	r22, 0
 806:	1b c0       	rjmp	.+54     	; 0x83e <__floatsisf+0x6c>
 808:	6f 5f       	subi	r22, 0xFF	; 255
 80a:	7f 4f       	sbci	r23, 0xFF	; 255
 80c:	8f 4f       	sbci	r24, 0xFF	; 255
 80e:	9f 4f       	sbci	r25, 0xFF	; 255
 810:	16 c0       	rjmp	.+44     	; 0x83e <__floatsisf+0x6c>
 812:	88 23       	and	r24, r24
 814:	11 f0       	breq	.+4      	; 0x81a <__floatsisf+0x48>
 816:	96 e9       	ldi	r25, 0x96	; 150
 818:	11 c0       	rjmp	.+34     	; 0x83c <__floatsisf+0x6a>
 81a:	77 23       	and	r23, r23
 81c:	21 f0       	breq	.+8      	; 0x826 <__floatsisf+0x54>
 81e:	9e e8       	ldi	r25, 0x8E	; 142
 820:	87 2f       	mov	r24, r23
 822:	76 2f       	mov	r23, r22
 824:	05 c0       	rjmp	.+10     	; 0x830 <__floatsisf+0x5e>
 826:	66 23       	and	r22, r22
 828:	71 f0       	breq	.+28     	; 0x846 <__floatsisf+0x74>
 82a:	96 e8       	ldi	r25, 0x86	; 134
 82c:	86 2f       	mov	r24, r22
 82e:	70 e0       	ldi	r23, 0x00	; 0
 830:	60 e0       	ldi	r22, 0x00	; 0
 832:	2a f0       	brmi	.+10     	; 0x83e <__floatsisf+0x6c>
 834:	9a 95       	dec	r25
 836:	66 0f       	add	r22, r22
 838:	77 1f       	adc	r23, r23
 83a:	88 1f       	adc	r24, r24
 83c:	da f7       	brpl	.-10     	; 0x834 <__floatsisf+0x62>
 83e:	88 0f       	add	r24, r24
 840:	96 95       	lsr	r25
 842:	87 95       	ror	r24
 844:	97 f9       	bld	r25, 7
 846:	08 95       	ret

00000848 <__fp_cmp>:
 848:	99 0f       	add	r25, r25
 84a:	00 08       	sbc	r0, r0
 84c:	55 0f       	add	r21, r21
 84e:	aa 0b       	sbc	r26, r26
 850:	e0 e8       	ldi	r30, 0x80	; 128
 852:	fe ef       	ldi	r31, 0xFE	; 254
 854:	16 16       	cp	r1, r22
 856:	17 06       	cpc	r1, r23
 858:	e8 07       	cpc	r30, r24
 85a:	f9 07       	cpc	r31, r25
 85c:	c0 f0       	brcs	.+48     	; 0x88e <__fp_cmp+0x46>
 85e:	12 16       	cp	r1, r18
 860:	13 06       	cpc	r1, r19
 862:	e4 07       	cpc	r30, r20
 864:	f5 07       	cpc	r31, r21
 866:	98 f0       	brcs	.+38     	; 0x88e <__fp_cmp+0x46>
 868:	62 1b       	sub	r22, r18
 86a:	73 0b       	sbc	r23, r19
 86c:	84 0b       	sbc	r24, r20
 86e:	95 0b       	sbc	r25, r21
 870:	39 f4       	brne	.+14     	; 0x880 <__fp_cmp+0x38>
 872:	0a 26       	eor	r0, r26
 874:	61 f0       	breq	.+24     	; 0x88e <__fp_cmp+0x46>
 876:	23 2b       	or	r18, r19
 878:	24 2b       	or	r18, r20
 87a:	25 2b       	or	r18, r21
 87c:	21 f4       	brne	.+8      	; 0x886 <__fp_cmp+0x3e>
 87e:	08 95       	ret
 880:	0a 26       	eor	r0, r26
 882:	09 f4       	brne	.+2      	; 0x886 <__fp_cmp+0x3e>
 884:	a1 40       	sbci	r26, 0x01	; 1
 886:	a6 95       	lsr	r26
 888:	8f ef       	ldi	r24, 0xFF	; 255
 88a:	81 1d       	adc	r24, r1
 88c:	81 1d       	adc	r24, r1
 88e:	08 95       	ret

00000890 <__fp_inf>:
 890:	97 f9       	bld	r25, 7
 892:	9f 67       	ori	r25, 0x7F	; 127
 894:	80 e8       	ldi	r24, 0x80	; 128
 896:	70 e0       	ldi	r23, 0x00	; 0
 898:	60 e0       	ldi	r22, 0x00	; 0
 89a:	08 95       	ret

0000089c <__fp_nan>:
 89c:	9f ef       	ldi	r25, 0xFF	; 255
 89e:	80 ec       	ldi	r24, 0xC0	; 192
 8a0:	08 95       	ret

000008a2 <__fp_pscA>:
 8a2:	00 24       	eor	r0, r0
 8a4:	0a 94       	dec	r0
 8a6:	16 16       	cp	r1, r22
 8a8:	17 06       	cpc	r1, r23
 8aa:	18 06       	cpc	r1, r24
 8ac:	09 06       	cpc	r0, r25
 8ae:	08 95       	ret

000008b0 <__fp_pscB>:
 8b0:	00 24       	eor	r0, r0
 8b2:	0a 94       	dec	r0
 8b4:	12 16       	cp	r1, r18
 8b6:	13 06       	cpc	r1, r19
 8b8:	14 06       	cpc	r1, r20
 8ba:	05 06       	cpc	r0, r21
 8bc:	08 95       	ret

000008be <__fp_round>:
 8be:	09 2e       	mov	r0, r25
 8c0:	03 94       	inc	r0
 8c2:	00 0c       	add	r0, r0
 8c4:	11 f4       	brne	.+4      	; 0x8ca <__fp_round+0xc>
 8c6:	88 23       	and	r24, r24
 8c8:	52 f0       	brmi	.+20     	; 0x8de <__fp_round+0x20>
 8ca:	bb 0f       	add	r27, r27
 8cc:	40 f4       	brcc	.+16     	; 0x8de <__fp_round+0x20>
 8ce:	bf 2b       	or	r27, r31
 8d0:	11 f4       	brne	.+4      	; 0x8d6 <__fp_round+0x18>
 8d2:	60 ff       	sbrs	r22, 0
 8d4:	04 c0       	rjmp	.+8      	; 0x8de <__fp_round+0x20>
 8d6:	6f 5f       	subi	r22, 0xFF	; 255
 8d8:	7f 4f       	sbci	r23, 0xFF	; 255
 8da:	8f 4f       	sbci	r24, 0xFF	; 255
 8dc:	9f 4f       	sbci	r25, 0xFF	; 255
 8de:	08 95       	ret

000008e0 <__fp_split3>:
 8e0:	57 fd       	sbrc	r21, 7
 8e2:	90 58       	subi	r25, 0x80	; 128
 8e4:	44 0f       	add	r20, r20
 8e6:	55 1f       	adc	r21, r21
 8e8:	59 f0       	breq	.+22     	; 0x900 <__fp_splitA+0x10>
 8ea:	5f 3f       	cpi	r21, 0xFF	; 255
 8ec:	71 f0       	breq	.+28     	; 0x90a <__fp_splitA+0x1a>
 8ee:	47 95       	ror	r20

000008f0 <__fp_splitA>:
 8f0:	88 0f       	add	r24, r24
 8f2:	97 fb       	bst	r25, 7
 8f4:	99 1f       	adc	r25, r25
 8f6:	61 f0       	breq	.+24     	; 0x910 <__fp_splitA+0x20>
 8f8:	9f 3f       	cpi	r25, 0xFF	; 255
 8fa:	79 f0       	breq	.+30     	; 0x91a <__fp_splitA+0x2a>
 8fc:	87 95       	ror	r24
 8fe:	08 95       	ret
 900:	12 16       	cp	r1, r18
 902:	13 06       	cpc	r1, r19
 904:	14 06       	cpc	r1, r20
 906:	55 1f       	adc	r21, r21
 908:	f2 cf       	rjmp	.-28     	; 0x8ee <__fp_split3+0xe>
 90a:	46 95       	lsr	r20
 90c:	f1 df       	rcall	.-30     	; 0x8f0 <__fp_splitA>
 90e:	08 c0       	rjmp	.+16     	; 0x920 <__fp_splitA+0x30>
 910:	16 16       	cp	r1, r22
 912:	17 06       	cpc	r1, r23
 914:	18 06       	cpc	r1, r24
 916:	99 1f       	adc	r25, r25
 918:	f1 cf       	rjmp	.-30     	; 0x8fc <__fp_splitA+0xc>
 91a:	86 95       	lsr	r24
 91c:	71 05       	cpc	r23, r1
 91e:	61 05       	cpc	r22, r1
 920:	08 94       	sec
 922:	08 95       	ret

00000924 <__fp_zero>:
 924:	e8 94       	clt

00000926 <__fp_szero>:
 926:	bb 27       	eor	r27, r27
 928:	66 27       	eor	r22, r22
 92a:	77 27       	eor	r23, r23
 92c:	cb 01       	movw	r24, r22
 92e:	97 f9       	bld	r25, 7
 930:	08 95       	ret

00000932 <__gesf2>:
 932:	0e 94 24 04 	call	0x848	; 0x848 <__fp_cmp>
 936:	08 f4       	brcc	.+2      	; 0x93a <__gesf2+0x8>
 938:	8f ef       	ldi	r24, 0xFF	; 255
 93a:	08 95       	ret

0000093c <dtostrf>:
 93c:	ef 92       	push	r14
 93e:	0f 93       	push	r16
 940:	1f 93       	push	r17
 942:	cf 93       	push	r28
 944:	df 93       	push	r29
 946:	e8 01       	movw	r28, r16
 948:	47 fd       	sbrc	r20, 7
 94a:	02 c0       	rjmp	.+4      	; 0x950 <dtostrf+0x14>
 94c:	34 e0       	ldi	r19, 0x04	; 4
 94e:	01 c0       	rjmp	.+2      	; 0x952 <dtostrf+0x16>
 950:	34 e1       	ldi	r19, 0x14	; 20
 952:	04 2e       	mov	r0, r20
 954:	00 0c       	add	r0, r0
 956:	55 0b       	sbc	r21, r21
 958:	57 ff       	sbrs	r21, 7
 95a:	03 c0       	rjmp	.+6      	; 0x962 <dtostrf+0x26>
 95c:	51 95       	neg	r21
 95e:	41 95       	neg	r20
 960:	51 09       	sbc	r21, r1
 962:	e3 2e       	mov	r14, r19
 964:	02 2f       	mov	r16, r18
 966:	24 2f       	mov	r18, r20
 968:	ae 01       	movw	r20, r28
 96a:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <dtoa_prf>
 96e:	ce 01       	movw	r24, r28
 970:	df 91       	pop	r29
 972:	cf 91       	pop	r28
 974:	1f 91       	pop	r17
 976:	0f 91       	pop	r16
 978:	ef 90       	pop	r14
 97a:	08 95       	ret

0000097c <__itoa_ncheck>:
 97c:	bb 27       	eor	r27, r27
 97e:	4a 30       	cpi	r20, 0x0A	; 10
 980:	31 f4       	brne	.+12     	; 0x98e <__itoa_ncheck+0x12>
 982:	99 23       	and	r25, r25
 984:	22 f4       	brpl	.+8      	; 0x98e <__itoa_ncheck+0x12>
 986:	bd e2       	ldi	r27, 0x2D	; 45
 988:	90 95       	com	r25
 98a:	81 95       	neg	r24
 98c:	9f 4f       	sbci	r25, 0xFF	; 255
 98e:	0c 94 ca 04 	jmp	0x994	; 0x994 <__utoa_common>

00000992 <__utoa_ncheck>:
 992:	bb 27       	eor	r27, r27

00000994 <__utoa_common>:
 994:	fb 01       	movw	r30, r22
 996:	55 27       	eor	r21, r21
 998:	aa 27       	eor	r26, r26
 99a:	88 0f       	add	r24, r24
 99c:	99 1f       	adc	r25, r25
 99e:	aa 1f       	adc	r26, r26
 9a0:	a4 17       	cp	r26, r20
 9a2:	10 f0       	brcs	.+4      	; 0x9a8 <__utoa_common+0x14>
 9a4:	a4 1b       	sub	r26, r20
 9a6:	83 95       	inc	r24
 9a8:	50 51       	subi	r21, 0x10	; 16
 9aa:	b9 f7       	brne	.-18     	; 0x99a <__utoa_common+0x6>
 9ac:	a0 5d       	subi	r26, 0xD0	; 208
 9ae:	aa 33       	cpi	r26, 0x3A	; 58
 9b0:	08 f0       	brcs	.+2      	; 0x9b4 <__utoa_common+0x20>
 9b2:	a9 5d       	subi	r26, 0xD9	; 217
 9b4:	a1 93       	st	Z+, r26
 9b6:	00 97       	sbiw	r24, 0x00	; 0
 9b8:	79 f7       	brne	.-34     	; 0x998 <__utoa_common+0x4>
 9ba:	b1 11       	cpse	r27, r1
 9bc:	b1 93       	st	Z+, r27
 9be:	11 92       	st	Z+, r1
 9c0:	cb 01       	movw	r24, r22
 9c2:	0c 94 15 07 	jmp	0xe2a	; 0xe2a <strrev>

000009c6 <dtoa_prf>:
 9c6:	a9 e0       	ldi	r26, 0x09	; 9
 9c8:	b0 e0       	ldi	r27, 0x00	; 0
 9ca:	e9 ee       	ldi	r30, 0xE9	; 233
 9cc:	f4 e0       	ldi	r31, 0x04	; 4
 9ce:	0c 94 2b 07 	jmp	0xe56	; 0xe56 <__prologue_saves__+0xc>
 9d2:	6a 01       	movw	r12, r20
 9d4:	12 2f       	mov	r17, r18
 9d6:	b0 2e       	mov	r11, r16
 9d8:	2b e3       	ldi	r18, 0x3B	; 59
 9da:	20 17       	cp	r18, r16
 9dc:	20 f0       	brcs	.+8      	; 0x9e6 <dtoa_prf+0x20>
 9de:	ff 24       	eor	r15, r15
 9e0:	f3 94       	inc	r15
 9e2:	f0 0e       	add	r15, r16
 9e4:	02 c0       	rjmp	.+4      	; 0x9ea <dtoa_prf+0x24>
 9e6:	2c e3       	ldi	r18, 0x3C	; 60
 9e8:	f2 2e       	mov	r15, r18
 9ea:	0f 2d       	mov	r16, r15
 9ec:	27 e0       	ldi	r18, 0x07	; 7
 9ee:	ae 01       	movw	r20, r28
 9f0:	4f 5f       	subi	r20, 0xFF	; 255
 9f2:	5f 4f       	sbci	r21, 0xFF	; 255
 9f4:	0e 94 3d 06 	call	0xc7a	; 0xc7a <__ftoa_engine>
 9f8:	bc 01       	movw	r22, r24
 9fa:	49 81       	ldd	r20, Y+1	; 0x01
 9fc:	84 2f       	mov	r24, r20
 9fe:	89 70       	andi	r24, 0x09	; 9
 a00:	81 30       	cpi	r24, 0x01	; 1
 a02:	31 f0       	breq	.+12     	; 0xa10 <dtoa_prf+0x4a>
 a04:	e1 fc       	sbrc	r14, 1
 a06:	06 c0       	rjmp	.+12     	; 0xa14 <dtoa_prf+0x4e>
 a08:	e0 fe       	sbrs	r14, 0
 a0a:	06 c0       	rjmp	.+12     	; 0xa18 <dtoa_prf+0x52>
 a0c:	90 e2       	ldi	r25, 0x20	; 32
 a0e:	05 c0       	rjmp	.+10     	; 0xa1a <dtoa_prf+0x54>
 a10:	9d e2       	ldi	r25, 0x2D	; 45
 a12:	03 c0       	rjmp	.+6      	; 0xa1a <dtoa_prf+0x54>
 a14:	9b e2       	ldi	r25, 0x2B	; 43
 a16:	01 c0       	rjmp	.+2      	; 0xa1a <dtoa_prf+0x54>
 a18:	90 e0       	ldi	r25, 0x00	; 0
 a1a:	5e 2d       	mov	r21, r14
 a1c:	50 71       	andi	r21, 0x10	; 16
 a1e:	43 ff       	sbrs	r20, 3
 a20:	3c c0       	rjmp	.+120    	; 0xa9a <dtoa_prf+0xd4>
 a22:	91 11       	cpse	r25, r1
 a24:	02 c0       	rjmp	.+4      	; 0xa2a <dtoa_prf+0x64>
 a26:	83 e0       	ldi	r24, 0x03	; 3
 a28:	01 c0       	rjmp	.+2      	; 0xa2c <dtoa_prf+0x66>
 a2a:	84 e0       	ldi	r24, 0x04	; 4
 a2c:	81 17       	cp	r24, r17
 a2e:	18 f4       	brcc	.+6      	; 0xa36 <dtoa_prf+0x70>
 a30:	21 2f       	mov	r18, r17
 a32:	28 1b       	sub	r18, r24
 a34:	01 c0       	rjmp	.+2      	; 0xa38 <dtoa_prf+0x72>
 a36:	20 e0       	ldi	r18, 0x00	; 0
 a38:	51 11       	cpse	r21, r1
 a3a:	0b c0       	rjmp	.+22     	; 0xa52 <dtoa_prf+0x8c>
 a3c:	f6 01       	movw	r30, r12
 a3e:	82 2f       	mov	r24, r18
 a40:	30 e2       	ldi	r19, 0x20	; 32
 a42:	88 23       	and	r24, r24
 a44:	19 f0       	breq	.+6      	; 0xa4c <dtoa_prf+0x86>
 a46:	31 93       	st	Z+, r19
 a48:	81 50       	subi	r24, 0x01	; 1
 a4a:	fb cf       	rjmp	.-10     	; 0xa42 <dtoa_prf+0x7c>
 a4c:	c2 0e       	add	r12, r18
 a4e:	d1 1c       	adc	r13, r1
 a50:	20 e0       	ldi	r18, 0x00	; 0
 a52:	99 23       	and	r25, r25
 a54:	29 f0       	breq	.+10     	; 0xa60 <dtoa_prf+0x9a>
 a56:	d6 01       	movw	r26, r12
 a58:	9c 93       	st	X, r25
 a5a:	f6 01       	movw	r30, r12
 a5c:	31 96       	adiw	r30, 0x01	; 1
 a5e:	6f 01       	movw	r12, r30
 a60:	c6 01       	movw	r24, r12
 a62:	03 96       	adiw	r24, 0x03	; 3
 a64:	e2 fe       	sbrs	r14, 2
 a66:	0a c0       	rjmp	.+20     	; 0xa7c <dtoa_prf+0xb6>
 a68:	3e e4       	ldi	r19, 0x4E	; 78
 a6a:	d6 01       	movw	r26, r12
 a6c:	3c 93       	st	X, r19
 a6e:	41 e4       	ldi	r20, 0x41	; 65
 a70:	11 96       	adiw	r26, 0x01	; 1
 a72:	4c 93       	st	X, r20
 a74:	11 97       	sbiw	r26, 0x01	; 1
 a76:	12 96       	adiw	r26, 0x02	; 2
 a78:	3c 93       	st	X, r19
 a7a:	06 c0       	rjmp	.+12     	; 0xa88 <dtoa_prf+0xc2>
 a7c:	3e e6       	ldi	r19, 0x6E	; 110
 a7e:	f6 01       	movw	r30, r12
 a80:	30 83       	st	Z, r19
 a82:	41 e6       	ldi	r20, 0x61	; 97
 a84:	41 83       	std	Z+1, r20	; 0x01
 a86:	32 83       	std	Z+2, r19	; 0x02
 a88:	fc 01       	movw	r30, r24
 a8a:	32 2f       	mov	r19, r18
 a8c:	40 e2       	ldi	r20, 0x20	; 32
 a8e:	33 23       	and	r19, r19
 a90:	09 f4       	brne	.+2      	; 0xa94 <dtoa_prf+0xce>
 a92:	42 c0       	rjmp	.+132    	; 0xb18 <dtoa_prf+0x152>
 a94:	41 93       	st	Z+, r20
 a96:	31 50       	subi	r19, 0x01	; 1
 a98:	fa cf       	rjmp	.-12     	; 0xa8e <dtoa_prf+0xc8>
 a9a:	42 ff       	sbrs	r20, 2
 a9c:	44 c0       	rjmp	.+136    	; 0xb26 <dtoa_prf+0x160>
 a9e:	91 11       	cpse	r25, r1
 aa0:	02 c0       	rjmp	.+4      	; 0xaa6 <dtoa_prf+0xe0>
 aa2:	83 e0       	ldi	r24, 0x03	; 3
 aa4:	01 c0       	rjmp	.+2      	; 0xaa8 <dtoa_prf+0xe2>
 aa6:	84 e0       	ldi	r24, 0x04	; 4
 aa8:	81 17       	cp	r24, r17
 aaa:	18 f4       	brcc	.+6      	; 0xab2 <dtoa_prf+0xec>
 aac:	21 2f       	mov	r18, r17
 aae:	28 1b       	sub	r18, r24
 ab0:	01 c0       	rjmp	.+2      	; 0xab4 <dtoa_prf+0xee>
 ab2:	20 e0       	ldi	r18, 0x00	; 0
 ab4:	51 11       	cpse	r21, r1
 ab6:	0b c0       	rjmp	.+22     	; 0xace <dtoa_prf+0x108>
 ab8:	f6 01       	movw	r30, r12
 aba:	82 2f       	mov	r24, r18
 abc:	30 e2       	ldi	r19, 0x20	; 32
 abe:	88 23       	and	r24, r24
 ac0:	19 f0       	breq	.+6      	; 0xac8 <dtoa_prf+0x102>
 ac2:	31 93       	st	Z+, r19
 ac4:	81 50       	subi	r24, 0x01	; 1
 ac6:	fb cf       	rjmp	.-10     	; 0xabe <dtoa_prf+0xf8>
 ac8:	c2 0e       	add	r12, r18
 aca:	d1 1c       	adc	r13, r1
 acc:	20 e0       	ldi	r18, 0x00	; 0
 ace:	99 23       	and	r25, r25
 ad0:	29 f0       	breq	.+10     	; 0xadc <dtoa_prf+0x116>
 ad2:	d6 01       	movw	r26, r12
 ad4:	9c 93       	st	X, r25
 ad6:	f6 01       	movw	r30, r12
 ad8:	31 96       	adiw	r30, 0x01	; 1
 ada:	6f 01       	movw	r12, r30
 adc:	c6 01       	movw	r24, r12
 ade:	03 96       	adiw	r24, 0x03	; 3
 ae0:	e2 fe       	sbrs	r14, 2
 ae2:	0b c0       	rjmp	.+22     	; 0xafa <dtoa_prf+0x134>
 ae4:	39 e4       	ldi	r19, 0x49	; 73
 ae6:	d6 01       	movw	r26, r12
 ae8:	3c 93       	st	X, r19
 aea:	3e e4       	ldi	r19, 0x4E	; 78
 aec:	11 96       	adiw	r26, 0x01	; 1
 aee:	3c 93       	st	X, r19
 af0:	11 97       	sbiw	r26, 0x01	; 1
 af2:	36 e4       	ldi	r19, 0x46	; 70
 af4:	12 96       	adiw	r26, 0x02	; 2
 af6:	3c 93       	st	X, r19
 af8:	07 c0       	rjmp	.+14     	; 0xb08 <dtoa_prf+0x142>
 afa:	39 e6       	ldi	r19, 0x69	; 105
 afc:	f6 01       	movw	r30, r12
 afe:	30 83       	st	Z, r19
 b00:	3e e6       	ldi	r19, 0x6E	; 110
 b02:	31 83       	std	Z+1, r19	; 0x01
 b04:	36 e6       	ldi	r19, 0x66	; 102
 b06:	32 83       	std	Z+2, r19	; 0x02
 b08:	fc 01       	movw	r30, r24
 b0a:	32 2f       	mov	r19, r18
 b0c:	40 e2       	ldi	r20, 0x20	; 32
 b0e:	33 23       	and	r19, r19
 b10:	19 f0       	breq	.+6      	; 0xb18 <dtoa_prf+0x152>
 b12:	41 93       	st	Z+, r20
 b14:	31 50       	subi	r19, 0x01	; 1
 b16:	fb cf       	rjmp	.-10     	; 0xb0e <dtoa_prf+0x148>
 b18:	fc 01       	movw	r30, r24
 b1a:	e2 0f       	add	r30, r18
 b1c:	f1 1d       	adc	r31, r1
 b1e:	10 82       	st	Z, r1
 b20:	8e ef       	ldi	r24, 0xFE	; 254
 b22:	9f ef       	ldi	r25, 0xFF	; 255
 b24:	a6 c0       	rjmp	.+332    	; 0xc72 <dtoa_prf+0x2ac>
 b26:	21 e0       	ldi	r18, 0x01	; 1
 b28:	30 e0       	ldi	r19, 0x00	; 0
 b2a:	91 11       	cpse	r25, r1
 b2c:	02 c0       	rjmp	.+4      	; 0xb32 <dtoa_prf+0x16c>
 b2e:	20 e0       	ldi	r18, 0x00	; 0
 b30:	30 e0       	ldi	r19, 0x00	; 0
 b32:	16 16       	cp	r1, r22
 b34:	17 06       	cpc	r1, r23
 b36:	1c f4       	brge	.+6      	; 0xb3e <dtoa_prf+0x178>
 b38:	fb 01       	movw	r30, r22
 b3a:	31 96       	adiw	r30, 0x01	; 1
 b3c:	02 c0       	rjmp	.+4      	; 0xb42 <dtoa_prf+0x17c>
 b3e:	e1 e0       	ldi	r30, 0x01	; 1
 b40:	f0 e0       	ldi	r31, 0x00	; 0
 b42:	2e 0f       	add	r18, r30
 b44:	3f 1f       	adc	r19, r31
 b46:	bb 20       	and	r11, r11
 b48:	21 f0       	breq	.+8      	; 0xb52 <dtoa_prf+0x18c>
 b4a:	eb 2d       	mov	r30, r11
 b4c:	f0 e0       	ldi	r31, 0x00	; 0
 b4e:	31 96       	adiw	r30, 0x01	; 1
 b50:	02 c0       	rjmp	.+4      	; 0xb56 <dtoa_prf+0x190>
 b52:	e0 e0       	ldi	r30, 0x00	; 0
 b54:	f0 e0       	ldi	r31, 0x00	; 0
 b56:	2e 0f       	add	r18, r30
 b58:	3f 1f       	adc	r19, r31
 b5a:	e1 2f       	mov	r30, r17
 b5c:	f0 e0       	ldi	r31, 0x00	; 0
 b5e:	2e 17       	cp	r18, r30
 b60:	3f 07       	cpc	r19, r31
 b62:	1c f4       	brge	.+6      	; 0xb6a <dtoa_prf+0x1a4>
 b64:	12 1b       	sub	r17, r18
 b66:	21 2f       	mov	r18, r17
 b68:	01 c0       	rjmp	.+2      	; 0xb6c <dtoa_prf+0x1a6>
 b6a:	20 e0       	ldi	r18, 0x00	; 0
 b6c:	8e 2d       	mov	r24, r14
 b6e:	88 71       	andi	r24, 0x18	; 24
 b70:	59 f4       	brne	.+22     	; 0xb88 <dtoa_prf+0x1c2>
 b72:	f6 01       	movw	r30, r12
 b74:	82 2f       	mov	r24, r18
 b76:	30 e2       	ldi	r19, 0x20	; 32
 b78:	88 23       	and	r24, r24
 b7a:	19 f0       	breq	.+6      	; 0xb82 <dtoa_prf+0x1bc>
 b7c:	31 93       	st	Z+, r19
 b7e:	81 50       	subi	r24, 0x01	; 1
 b80:	fb cf       	rjmp	.-10     	; 0xb78 <dtoa_prf+0x1b2>
 b82:	c2 0e       	add	r12, r18
 b84:	d1 1c       	adc	r13, r1
 b86:	20 e0       	ldi	r18, 0x00	; 0
 b88:	99 23       	and	r25, r25
 b8a:	29 f0       	breq	.+10     	; 0xb96 <dtoa_prf+0x1d0>
 b8c:	d6 01       	movw	r26, r12
 b8e:	9c 93       	st	X, r25
 b90:	f6 01       	movw	r30, r12
 b92:	31 96       	adiw	r30, 0x01	; 1
 b94:	6f 01       	movw	r12, r30
 b96:	51 11       	cpse	r21, r1
 b98:	0b c0       	rjmp	.+22     	; 0xbb0 <dtoa_prf+0x1ea>
 b9a:	f6 01       	movw	r30, r12
 b9c:	82 2f       	mov	r24, r18
 b9e:	90 e3       	ldi	r25, 0x30	; 48
 ba0:	88 23       	and	r24, r24
 ba2:	19 f0       	breq	.+6      	; 0xbaa <dtoa_prf+0x1e4>
 ba4:	91 93       	st	Z+, r25
 ba6:	81 50       	subi	r24, 0x01	; 1
 ba8:	fb cf       	rjmp	.-10     	; 0xba0 <dtoa_prf+0x1da>
 baa:	c2 0e       	add	r12, r18
 bac:	d1 1c       	adc	r13, r1
 bae:	20 e0       	ldi	r18, 0x00	; 0
 bb0:	0f 2d       	mov	r16, r15
 bb2:	06 0f       	add	r16, r22
 bb4:	9a 81       	ldd	r25, Y+2	; 0x02
 bb6:	34 2f       	mov	r19, r20
 bb8:	30 71       	andi	r19, 0x10	; 16
 bba:	44 ff       	sbrs	r20, 4
 bbc:	03 c0       	rjmp	.+6      	; 0xbc4 <dtoa_prf+0x1fe>
 bbe:	91 33       	cpi	r25, 0x31	; 49
 bc0:	09 f4       	brne	.+2      	; 0xbc4 <dtoa_prf+0x1fe>
 bc2:	01 50       	subi	r16, 0x01	; 1
 bc4:	10 16       	cp	r1, r16
 bc6:	24 f4       	brge	.+8      	; 0xbd0 <dtoa_prf+0x20a>
 bc8:	09 30       	cpi	r16, 0x09	; 9
 bca:	18 f0       	brcs	.+6      	; 0xbd2 <dtoa_prf+0x20c>
 bcc:	08 e0       	ldi	r16, 0x08	; 8
 bce:	01 c0       	rjmp	.+2      	; 0xbd2 <dtoa_prf+0x20c>
 bd0:	01 e0       	ldi	r16, 0x01	; 1
 bd2:	ab 01       	movw	r20, r22
 bd4:	77 ff       	sbrs	r23, 7
 bd6:	02 c0       	rjmp	.+4      	; 0xbdc <dtoa_prf+0x216>
 bd8:	40 e0       	ldi	r20, 0x00	; 0
 bda:	50 e0       	ldi	r21, 0x00	; 0
 bdc:	fb 01       	movw	r30, r22
 bde:	e4 1b       	sub	r30, r20
 be0:	f5 0b       	sbc	r31, r21
 be2:	a1 e0       	ldi	r26, 0x01	; 1
 be4:	b0 e0       	ldi	r27, 0x00	; 0
 be6:	ac 0f       	add	r26, r28
 be8:	bd 1f       	adc	r27, r29
 bea:	ea 0f       	add	r30, r26
 bec:	fb 1f       	adc	r31, r27
 bee:	8e e2       	ldi	r24, 0x2E	; 46
 bf0:	a8 2e       	mov	r10, r24
 bf2:	4b 01       	movw	r8, r22
 bf4:	80 1a       	sub	r8, r16
 bf6:	91 08       	sbc	r9, r1
 bf8:	0b 2d       	mov	r16, r11
 bfa:	10 e0       	ldi	r17, 0x00	; 0
 bfc:	11 95       	neg	r17
 bfe:	01 95       	neg	r16
 c00:	11 09       	sbc	r17, r1
 c02:	4f 3f       	cpi	r20, 0xFF	; 255
 c04:	bf ef       	ldi	r27, 0xFF	; 255
 c06:	5b 07       	cpc	r21, r27
 c08:	21 f4       	brne	.+8      	; 0xc12 <dtoa_prf+0x24c>
 c0a:	d6 01       	movw	r26, r12
 c0c:	ac 92       	st	X, r10
 c0e:	11 96       	adiw	r26, 0x01	; 1
 c10:	6d 01       	movw	r12, r26
 c12:	64 17       	cp	r22, r20
 c14:	75 07       	cpc	r23, r21
 c16:	2c f0       	brlt	.+10     	; 0xc22 <dtoa_prf+0x25c>
 c18:	84 16       	cp	r8, r20
 c1a:	95 06       	cpc	r9, r21
 c1c:	14 f4       	brge	.+4      	; 0xc22 <dtoa_prf+0x25c>
 c1e:	81 81       	ldd	r24, Z+1	; 0x01
 c20:	01 c0       	rjmp	.+2      	; 0xc24 <dtoa_prf+0x25e>
 c22:	80 e3       	ldi	r24, 0x30	; 48
 c24:	41 50       	subi	r20, 0x01	; 1
 c26:	51 09       	sbc	r21, r1
 c28:	31 96       	adiw	r30, 0x01	; 1
 c2a:	d6 01       	movw	r26, r12
 c2c:	11 96       	adiw	r26, 0x01	; 1
 c2e:	7d 01       	movw	r14, r26
 c30:	40 17       	cp	r20, r16
 c32:	51 07       	cpc	r21, r17
 c34:	24 f0       	brlt	.+8      	; 0xc3e <dtoa_prf+0x278>
 c36:	d6 01       	movw	r26, r12
 c38:	8c 93       	st	X, r24
 c3a:	67 01       	movw	r12, r14
 c3c:	e2 cf       	rjmp	.-60     	; 0xc02 <dtoa_prf+0x23c>
 c3e:	64 17       	cp	r22, r20
 c40:	75 07       	cpc	r23, r21
 c42:	39 f4       	brne	.+14     	; 0xc52 <dtoa_prf+0x28c>
 c44:	96 33       	cpi	r25, 0x36	; 54
 c46:	20 f4       	brcc	.+8      	; 0xc50 <dtoa_prf+0x28a>
 c48:	95 33       	cpi	r25, 0x35	; 53
 c4a:	19 f4       	brne	.+6      	; 0xc52 <dtoa_prf+0x28c>
 c4c:	31 11       	cpse	r19, r1
 c4e:	01 c0       	rjmp	.+2      	; 0xc52 <dtoa_prf+0x28c>
 c50:	81 e3       	ldi	r24, 0x31	; 49
 c52:	f6 01       	movw	r30, r12
 c54:	80 83       	st	Z, r24
 c56:	f7 01       	movw	r30, r14
 c58:	82 2f       	mov	r24, r18
 c5a:	90 e2       	ldi	r25, 0x20	; 32
 c5c:	88 23       	and	r24, r24
 c5e:	19 f0       	breq	.+6      	; 0xc66 <dtoa_prf+0x2a0>
 c60:	91 93       	st	Z+, r25
 c62:	81 50       	subi	r24, 0x01	; 1
 c64:	fb cf       	rjmp	.-10     	; 0xc5c <dtoa_prf+0x296>
 c66:	f7 01       	movw	r30, r14
 c68:	e2 0f       	add	r30, r18
 c6a:	f1 1d       	adc	r31, r1
 c6c:	10 82       	st	Z, r1
 c6e:	80 e0       	ldi	r24, 0x00	; 0
 c70:	90 e0       	ldi	r25, 0x00	; 0
 c72:	29 96       	adiw	r28, 0x09	; 9
 c74:	ec e0       	ldi	r30, 0x0C	; 12
 c76:	0c 94 47 07 	jmp	0xe8e	; 0xe8e <__epilogue_restores__+0xc>

00000c7a <__ftoa_engine>:
 c7a:	28 30       	cpi	r18, 0x08	; 8
 c7c:	08 f0       	brcs	.+2      	; 0xc80 <__ftoa_engine+0x6>
 c7e:	27 e0       	ldi	r18, 0x07	; 7
 c80:	33 27       	eor	r19, r19
 c82:	da 01       	movw	r26, r20
 c84:	99 0f       	add	r25, r25
 c86:	31 1d       	adc	r19, r1
 c88:	87 fd       	sbrc	r24, 7
 c8a:	91 60       	ori	r25, 0x01	; 1
 c8c:	00 96       	adiw	r24, 0x00	; 0
 c8e:	61 05       	cpc	r22, r1
 c90:	71 05       	cpc	r23, r1
 c92:	39 f4       	brne	.+14     	; 0xca2 <__ftoa_engine+0x28>
 c94:	32 60       	ori	r19, 0x02	; 2
 c96:	2e 5f       	subi	r18, 0xFE	; 254
 c98:	3d 93       	st	X+, r19
 c9a:	30 e3       	ldi	r19, 0x30	; 48
 c9c:	2a 95       	dec	r18
 c9e:	e1 f7       	brne	.-8      	; 0xc98 <__ftoa_engine+0x1e>
 ca0:	08 95       	ret
 ca2:	9f 3f       	cpi	r25, 0xFF	; 255
 ca4:	30 f0       	brcs	.+12     	; 0xcb2 <__ftoa_engine+0x38>
 ca6:	80 38       	cpi	r24, 0x80	; 128
 ca8:	71 05       	cpc	r23, r1
 caa:	61 05       	cpc	r22, r1
 cac:	09 f0       	breq	.+2      	; 0xcb0 <__ftoa_engine+0x36>
 cae:	3c 5f       	subi	r19, 0xFC	; 252
 cb0:	3c 5f       	subi	r19, 0xFC	; 252
 cb2:	3d 93       	st	X+, r19
 cb4:	91 30       	cpi	r25, 0x01	; 1
 cb6:	08 f0       	brcs	.+2      	; 0xcba <__ftoa_engine+0x40>
 cb8:	80 68       	ori	r24, 0x80	; 128
 cba:	91 1d       	adc	r25, r1
 cbc:	df 93       	push	r29
 cbe:	cf 93       	push	r28
 cc0:	1f 93       	push	r17
 cc2:	0f 93       	push	r16
 cc4:	ff 92       	push	r15
 cc6:	ef 92       	push	r14
 cc8:	19 2f       	mov	r17, r25
 cca:	98 7f       	andi	r25, 0xF8	; 248
 ccc:	96 95       	lsr	r25
 cce:	e9 2f       	mov	r30, r25
 cd0:	96 95       	lsr	r25
 cd2:	96 95       	lsr	r25
 cd4:	e9 0f       	add	r30, r25
 cd6:	ff 27       	eor	r31, r31
 cd8:	e2 55       	subi	r30, 0x52	; 82
 cda:	ff 4f       	sbci	r31, 0xFF	; 255
 cdc:	99 27       	eor	r25, r25
 cde:	33 27       	eor	r19, r19
 ce0:	ee 24       	eor	r14, r14
 ce2:	ff 24       	eor	r15, r15
 ce4:	a7 01       	movw	r20, r14
 ce6:	e7 01       	movw	r28, r14
 ce8:	05 90       	lpm	r0, Z+
 cea:	08 94       	sec
 cec:	07 94       	ror	r0
 cee:	28 f4       	brcc	.+10     	; 0xcfa <__ftoa_engine+0x80>
 cf0:	36 0f       	add	r19, r22
 cf2:	e7 1e       	adc	r14, r23
 cf4:	f8 1e       	adc	r15, r24
 cf6:	49 1f       	adc	r20, r25
 cf8:	51 1d       	adc	r21, r1
 cfa:	66 0f       	add	r22, r22
 cfc:	77 1f       	adc	r23, r23
 cfe:	88 1f       	adc	r24, r24
 d00:	99 1f       	adc	r25, r25
 d02:	06 94       	lsr	r0
 d04:	a1 f7       	brne	.-24     	; 0xcee <__ftoa_engine+0x74>
 d06:	05 90       	lpm	r0, Z+
 d08:	07 94       	ror	r0
 d0a:	28 f4       	brcc	.+10     	; 0xd16 <__ftoa_engine+0x9c>
 d0c:	e7 0e       	add	r14, r23
 d0e:	f8 1e       	adc	r15, r24
 d10:	49 1f       	adc	r20, r25
 d12:	56 1f       	adc	r21, r22
 d14:	c1 1d       	adc	r28, r1
 d16:	77 0f       	add	r23, r23
 d18:	88 1f       	adc	r24, r24
 d1a:	99 1f       	adc	r25, r25
 d1c:	66 1f       	adc	r22, r22
 d1e:	06 94       	lsr	r0
 d20:	a1 f7       	brne	.-24     	; 0xd0a <__ftoa_engine+0x90>
 d22:	05 90       	lpm	r0, Z+
 d24:	07 94       	ror	r0
 d26:	28 f4       	brcc	.+10     	; 0xd32 <__ftoa_engine+0xb8>
 d28:	f8 0e       	add	r15, r24
 d2a:	49 1f       	adc	r20, r25
 d2c:	56 1f       	adc	r21, r22
 d2e:	c7 1f       	adc	r28, r23
 d30:	d1 1d       	adc	r29, r1
 d32:	88 0f       	add	r24, r24
 d34:	99 1f       	adc	r25, r25
 d36:	66 1f       	adc	r22, r22
 d38:	77 1f       	adc	r23, r23
 d3a:	06 94       	lsr	r0
 d3c:	a1 f7       	brne	.-24     	; 0xd26 <__ftoa_engine+0xac>
 d3e:	05 90       	lpm	r0, Z+
 d40:	07 94       	ror	r0
 d42:	20 f4       	brcc	.+8      	; 0xd4c <__ftoa_engine+0xd2>
 d44:	49 0f       	add	r20, r25
 d46:	56 1f       	adc	r21, r22
 d48:	c7 1f       	adc	r28, r23
 d4a:	d8 1f       	adc	r29, r24
 d4c:	99 0f       	add	r25, r25
 d4e:	66 1f       	adc	r22, r22
 d50:	77 1f       	adc	r23, r23
 d52:	88 1f       	adc	r24, r24
 d54:	06 94       	lsr	r0
 d56:	a9 f7       	brne	.-22     	; 0xd42 <__ftoa_engine+0xc8>
 d58:	84 91       	lpm	r24, Z
 d5a:	10 95       	com	r17
 d5c:	17 70       	andi	r17, 0x07	; 7
 d5e:	41 f0       	breq	.+16     	; 0xd70 <__ftoa_engine+0xf6>
 d60:	d6 95       	lsr	r29
 d62:	c7 95       	ror	r28
 d64:	57 95       	ror	r21
 d66:	47 95       	ror	r20
 d68:	f7 94       	ror	r15
 d6a:	e7 94       	ror	r14
 d6c:	1a 95       	dec	r17
 d6e:	c1 f7       	brne	.-16     	; 0xd60 <__ftoa_engine+0xe6>
 d70:	e4 e5       	ldi	r30, 0x54	; 84
 d72:	f0 e0       	ldi	r31, 0x00	; 0
 d74:	68 94       	set
 d76:	15 90       	lpm	r1, Z+
 d78:	15 91       	lpm	r17, Z+
 d7a:	35 91       	lpm	r19, Z+
 d7c:	65 91       	lpm	r22, Z+
 d7e:	95 91       	lpm	r25, Z+
 d80:	05 90       	lpm	r0, Z+
 d82:	7f e2       	ldi	r23, 0x2F	; 47
 d84:	73 95       	inc	r23
 d86:	e1 18       	sub	r14, r1
 d88:	f1 0a       	sbc	r15, r17
 d8a:	43 0b       	sbc	r20, r19
 d8c:	56 0b       	sbc	r21, r22
 d8e:	c9 0b       	sbc	r28, r25
 d90:	d0 09       	sbc	r29, r0
 d92:	c0 f7       	brcc	.-16     	; 0xd84 <__ftoa_engine+0x10a>
 d94:	e1 0c       	add	r14, r1
 d96:	f1 1e       	adc	r15, r17
 d98:	43 1f       	adc	r20, r19
 d9a:	56 1f       	adc	r21, r22
 d9c:	c9 1f       	adc	r28, r25
 d9e:	d0 1d       	adc	r29, r0
 da0:	7e f4       	brtc	.+30     	; 0xdc0 <__ftoa_engine+0x146>
 da2:	70 33       	cpi	r23, 0x30	; 48
 da4:	11 f4       	brne	.+4      	; 0xdaa <__ftoa_engine+0x130>
 da6:	8a 95       	dec	r24
 da8:	e6 cf       	rjmp	.-52     	; 0xd76 <__ftoa_engine+0xfc>
 daa:	e8 94       	clt
 dac:	01 50       	subi	r16, 0x01	; 1
 dae:	30 f0       	brcs	.+12     	; 0xdbc <__ftoa_engine+0x142>
 db0:	08 0f       	add	r16, r24
 db2:	0a f4       	brpl	.+2      	; 0xdb6 <__ftoa_engine+0x13c>
 db4:	00 27       	eor	r16, r16
 db6:	02 17       	cp	r16, r18
 db8:	08 f4       	brcc	.+2      	; 0xdbc <__ftoa_engine+0x142>
 dba:	20 2f       	mov	r18, r16
 dbc:	23 95       	inc	r18
 dbe:	02 2f       	mov	r16, r18
 dc0:	7a 33       	cpi	r23, 0x3A	; 58
 dc2:	28 f0       	brcs	.+10     	; 0xdce <__ftoa_engine+0x154>
 dc4:	79 e3       	ldi	r23, 0x39	; 57
 dc6:	7d 93       	st	X+, r23
 dc8:	2a 95       	dec	r18
 dca:	e9 f7       	brne	.-6      	; 0xdc6 <__ftoa_engine+0x14c>
 dcc:	10 c0       	rjmp	.+32     	; 0xdee <__ftoa_engine+0x174>
 dce:	7d 93       	st	X+, r23
 dd0:	2a 95       	dec	r18
 dd2:	89 f6       	brne	.-94     	; 0xd76 <__ftoa_engine+0xfc>
 dd4:	06 94       	lsr	r0
 dd6:	97 95       	ror	r25
 dd8:	67 95       	ror	r22
 dda:	37 95       	ror	r19
 ddc:	17 95       	ror	r17
 dde:	17 94       	ror	r1
 de0:	e1 18       	sub	r14, r1
 de2:	f1 0a       	sbc	r15, r17
 de4:	43 0b       	sbc	r20, r19
 de6:	56 0b       	sbc	r21, r22
 de8:	c9 0b       	sbc	r28, r25
 dea:	d0 09       	sbc	r29, r0
 dec:	98 f0       	brcs	.+38     	; 0xe14 <__ftoa_engine+0x19a>
 dee:	23 95       	inc	r18
 df0:	7e 91       	ld	r23, -X
 df2:	73 95       	inc	r23
 df4:	7a 33       	cpi	r23, 0x3A	; 58
 df6:	08 f0       	brcs	.+2      	; 0xdfa <__ftoa_engine+0x180>
 df8:	70 e3       	ldi	r23, 0x30	; 48
 dfa:	7c 93       	st	X, r23
 dfc:	20 13       	cpse	r18, r16
 dfe:	b8 f7       	brcc	.-18     	; 0xdee <__ftoa_engine+0x174>
 e00:	7e 91       	ld	r23, -X
 e02:	70 61       	ori	r23, 0x10	; 16
 e04:	7d 93       	st	X+, r23
 e06:	30 f0       	brcs	.+12     	; 0xe14 <__ftoa_engine+0x19a>
 e08:	83 95       	inc	r24
 e0a:	71 e3       	ldi	r23, 0x31	; 49
 e0c:	7d 93       	st	X+, r23
 e0e:	70 e3       	ldi	r23, 0x30	; 48
 e10:	2a 95       	dec	r18
 e12:	e1 f7       	brne	.-8      	; 0xe0c <__ftoa_engine+0x192>
 e14:	11 24       	eor	r1, r1
 e16:	ef 90       	pop	r14
 e18:	ff 90       	pop	r15
 e1a:	0f 91       	pop	r16
 e1c:	1f 91       	pop	r17
 e1e:	cf 91       	pop	r28
 e20:	df 91       	pop	r29
 e22:	99 27       	eor	r25, r25
 e24:	87 fd       	sbrc	r24, 7
 e26:	90 95       	com	r25
 e28:	08 95       	ret

00000e2a <strrev>:
 e2a:	dc 01       	movw	r26, r24
 e2c:	fc 01       	movw	r30, r24
 e2e:	67 2f       	mov	r22, r23
 e30:	71 91       	ld	r23, Z+
 e32:	77 23       	and	r23, r23
 e34:	e1 f7       	brne	.-8      	; 0xe2e <strrev+0x4>
 e36:	32 97       	sbiw	r30, 0x02	; 2
 e38:	04 c0       	rjmp	.+8      	; 0xe42 <strrev+0x18>
 e3a:	7c 91       	ld	r23, X
 e3c:	6d 93       	st	X+, r22
 e3e:	70 83       	st	Z, r23
 e40:	62 91       	ld	r22, -Z
 e42:	ae 17       	cp	r26, r30
 e44:	bf 07       	cpc	r27, r31
 e46:	c8 f3       	brcs	.-14     	; 0xe3a <strrev+0x10>
 e48:	08 95       	ret

00000e4a <__prologue_saves__>:
 e4a:	2f 92       	push	r2
 e4c:	3f 92       	push	r3
 e4e:	4f 92       	push	r4
 e50:	5f 92       	push	r5
 e52:	6f 92       	push	r6
 e54:	7f 92       	push	r7
 e56:	8f 92       	push	r8
 e58:	9f 92       	push	r9
 e5a:	af 92       	push	r10
 e5c:	bf 92       	push	r11
 e5e:	cf 92       	push	r12
 e60:	df 92       	push	r13
 e62:	ef 92       	push	r14
 e64:	ff 92       	push	r15
 e66:	0f 93       	push	r16
 e68:	1f 93       	push	r17
 e6a:	cf 93       	push	r28
 e6c:	df 93       	push	r29
 e6e:	cd b7       	in	r28, 0x3d	; 61
 e70:	de b7       	in	r29, 0x3e	; 62
 e72:	ca 1b       	sub	r28, r26
 e74:	db 0b       	sbc	r29, r27
 e76:	0f b6       	in	r0, 0x3f	; 63
 e78:	f8 94       	cli
 e7a:	de bf       	out	0x3e, r29	; 62
 e7c:	0f be       	out	0x3f, r0	; 63
 e7e:	cd bf       	out	0x3d, r28	; 61
 e80:	09 94       	ijmp

00000e82 <__epilogue_restores__>:
 e82:	2a 88       	ldd	r2, Y+18	; 0x12
 e84:	39 88       	ldd	r3, Y+17	; 0x11
 e86:	48 88       	ldd	r4, Y+16	; 0x10
 e88:	5f 84       	ldd	r5, Y+15	; 0x0f
 e8a:	6e 84       	ldd	r6, Y+14	; 0x0e
 e8c:	7d 84       	ldd	r7, Y+13	; 0x0d
 e8e:	8c 84       	ldd	r8, Y+12	; 0x0c
 e90:	9b 84       	ldd	r9, Y+11	; 0x0b
 e92:	aa 84       	ldd	r10, Y+10	; 0x0a
 e94:	b9 84       	ldd	r11, Y+9	; 0x09
 e96:	c8 84       	ldd	r12, Y+8	; 0x08
 e98:	df 80       	ldd	r13, Y+7	; 0x07
 e9a:	ee 80       	ldd	r14, Y+6	; 0x06
 e9c:	fd 80       	ldd	r15, Y+5	; 0x05
 e9e:	0c 81       	ldd	r16, Y+4	; 0x04
 ea0:	1b 81       	ldd	r17, Y+3	; 0x03
 ea2:	aa 81       	ldd	r26, Y+2	; 0x02
 ea4:	b9 81       	ldd	r27, Y+1	; 0x01
 ea6:	ce 0f       	add	r28, r30
 ea8:	d1 1d       	adc	r29, r1
 eaa:	0f b6       	in	r0, 0x3f	; 63
 eac:	f8 94       	cli
 eae:	de bf       	out	0x3e, r29	; 62
 eb0:	0f be       	out	0x3f, r0	; 63
 eb2:	cd bf       	out	0x3d, r28	; 61
 eb4:	ed 01       	movw	r28, r26
 eb6:	08 95       	ret

00000eb8 <_exit>:
 eb8:	f8 94       	cli

00000eba <__stop_program>:
 eba:	ff cf       	rjmp	.-2      	; 0xeba <__stop_program>
