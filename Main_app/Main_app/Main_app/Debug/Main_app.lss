
Main_app.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000e66  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000016  00800060  00000e66  00000efa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000016  00800076  00800076  00000f10  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000f10  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000f40  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f0  00000000  00000000  00000f7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000153d  00000000  00000000  0000106c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000930  00000000  00000000  000025a9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000afa  00000000  00000000  00002ed9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000025c  00000000  00000000  000039d4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000056b  00000000  00000000  00003c30  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d6b  00000000  00000000  0000419b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  00004f06  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
   4:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
   8:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
   c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  18:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  1c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  20:	0c 94 81 02 	jmp	0x502	; 0x502 <__vector_8>
  24:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  2c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  38:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  4c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>

00000054 <__trampolines_end>:
  54:	00 40       	sbci	r16, 0x00	; 0
  56:	7a 10       	cpse	r7, r10
  58:	f3 5a       	subi	r31, 0xA3	; 163
  5a:	00 a0       	ldd	r0, Z+32	; 0x20
  5c:	72 4e       	sbci	r23, 0xE2	; 226
  5e:	18 09       	sbc	r17, r8
  60:	00 10       	cpse	r0, r0
  62:	a5 d4       	rcall	.+2378   	; 0x9ae <dtoa_prf+0x3e>
  64:	e8 00       	.word	0x00e8	; ????
  66:	00 e8       	ldi	r16, 0x80	; 128
  68:	76 48       	sbci	r23, 0x86	; 134
  6a:	17 00       	.word	0x0017	; ????
  6c:	00 e4       	ldi	r16, 0x40	; 64
  6e:	0b 54       	subi	r16, 0x4B	; 75
  70:	02 00       	.word	0x0002	; ????
  72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
  74:	9a 3b       	cpi	r25, 0xBA	; 186
  76:	00 00       	nop
  78:	00 e1       	ldi	r16, 0x10	; 16
  7a:	f5 05       	cpc	r31, r5
  7c:	00 00       	nop
  7e:	80 96       	adiw	r24, 0x20	; 32
  80:	98 00       	.word	0x0098	; ????
  82:	00 00       	nop
  84:	40 42       	sbci	r20, 0x20	; 32
  86:	0f 00       	.word	0x000f	; ????
  88:	00 00       	nop
  8a:	a0 86       	std	Z+8, r10	; 0x08
  8c:	01 00       	.word	0x0001	; ????
  8e:	00 00       	nop
  90:	10 27       	eor	r17, r16
  92:	00 00       	nop
  94:	00 00       	nop
  96:	e8 03       	fmulsu	r22, r16
  98:	00 00       	nop
  9a:	00 00       	nop
  9c:	64 00       	.word	0x0064	; ????
  9e:	00 00       	nop
  a0:	00 00       	nop
  a2:	0a 00       	.word	0x000a	; ????
  a4:	00 00       	nop
  a6:	00 00       	nop
  a8:	01 00       	.word	0x0001	; ????
  aa:	00 00       	nop
  ac:	00 00       	nop
  ae:	2c 76       	andi	r18, 0x6C	; 108
  b0:	d8 88       	ldd	r13, Y+16	; 0x10
  b2:	dc 67       	ori	r29, 0x7C	; 124
  b4:	4f 08       	sbc	r4, r15
  b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
  b8:	c1 df       	rcall	.-126    	; 0x3c <__FUSE_REGION_LENGTH__+0x3a>
  ba:	ae 59       	subi	r26, 0x9E	; 158
  bc:	e1 b1       	in	r30, 0x01	; 1
  be:	b7 96       	adiw	r30, 0x27	; 39
  c0:	e5 e3       	ldi	r30, 0x35	; 53
  c2:	e4 53       	subi	r30, 0x34	; 52
  c4:	c6 3a       	cpi	r28, 0xA6	; 166
  c6:	e6 51       	subi	r30, 0x16	; 22
  c8:	99 76       	andi	r25, 0x69	; 105
  ca:	96 e8       	ldi	r25, 0x86	; 134
  cc:	e6 c2       	rjmp	.+1484   	; 0x69a <main+0x2a>
  ce:	84 26       	eor	r8, r20
  d0:	eb 89       	ldd	r30, Y+19	; 0x13
  d2:	8c 9b       	sbis	0x11, 4	; 17
  d4:	62 ed       	ldi	r22, 0xD2	; 210
  d6:	40 7c       	andi	r20, 0xC0	; 192
  d8:	6f fc       	.word	0xfc6f	; ????
  da:	ef bc       	out	0x2f, r14	; 47
  dc:	9c 9f       	mul	r25, r28
  de:	40 f2       	brcs	.-112    	; 0x70 <__trampolines_end+0x1c>
  e0:	ba a5       	ldd	r27, Y+42	; 0x2a
  e2:	6f a5       	ldd	r22, Y+47	; 0x2f
  e4:	f4 90       	lpm	r15, Z
  e6:	05 5a       	subi	r16, 0xA5	; 165
  e8:	2a f7       	brpl	.-54     	; 0xb4 <__trampolines_end+0x60>
  ea:	5c 93       	st	X, r21
  ec:	6b 6c       	ori	r22, 0xCB	; 203
  ee:	f9 67       	ori	r31, 0x79	; 121
  f0:	6d c1       	rjmp	.+730    	; 0x3cc <rotate_clockwise+0x9c>
  f2:	1b fc       	.word	0xfc1b	; ????
  f4:	e0 e4       	ldi	r30, 0x40	; 64
  f6:	0d 47       	sbci	r16, 0x7D	; 125
  f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
  fa:	20 e6       	ldi	r18, 0x60	; 96
  fc:	b5 00       	.word	0x00b5	; ????
  fe:	d0 ed       	ldi	r29, 0xD0	; 208
 100:	90 2e       	mov	r9, r16
 102:	03 00       	.word	0x0003	; ????
 104:	94 35       	cpi	r25, 0x54	; 84
 106:	77 05       	cpc	r23, r7
 108:	00 80       	ld	r0, Z
 10a:	84 1e       	adc	r8, r20
 10c:	08 00       	.word	0x0008	; ????
 10e:	00 20       	and	r0, r0
 110:	4e 0a       	sbc	r4, r30
 112:	00 00       	nop
 114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
 116:	0c 33       	cpi	r16, 0x3C	; 60
 118:	33 33       	cpi	r19, 0x33	; 51
 11a:	33 0f       	add	r19, r19
 11c:	98 6e       	ori	r25, 0xE8	; 232
 11e:	12 83       	std	Z+2, r17	; 0x02
 120:	11 41       	sbci	r17, 0x11	; 17
 122:	ef 8d       	ldd	r30, Y+31	; 0x1f
 124:	21 14       	cp	r2, r1
 126:	89 3b       	cpi	r24, 0xB9	; 185
 128:	e6 55       	subi	r30, 0x56	; 86
 12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
 12c:	fe e6       	ldi	r31, 0x6E	; 110
 12e:	db 18       	sub	r13, r11
 130:	d1 84       	ldd	r13, Z+9	; 0x09
 132:	4b 38       	cpi	r20, 0x8B	; 139
 134:	1b f7       	brvc	.-58     	; 0xfc <__trampolines_end+0xa8>
 136:	7c 1d       	adc	r23, r12
 138:	90 1d       	adc	r25, r0
 13a:	a4 bb       	out	0x14, r26	; 20
 13c:	e4 24       	eor	r14, r4
 13e:	20 32       	cpi	r18, 0x20	; 32
 140:	84 72       	andi	r24, 0x24	; 36
 142:	5e 22       	and	r5, r30
 144:	81 00       	.word	0x0081	; ????
 146:	c9 f1       	breq	.+114    	; 0x1ba <lcd_write+0x26>
 148:	24 ec       	ldi	r18, 0xC4	; 196
 14a:	a1 e5       	ldi	r26, 0x51	; 81
 14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
 14e:	11 24       	eor	r1, r1
 150:	1f be       	out	0x3f, r1	; 63
 152:	cf e5       	ldi	r28, 0x5F	; 95
 154:	d4 e0       	ldi	r29, 0x04	; 4
 156:	de bf       	out	0x3e, r29	; 62
 158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
 15a:	10 e0       	ldi	r17, 0x00	; 0
 15c:	a0 e6       	ldi	r26, 0x60	; 96
 15e:	b0 e0       	ldi	r27, 0x00	; 0
 160:	e6 e6       	ldi	r30, 0x66	; 102
 162:	fe e0       	ldi	r31, 0x0E	; 14
 164:	02 c0       	rjmp	.+4      	; 0x16a <__do_copy_data+0x10>
 166:	05 90       	lpm	r0, Z+
 168:	0d 92       	st	X+, r0
 16a:	a6 37       	cpi	r26, 0x76	; 118
 16c:	b1 07       	cpc	r27, r17
 16e:	d9 f7       	brne	.-10     	; 0x166 <__do_copy_data+0xc>

00000170 <__do_clear_bss>:
 170:	20 e0       	ldi	r18, 0x00	; 0
 172:	a6 e7       	ldi	r26, 0x76	; 118
 174:	b0 e0       	ldi	r27, 0x00	; 0
 176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
 178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
 17a:	ac 38       	cpi	r26, 0x8C	; 140
 17c:	b2 07       	cpc	r27, r18
 17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
 180:	0e 94 38 03 	call	0x670	; 0x670 <main>
 184:	0c 94 31 07 	jmp	0xe62	; 0xe62 <_exit>

00000188 <__bad_interrupt>:
 188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <toggle_e>:

/* init of a stepper motor pins */

void STEPPER_Init(){
	
	DDRB = 0x0F; /* Make PORTB lower pins as output */
 18c:	ae 9a       	sbi	0x15, 6	; 21
 18e:	00 c0       	rjmp	.+0      	; 0x190 <toggle_e+0x4>
 190:	ae 98       	cbi	0x15, 6	; 21
 192:	08 95       	ret

00000194 <lcd_write>:
 194:	cf 93       	push	r28
 196:	c8 2f       	mov	r28, r24
 198:	66 23       	and	r22, r22
 19a:	11 f0       	breq	.+4      	; 0x1a0 <lcd_write+0xc>
 19c:	a8 9a       	sbi	0x15, 0	; 21
 19e:	01 c0       	rjmp	.+2      	; 0x1a2 <lcd_write+0xe>
 1a0:	a8 98       	cbi	0x15, 0	; 21
 1a2:	a9 98       	cbi	0x15, 1	; 21
 1a4:	bc 9a       	sbi	0x17, 4	; 23
 1a6:	bd 9a       	sbi	0x17, 5	; 23
 1a8:	be 9a       	sbi	0x17, 6	; 23
 1aa:	bf 9a       	sbi	0x17, 7	; 23
 1ac:	c7 98       	cbi	0x18, 7	; 24
 1ae:	c6 98       	cbi	0x18, 6	; 24
 1b0:	c5 98       	cbi	0x18, 5	; 24
 1b2:	c4 98       	cbi	0x18, 4	; 24
 1b4:	cc 23       	and	r28, r28
 1b6:	0c f4       	brge	.+2      	; 0x1ba <lcd_write+0x26>
 1b8:	c7 9a       	sbi	0x18, 7	; 24
 1ba:	c6 fd       	sbrc	r28, 6
 1bc:	c6 9a       	sbi	0x18, 6	; 24
 1be:	c5 fd       	sbrc	r28, 5
 1c0:	c5 9a       	sbi	0x18, 5	; 24
 1c2:	c4 fd       	sbrc	r28, 4
 1c4:	c4 9a       	sbi	0x18, 4	; 24
 1c6:	0e 94 c6 00 	call	0x18c	; 0x18c <toggle_e>
 1ca:	c7 98       	cbi	0x18, 7	; 24
 1cc:	c6 98       	cbi	0x18, 6	; 24
 1ce:	c5 98       	cbi	0x18, 5	; 24
 1d0:	c4 98       	cbi	0x18, 4	; 24
 1d2:	c3 fd       	sbrc	r28, 3
 1d4:	c7 9a       	sbi	0x18, 7	; 24
 1d6:	c2 fd       	sbrc	r28, 2
 1d8:	c6 9a       	sbi	0x18, 6	; 24
 1da:	c1 fd       	sbrc	r28, 1
 1dc:	c5 9a       	sbi	0x18, 5	; 24
 1de:	c0 fd       	sbrc	r28, 0
 1e0:	c4 9a       	sbi	0x18, 4	; 24
 1e2:	0e 94 c6 00 	call	0x18c	; 0x18c <toggle_e>
 1e6:	c4 9a       	sbi	0x18, 4	; 24
 1e8:	c5 9a       	sbi	0x18, 5	; 24
 1ea:	c6 9a       	sbi	0x18, 6	; 24
 1ec:	c7 9a       	sbi	0x18, 7	; 24
 1ee:	cf 91       	pop	r28
 1f0:	08 95       	ret

000001f2 <lcd_read>:
 1f2:	88 23       	and	r24, r24
 1f4:	11 f0       	breq	.+4      	; 0x1fa <lcd_read+0x8>
 1f6:	a8 9a       	sbi	0x15, 0	; 21
 1f8:	01 c0       	rjmp	.+2      	; 0x1fc <lcd_read+0xa>
 1fa:	a8 98       	cbi	0x15, 0	; 21
 1fc:	a9 9a       	sbi	0x15, 1	; 21
 1fe:	bc 98       	cbi	0x17, 4	; 23
 200:	bd 98       	cbi	0x17, 5	; 23
 202:	be 98       	cbi	0x17, 6	; 23
 204:	bf 98       	cbi	0x17, 7	; 23
 206:	ae 9a       	sbi	0x15, 6	; 21
 208:	00 c0       	rjmp	.+0      	; 0x20a <lcd_read+0x18>
 20a:	b4 9b       	sbis	0x16, 4	; 22
 20c:	02 c0       	rjmp	.+4      	; 0x212 <lcd_read+0x20>
 20e:	80 e1       	ldi	r24, 0x10	; 16
 210:	01 c0       	rjmp	.+2      	; 0x214 <lcd_read+0x22>
 212:	80 e0       	ldi	r24, 0x00	; 0
 214:	b5 99       	sbic	0x16, 5	; 22
 216:	80 62       	ori	r24, 0x20	; 32
 218:	b6 99       	sbic	0x16, 6	; 22
 21a:	80 64       	ori	r24, 0x40	; 64
 21c:	b7 99       	sbic	0x16, 7	; 22
 21e:	80 68       	ori	r24, 0x80	; 128
 220:	ae 98       	cbi	0x15, 6	; 21
 222:	00 c0       	rjmp	.+0      	; 0x224 <lcd_read+0x32>
 224:	ae 9a       	sbi	0x15, 6	; 21
 226:	00 c0       	rjmp	.+0      	; 0x228 <lcd_read+0x36>
 228:	b4 99       	sbic	0x16, 4	; 22
 22a:	81 60       	ori	r24, 0x01	; 1
 22c:	b5 99       	sbic	0x16, 5	; 22
 22e:	82 60       	ori	r24, 0x02	; 2
 230:	b6 99       	sbic	0x16, 6	; 22
 232:	84 60       	ori	r24, 0x04	; 4
 234:	b7 99       	sbic	0x16, 7	; 22
 236:	88 60       	ori	r24, 0x08	; 8
 238:	ae 98       	cbi	0x15, 6	; 21
 23a:	08 95       	ret

0000023c <lcd_waitbusy>:
 23c:	80 e0       	ldi	r24, 0x00	; 0
 23e:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <lcd_read>
 242:	88 23       	and	r24, r24
 244:	dc f3       	brlt	.-10     	; 0x23c <lcd_waitbusy>
 246:	83 e0       	ldi	r24, 0x03	; 3
 248:	90 e0       	ldi	r25, 0x00	; 0
 24a:	01 97       	sbiw	r24, 0x01	; 1
 24c:	f1 f7       	brne	.-4      	; 0x24a <lcd_waitbusy+0xe>
 24e:	80 e0       	ldi	r24, 0x00	; 0
 250:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <lcd_read>
 254:	08 95       	ret

00000256 <lcd_command>:
 256:	cf 93       	push	r28
 258:	c8 2f       	mov	r28, r24
 25a:	0e 94 1e 01 	call	0x23c	; 0x23c <lcd_waitbusy>
 25e:	60 e0       	ldi	r22, 0x00	; 0
 260:	8c 2f       	mov	r24, r28
 262:	0e 94 ca 00 	call	0x194	; 0x194 <lcd_write>
 266:	cf 91       	pop	r28
 268:	08 95       	ret

0000026a <lcd_clrscr>:
 26a:	81 e0       	ldi	r24, 0x01	; 1
 26c:	0e 94 2b 01 	call	0x256	; 0x256 <lcd_command>
 270:	08 95       	ret

00000272 <lcd_putc>:
 272:	cf 93       	push	r28
 274:	c8 2f       	mov	r28, r24
 276:	0e 94 1e 01 	call	0x23c	; 0x23c <lcd_waitbusy>
 27a:	ca 30       	cpi	r28, 0x0A	; 10
 27c:	49 f4       	brne	.+18     	; 0x290 <lcd_putc+0x1e>
 27e:	80 34       	cpi	r24, 0x40	; 64
 280:	10 f0       	brcs	.+4      	; 0x286 <lcd_putc+0x14>
 282:	80 e0       	ldi	r24, 0x00	; 0
 284:	01 c0       	rjmp	.+2      	; 0x288 <lcd_putc+0x16>
 286:	80 e4       	ldi	r24, 0x40	; 64
 288:	80 58       	subi	r24, 0x80	; 128
 28a:	0e 94 2b 01 	call	0x256	; 0x256 <lcd_command>
 28e:	04 c0       	rjmp	.+8      	; 0x298 <lcd_putc+0x26>
 290:	61 e0       	ldi	r22, 0x01	; 1
 292:	8c 2f       	mov	r24, r28
 294:	0e 94 ca 00 	call	0x194	; 0x194 <lcd_write>
 298:	cf 91       	pop	r28
 29a:	08 95       	ret

0000029c <lcd_puts>:
 29c:	cf 93       	push	r28
 29e:	df 93       	push	r29
 2a0:	ec 01       	movw	r28, r24
 2a2:	21 96       	adiw	r28, 0x01	; 1
 2a4:	fc 01       	movw	r30, r24
 2a6:	80 81       	ld	r24, Z
 2a8:	88 23       	and	r24, r24
 2aa:	29 f0       	breq	.+10     	; 0x2b6 <lcd_puts+0x1a>
 2ac:	0e 94 39 01 	call	0x272	; 0x272 <lcd_putc>
 2b0:	89 91       	ld	r24, Y+
 2b2:	81 11       	cpse	r24, r1
 2b4:	fb cf       	rjmp	.-10     	; 0x2ac <lcd_puts+0x10>
 2b6:	df 91       	pop	r29
 2b8:	cf 91       	pop	r28
 2ba:	08 95       	ret

000002bc <lcd_init>:
 2bc:	1f 93       	push	r17
 2be:	cf 93       	push	r28
 2c0:	df 93       	push	r29
 2c2:	18 2f       	mov	r17, r24
 2c4:	a0 9a       	sbi	0x14, 0	; 20
 2c6:	a1 9a       	sbi	0x14, 1	; 20
 2c8:	a6 9a       	sbi	0x14, 6	; 20
 2ca:	bc 9a       	sbi	0x17, 4	; 23
 2cc:	bd 9a       	sbi	0x17, 5	; 23
 2ce:	be 9a       	sbi	0x17, 6	; 23
 2d0:	bf 9a       	sbi	0x17, 7	; 23
 2d2:	80 e3       	ldi	r24, 0x30	; 48
 2d4:	93 e7       	ldi	r25, 0x73	; 115
 2d6:	01 97       	sbiw	r24, 0x01	; 1
 2d8:	f1 f7       	brne	.-4      	; 0x2d6 <lcd_init+0x1a>
 2da:	c5 9a       	sbi	0x18, 5	; 24
 2dc:	c4 9a       	sbi	0x18, 4	; 24
 2de:	0e 94 c6 00 	call	0x18c	; 0x18c <toggle_e>
 2e2:	80 ef       	ldi	r24, 0xF0	; 240
 2e4:	93 e2       	ldi	r25, 0x23	; 35
 2e6:	01 97       	sbiw	r24, 0x01	; 1
 2e8:	f1 f7       	brne	.-4      	; 0x2e6 <lcd_init+0x2a>
 2ea:	0e 94 c6 00 	call	0x18c	; 0x18c <toggle_e>
 2ee:	c5 e7       	ldi	r28, 0x75	; 117
 2f0:	d0 e0       	ldi	r29, 0x00	; 0
 2f2:	ce 01       	movw	r24, r28
 2f4:	01 97       	sbiw	r24, 0x01	; 1
 2f6:	f1 f7       	brne	.-4      	; 0x2f4 <lcd_init+0x38>
 2f8:	0e 94 c6 00 	call	0x18c	; 0x18c <toggle_e>
 2fc:	ce 01       	movw	r24, r28
 2fe:	01 97       	sbiw	r24, 0x01	; 1
 300:	f1 f7       	brne	.-4      	; 0x2fe <lcd_init+0x42>
 302:	c4 98       	cbi	0x18, 4	; 24
 304:	0e 94 c6 00 	call	0x18c	; 0x18c <toggle_e>
 308:	21 97       	sbiw	r28, 0x01	; 1
 30a:	f1 f7       	brne	.-4      	; 0x308 <lcd_init+0x4c>
 30c:	88 e2       	ldi	r24, 0x28	; 40
 30e:	0e 94 2b 01 	call	0x256	; 0x256 <lcd_command>
 312:	88 e0       	ldi	r24, 0x08	; 8
 314:	0e 94 2b 01 	call	0x256	; 0x256 <lcd_command>
 318:	0e 94 35 01 	call	0x26a	; 0x26a <lcd_clrscr>
 31c:	86 e0       	ldi	r24, 0x06	; 6
 31e:	0e 94 2b 01 	call	0x256	; 0x256 <lcd_command>
 322:	81 2f       	mov	r24, r17
 324:	0e 94 2b 01 	call	0x256	; 0x256 <lcd_command>
 328:	df 91       	pop	r29
 32a:	cf 91       	pop	r28
 32c:	1f 91       	pop	r17
 32e:	08 95       	ret

00000330 <rotate_clockwise>:
// BLUE   - IN4 - OUT4	1	1	1	1	1	0	0	 0
// 4 --> NULTI PIN      07  03  0B  09  0D  0C  0E   06 (CLOCKWISE SEQUENCE)

void rotate_clockwise(){
	
	PORTB = 0x07;  //0111
 330:	87 e0       	ldi	r24, 0x07	; 7
 332:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 334:	88 b3       	in	r24, 0x18	; 24
 336:	80 95       	com	r24
 338:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 33a:	8f ef       	ldi	r24, 0xFF	; 255
 33c:	93 e2       	ldi	r25, 0x23	; 35
 33e:	01 97       	sbiw	r24, 0x01	; 1
 340:	f1 f7       	brne	.-4      	; 0x33e <rotate_clockwise+0xe>
 342:	00 c0       	rjmp	.+0      	; 0x344 <rotate_clockwise+0x14>
 344:	00 00       	nop
	_delay_ms(5);
	PORTB = 0x03;  //0011
 346:	83 e0       	ldi	r24, 0x03	; 3
 348:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 34a:	88 b3       	in	r24, 0x18	; 24
 34c:	80 95       	com	r24
 34e:	88 bb       	out	0x18, r24	; 24
 350:	8f ef       	ldi	r24, 0xFF	; 255
 352:	93 e2       	ldi	r25, 0x23	; 35
 354:	01 97       	sbiw	r24, 0x01	; 1
 356:	f1 f7       	brne	.-4      	; 0x354 <rotate_clockwise+0x24>
 358:	00 c0       	rjmp	.+0      	; 0x35a <rotate_clockwise+0x2a>
 35a:	00 00       	nop
	_delay_ms(5);
	PORTB = 0x0B;  //1011
 35c:	8b e0       	ldi	r24, 0x0B	; 11
 35e:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 360:	88 b3       	in	r24, 0x18	; 24
 362:	80 95       	com	r24
 364:	88 bb       	out	0x18, r24	; 24
 366:	8f ef       	ldi	r24, 0xFF	; 255
 368:	93 e2       	ldi	r25, 0x23	; 35
 36a:	01 97       	sbiw	r24, 0x01	; 1
 36c:	f1 f7       	brne	.-4      	; 0x36a <rotate_clockwise+0x3a>
 36e:	00 c0       	rjmp	.+0      	; 0x370 <rotate_clockwise+0x40>
 370:	00 00       	nop
	_delay_ms(5);
	PORTB = 0x09;
 372:	89 e0       	ldi	r24, 0x09	; 9
 374:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 376:	88 b3       	in	r24, 0x18	; 24
 378:	80 95       	com	r24
 37a:	88 bb       	out	0x18, r24	; 24
 37c:	8f ef       	ldi	r24, 0xFF	; 255
 37e:	93 e2       	ldi	r25, 0x23	; 35
 380:	01 97       	sbiw	r24, 0x01	; 1
 382:	f1 f7       	brne	.-4      	; 0x380 <rotate_clockwise+0x50>
 384:	00 c0       	rjmp	.+0      	; 0x386 <rotate_clockwise+0x56>
 386:	00 00       	nop
	_delay_ms(5);
	PORTB = 0x0D;
 388:	8d e0       	ldi	r24, 0x0D	; 13
 38a:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 38c:	88 b3       	in	r24, 0x18	; 24
 38e:	80 95       	com	r24
 390:	88 bb       	out	0x18, r24	; 24
 392:	8f ef       	ldi	r24, 0xFF	; 255
 394:	93 e2       	ldi	r25, 0x23	; 35
 396:	01 97       	sbiw	r24, 0x01	; 1
 398:	f1 f7       	brne	.-4      	; 0x396 <rotate_clockwise+0x66>
 39a:	00 c0       	rjmp	.+0      	; 0x39c <rotate_clockwise+0x6c>
 39c:	00 00       	nop
	_delay_ms(5);
	PORTB = 0x0C;
 39e:	8c e0       	ldi	r24, 0x0C	; 12
 3a0:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 3a2:	88 b3       	in	r24, 0x18	; 24
 3a4:	80 95       	com	r24
 3a6:	88 bb       	out	0x18, r24	; 24
 3a8:	8f ef       	ldi	r24, 0xFF	; 255
 3aa:	93 e2       	ldi	r25, 0x23	; 35
 3ac:	01 97       	sbiw	r24, 0x01	; 1
 3ae:	f1 f7       	brne	.-4      	; 0x3ac <rotate_clockwise+0x7c>
 3b0:	00 c0       	rjmp	.+0      	; 0x3b2 <rotate_clockwise+0x82>
 3b2:	00 00       	nop
	_delay_ms(5);
	PORTB = 0x0E;
 3b4:	8e e0       	ldi	r24, 0x0E	; 14
 3b6:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 3b8:	88 b3       	in	r24, 0x18	; 24
 3ba:	80 95       	com	r24
 3bc:	88 bb       	out	0x18, r24	; 24
 3be:	8f ef       	ldi	r24, 0xFF	; 255
 3c0:	93 e2       	ldi	r25, 0x23	; 35
 3c2:	01 97       	sbiw	r24, 0x01	; 1
 3c4:	f1 f7       	brne	.-4      	; 0x3c2 <rotate_clockwise+0x92>
 3c6:	00 c0       	rjmp	.+0      	; 0x3c8 <rotate_clockwise+0x98>
 3c8:	00 00       	nop
	_delay_ms(5);
	PORTB = 0x06;
 3ca:	86 e0       	ldi	r24, 0x06	; 6
 3cc:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 3ce:	88 b3       	in	r24, 0x18	; 24
 3d0:	80 95       	com	r24
 3d2:	88 bb       	out	0x18, r24	; 24
 3d4:	8f ef       	ldi	r24, 0xFF	; 255
 3d6:	93 e2       	ldi	r25, 0x23	; 35
 3d8:	01 97       	sbiw	r24, 0x01	; 1
 3da:	f1 f7       	brne	.-4      	; 0x3d8 <rotate_clockwise+0xa8>
 3dc:	00 c0       	rjmp	.+0      	; 0x3de <rotate_clockwise+0xae>
 3de:	00 00       	nop
 3e0:	08 95       	ret

000003e2 <rotate_anticlockwise>:
	_delay_ms(5);
}

void rotate_anticlockwise(){
	
	PORTB = 0x06;
 3e2:	86 e0       	ldi	r24, 0x06	; 6
 3e4:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 3e6:	88 b3       	in	r24, 0x18	; 24
 3e8:	80 95       	com	r24
 3ea:	88 bb       	out	0x18, r24	; 24
 3ec:	8f ef       	ldi	r24, 0xFF	; 255
 3ee:	93 e2       	ldi	r25, 0x23	; 35
 3f0:	01 97       	sbiw	r24, 0x01	; 1
 3f2:	f1 f7       	brne	.-4      	; 0x3f0 <rotate_anticlockwise+0xe>
 3f4:	00 c0       	rjmp	.+0      	; 0x3f6 <rotate_anticlockwise+0x14>
 3f6:	00 00       	nop
	_delay_ms(5);
	PORTB = 0x0E;
 3f8:	8e e0       	ldi	r24, 0x0E	; 14
 3fa:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 3fc:	88 b3       	in	r24, 0x18	; 24
 3fe:	80 95       	com	r24
 400:	88 bb       	out	0x18, r24	; 24
 402:	8f ef       	ldi	r24, 0xFF	; 255
 404:	93 e2       	ldi	r25, 0x23	; 35
 406:	01 97       	sbiw	r24, 0x01	; 1
 408:	f1 f7       	brne	.-4      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 40a:	00 c0       	rjmp	.+0      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 40c:	00 00       	nop
	_delay_ms(5);
	PORTB = 0x0C;
 40e:	8c e0       	ldi	r24, 0x0C	; 12
 410:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 412:	88 b3       	in	r24, 0x18	; 24
 414:	80 95       	com	r24
 416:	88 bb       	out	0x18, r24	; 24
 418:	8f ef       	ldi	r24, 0xFF	; 255
 41a:	93 e2       	ldi	r25, 0x23	; 35
 41c:	01 97       	sbiw	r24, 0x01	; 1
 41e:	f1 f7       	brne	.-4      	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 420:	00 c0       	rjmp	.+0      	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 422:	00 00       	nop
	_delay_ms(5);
	PORTB = 0x0D;
 424:	8d e0       	ldi	r24, 0x0D	; 13
 426:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 428:	88 b3       	in	r24, 0x18	; 24
 42a:	80 95       	com	r24
 42c:	88 bb       	out	0x18, r24	; 24
 42e:	8f ef       	ldi	r24, 0xFF	; 255
 430:	93 e2       	ldi	r25, 0x23	; 35
 432:	01 97       	sbiw	r24, 0x01	; 1
 434:	f1 f7       	brne	.-4      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 436:	00 c0       	rjmp	.+0      	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 438:	00 00       	nop
	_delay_ms(5);
	PORTB = 0x09;
 43a:	89 e0       	ldi	r24, 0x09	; 9
 43c:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 43e:	88 b3       	in	r24, 0x18	; 24
 440:	80 95       	com	r24
 442:	88 bb       	out	0x18, r24	; 24
 444:	8f ef       	ldi	r24, 0xFF	; 255
 446:	93 e2       	ldi	r25, 0x23	; 35
 448:	01 97       	sbiw	r24, 0x01	; 1
 44a:	f1 f7       	brne	.-4      	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 44c:	00 c0       	rjmp	.+0      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 44e:	00 00       	nop
	_delay_ms(5);
	PORTB = 0x0B;
 450:	8b e0       	ldi	r24, 0x0B	; 11
 452:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 454:	88 b3       	in	r24, 0x18	; 24
 456:	80 95       	com	r24
 458:	88 bb       	out	0x18, r24	; 24
 45a:	8f ef       	ldi	r24, 0xFF	; 255
 45c:	93 e2       	ldi	r25, 0x23	; 35
 45e:	01 97       	sbiw	r24, 0x01	; 1
 460:	f1 f7       	brne	.-4      	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 462:	00 c0       	rjmp	.+0      	; 0x464 <__stack+0x5>
 464:	00 00       	nop
	_delay_ms(5);
	PORTB = 0x03;
 466:	83 e0       	ldi	r24, 0x03	; 3
 468:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 46a:	88 b3       	in	r24, 0x18	; 24
 46c:	80 95       	com	r24
 46e:	88 bb       	out	0x18, r24	; 24
 470:	8f ef       	ldi	r24, 0xFF	; 255
 472:	93 e2       	ldi	r25, 0x23	; 35
 474:	01 97       	sbiw	r24, 0x01	; 1
 476:	f1 f7       	brne	.-4      	; 0x474 <__stack+0x15>
 478:	00 c0       	rjmp	.+0      	; 0x47a <__stack+0x1b>
 47a:	00 00       	nop
	_delay_ms(5);
	PORTB = 0x07;
 47c:	87 e0       	ldi	r24, 0x07	; 7
 47e:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 480:	88 b3       	in	r24, 0x18	; 24
 482:	80 95       	com	r24
 484:	88 bb       	out	0x18, r24	; 24
 486:	8f ef       	ldi	r24, 0xFF	; 255
 488:	93 e2       	ldi	r25, 0x23	; 35
 48a:	01 97       	sbiw	r24, 0x01	; 1
 48c:	f1 f7       	brne	.-4      	; 0x48a <__stack+0x2b>
 48e:	00 c0       	rjmp	.+0      	; 0x490 <__stack+0x31>
 490:	00 00       	nop
 492:	08 95       	ret

00000494 <rotate_motors>:
	
}

/* using two values to determine direction of stepper rotation */

void rotate_motors(int value, int low_margin, int high_margin){
 494:	0f 93       	push	r16
 496:	1f 93       	push	r17
 498:	cf 93       	push	r28
 49a:	df 93       	push	r29
 49c:	ec 01       	movw	r28, r24
 49e:	8a 01       	movw	r16, r20
	
	if(value < low_margin){
 4a0:	86 17       	cp	r24, r22
 4a2:	97 07       	cpc	r25, r23
 4a4:	14 f4       	brge	.+4      	; 0x4aa <rotate_motors+0x16>
		
		rotate_clockwise();
 4a6:	0e 94 98 01 	call	0x330	; 0x330 <rotate_clockwise>
	}
	if(value > high_margin){
 4aa:	0c 17       	cp	r16, r28
 4ac:	1d 07       	cpc	r17, r29
 4ae:	14 f4       	brge	.+4      	; 0x4b4 <rotate_motors+0x20>
		
		rotate_anticlockwise();
 4b0:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <rotate_anticlockwise>
	}
	
 4b4:	df 91       	pop	r29
 4b6:	cf 91       	pop	r28
 4b8:	1f 91       	pop	r17
 4ba:	0f 91       	pop	r16
 4bc:	08 95       	ret

000004be <ADC_Init>:

/* init of ADC pins */

void ADC_Init()
{
	DDRA=0x00;			/* Make ADC port as input */
 4be:	1a ba       	out	0x1a, r1	; 26
	ADCSRA = 0x87;		/* Enable ADC, fr/128  */
 4c0:	87 e8       	ldi	r24, 0x87	; 135
 4c2:	86 b9       	out	0x06, r24	; 6
	ADMUX = 0x40;		/* Vref: Avcc, ADC channel: 0 */
 4c4:	80 e4       	ldi	r24, 0x40	; 64
 4c6:	87 b9       	out	0x07, r24	; 7
 4c8:	08 95       	ret

000004ca <ADC_Read>:

int ADC_Read(char channel)
{
	int Ain,AinLow;
	
	ADMUX=ADMUX|(channel & 0x0f);	/* Set input channel to read */
 4ca:	97 b1       	in	r25, 0x07	; 7
 4cc:	8f 70       	andi	r24, 0x0F	; 15
 4ce:	98 2b       	or	r25, r24
 4d0:	97 b9       	out	0x07, r25	; 7

	ADCSRA |= (1<<ADSC);		/* Start conversion */
 4d2:	36 9a       	sbi	0x06, 6	; 6
	while((ADCSRA&(1<<ADIF))==0);	/* Monitor end of conversion interrupt */
 4d4:	34 9b       	sbis	0x06, 4	; 6
 4d6:	fe cf       	rjmp	.-4      	; 0x4d4 <ADC_Read+0xa>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 4d8:	88 e1       	ldi	r24, 0x18	; 24
 4da:	8a 95       	dec	r24
 4dc:	f1 f7       	brne	.-4      	; 0x4da <ADC_Read+0x10>
 4de:	00 c0       	rjmp	.+0      	; 0x4e0 <ADC_Read+0x16>
	
	_delay_us(10);
	AinLow = (int)ADCL;		/* Read lower byte*/
 4e0:	24 b1       	in	r18, 0x04	; 4
	Ain = (int)ADCH*256;		/* Read higher 2 bits and Multiply with weight */
 4e2:	85 b1       	in	r24, 0x05	; 5
 4e4:	90 e0       	ldi	r25, 0x00	; 0
 4e6:	98 2f       	mov	r25, r24
 4e8:	88 27       	eor	r24, r24
	Ain = Ain + AinLow;				
	return(Ain);			/* Return digital value*/
 4ea:	82 0f       	add	r24, r18
 4ec:	91 1d       	adc	r25, r1
 4ee:	08 95       	ret

000004f0 <SENSOR_Init>:

/* Functions used for controlling distance sensor */

void SENSOR_Init(void){
	
	DDRD = 0x01;		/* Make trigger pin as output */
 4f0:	81 e0       	ldi	r24, 0x01	; 1
 4f2:	81 bb       	out	0x11, r24	; 17
	PORTD = _BV(6);		/* Turn on Pull-up */
 4f4:	80 e4       	ldi	r24, 0x40	; 64
 4f6:	82 bb       	out	0x12, r24	; 18
	
	sei();			/* Enable global interrupt */
 4f8:	78 94       	sei
	TIMSK = (1 << TOIE1);	/* Enable Timer1 overflow interrupts */
 4fa:	84 e0       	ldi	r24, 0x04	; 4
 4fc:	89 bf       	out	0x39, r24	; 57
	TCCR1A = 0; /* Turning back to 0 because of lcd */
 4fe:	1f bc       	out	0x2f, r1	; 47
 500:	08 95       	ret

00000502 <__vector_8>:

}


ISR(TIMER1_OVF_vect)
{
 502:	1f 92       	push	r1
 504:	0f 92       	push	r0
 506:	0f b6       	in	r0, 0x3f	; 63
 508:	0f 92       	push	r0
 50a:	11 24       	eor	r1, r1
 50c:	8f 93       	push	r24
 50e:	9f 93       	push	r25
	TimerOverflow++;	/* Increment Timer Overflow count */
 510:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <TimerOverflow>
 514:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <TimerOverflow+0x1>
 518:	01 96       	adiw	r24, 0x01	; 1
 51a:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <TimerOverflow+0x1>
 51e:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <TimerOverflow>
}
 522:	9f 91       	pop	r25
 524:	8f 91       	pop	r24
 526:	0f 90       	pop	r0
 528:	0f be       	out	0x3f, r0	; 63
 52a:	0f 90       	pop	r0
 52c:	1f 90       	pop	r1
 52e:	18 95       	reti

00000530 <mesure_distance>:

double mesure_distance(){
	
	/* Give 10us trigger pulse on trig. pin to HC-SR04 */
	PORTD |= (1 << Trigger_pin);
 530:	90 9a       	sbi	0x12, 0	; 18
 532:	88 e1       	ldi	r24, 0x18	; 24
 534:	8a 95       	dec	r24
 536:	f1 f7       	brne	.-4      	; 0x534 <mesure_distance+0x4>
 538:	00 c0       	rjmp	.+0      	; 0x53a <mesure_distance+0xa>
	_delay_us(10);
	PORTD &= (~(1 << Trigger_pin));
 53a:	90 98       	cbi	0x12, 0	; 18
	
	TCNT1 = 0;	/* Clear Timer counter */
 53c:	1d bc       	out	0x2d, r1	; 45
 53e:	1c bc       	out	0x2c, r1	; 44
	TCCR1B = 0x41;	/* Capture on rising edge, No prescaler*/
 540:	81 e4       	ldi	r24, 0x41	; 65
 542:	8e bd       	out	0x2e, r24	; 46
	TIFR = (1<<ICF1);	/* Clear ICP flag (Input Capture flag) */
 544:	80 e2       	ldi	r24, 0x20	; 32
 546:	88 bf       	out	0x38, r24	; 56
	TIFR = (1<<TOV1);	/* Clear Timer Overflow flag */
 548:	84 e0       	ldi	r24, 0x04	; 4
 54a:	88 bf       	out	0x38, r24	; 56

	/*Calculate width of Echo by Input Capture (ICP) */
	
	while ((TIFR & (1 << ICF1)) == 0);/* Wait for rising edge */
 54c:	08 b6       	in	r0, 0x38	; 56
 54e:	05 fe       	sbrs	r0, 5
 550:	fd cf       	rjmp	.-6      	; 0x54c <mesure_distance+0x1c>
	TCNT1 = 0;	/* Clear Timer counter */
 552:	1d bc       	out	0x2d, r1	; 45
 554:	1c bc       	out	0x2c, r1	; 44
	TCCR1B = 0x01;	/* Capture on falling edge, No prescaler */
 556:	81 e0       	ldi	r24, 0x01	; 1
 558:	8e bd       	out	0x2e, r24	; 46
	TIFR = 1<<ICF1;	/* Clear ICP flag (Input Capture flag) */
 55a:	80 e2       	ldi	r24, 0x20	; 32
 55c:	88 bf       	out	0x38, r24	; 56
	TIFR = 1<<TOV1;	/* Clear Timer Overflow flag */
 55e:	84 e0       	ldi	r24, 0x04	; 4
 560:	88 bf       	out	0x38, r24	; 56
	TimerOverflow = 0;/* Clear Timer overflow count */
 562:	10 92 79 00 	sts	0x0079, r1	; 0x800079 <TimerOverflow+0x1>
 566:	10 92 78 00 	sts	0x0078, r1	; 0x800078 <TimerOverflow>

	while ((TIFR & (1 << ICF1)) == 0);/* Wait for falling edge */
 56a:	08 b6       	in	r0, 0x38	; 56
 56c:	05 fe       	sbrs	r0, 5
 56e:	fd cf       	rjmp	.-6      	; 0x56a <mesure_distance+0x3a>
	count = ICR1 + (65535 * TimerOverflow);	/*When a capture is triggered according to the ICES1 setting, 
 570:	66 b5       	in	r22, 0x26	; 38
 572:	77 b5       	in	r23, 0x27	; 39
 574:	80 e0       	ldi	r24, 0x00	; 0
 576:	90 e0       	ldi	r25, 0x00	; 0
 578:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <count>
 57c:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <count+0x1>
 580:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <count+0x2>
 584:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <count+0x3>
											the counter value is copied into the Input Capture Register (ICR1).
											The event will also set the Input Capture Flag (ICF1), and this
											can be used to cause an Input Capture Interrupt, if this interrupt is enabled. */
	/* 7372800 MHz Timer freq, 0.136us time for one instruction, sound speed =343 m/s, 34300 cm/s */
	/* distance = speed * time / 2 */
	distance = (double)count / 428.67;
 588:	0e 94 e7 03 	call	0x7ce	; 0x7ce <__floatsisf>
 58c:	23 ec       	ldi	r18, 0xC3	; 195
 58e:	35 e5       	ldi	r19, 0x55	; 85
 590:	46 ed       	ldi	r20, 0xD6	; 214
 592:	53 e4       	ldi	r21, 0x43	; 67
 594:	0e 94 73 03 	call	0x6e6	; 0x6e6 <__divsf3>
 598:	60 93 84 00 	sts	0x0084, r22	; 0x800084 <distance>
 59c:	70 93 85 00 	sts	0x0085, r23	; 0x800085 <distance+0x1>
 5a0:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <distance+0x2>
 5a4:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <distance+0x3>
	
	return distance;
}
 5a8:	08 95       	ret

000005aa <distance_to_string>:

void distance_to_string(double distance){
 5aa:	0f 93       	push	r16
 5ac:	1f 93       	push	r17
		
		dtostrf(distance, 2, 2, string);/* distance to string */
 5ae:	0a e7       	ldi	r16, 0x7A	; 122
 5b0:	10 e0       	ldi	r17, 0x00	; 0
 5b2:	22 e0       	ldi	r18, 0x02	; 2
 5b4:	42 e0       	ldi	r20, 0x02	; 2
 5b6:	0e 94 73 04 	call	0x8e6	; 0x8e6 <dtostrf>
		strcat(string, " cm   ");	/* Concat unit i.e.cm */
 5ba:	d8 01       	movw	r26, r16
 5bc:	0d 90       	ld	r0, X+
 5be:	00 20       	and	r0, r0
 5c0:	e9 f7       	brne	.-6      	; 0x5bc <distance_to_string+0x12>
 5c2:	11 97       	sbiw	r26, 0x01	; 1
 5c4:	87 e0       	ldi	r24, 0x07	; 7
 5c6:	e0 e6       	ldi	r30, 0x60	; 96
 5c8:	f0 e0       	ldi	r31, 0x00	; 0
 5ca:	01 90       	ld	r0, Z+
 5cc:	0d 92       	st	X+, r0
 5ce:	8a 95       	dec	r24
 5d0:	e1 f7       	brne	.-8      	; 0x5ca <distance_to_string+0x20>
		lcd_clrscr();
 5d2:	0e 94 35 01 	call	0x26a	; 0x26a <lcd_clrscr>
		lcd_puts("Dist = ");
 5d6:	87 e6       	ldi	r24, 0x67	; 103
 5d8:	90 e0       	ldi	r25, 0x00	; 0
 5da:	0e 94 4e 01 	call	0x29c	; 0x29c <lcd_puts>
		lcd_puts(string);	/* Print distance */
 5de:	c8 01       	movw	r24, r16
 5e0:	0e 94 4e 01 	call	0x29c	; 0x29c <lcd_puts>
}
 5e4:	1f 91       	pop	r17
 5e6:	0f 91       	pop	r16
 5e8:	08 95       	ret

000005ea <writeLCD>:


#include "distance_sensor.h"


void writeLCD(uint16_t adc) { 
 5ea:	0f 93       	push	r16
 5ec:	1f 93       	push	r17
 5ee:	cf 93       	push	r28
 5f0:	df 93       	push	r29
 5f2:	cd b7       	in	r28, 0x3d	; 61
 5f4:	de b7       	in	r29, 0x3e	; 62
 5f6:	60 97       	sbiw	r28, 0x10	; 16
 5f8:	0f b6       	in	r0, 0x3f	; 63
 5fa:	f8 94       	cli
 5fc:	de bf       	out	0x3e, r29	; 62
 5fe:	0f be       	out	0x3f, r0	; 63
 600:	cd bf       	out	0x3d, r28	; 61
 602:	8c 01       	movw	r16, r24
	lcd_clrscr();
 604:	0e 94 35 01 	call	0x26a	; 0x26a <lcd_clrscr>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 608:	4a e0       	ldi	r20, 0x0A	; 10
 60a:	be 01       	movw	r22, r28
 60c:	6f 5f       	subi	r22, 0xFF	; 255
 60e:	7f 4f       	sbci	r23, 0xFF	; 255
 610:	c8 01       	movw	r24, r16
 612:	0e 94 93 04 	call	0x926	; 0x926 <__itoa_ncheck>
#endif
#if LCD_LINES==2
    if ( y==0 ) 
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE1+x);
    else
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE2+x);
 616:	80 ec       	ldi	r24, 0xC0	; 192
 618:	0e 94 2b 01 	call	0x256	; 0x256 <lcd_command>

	char adcStr[16];
	itoa(adc, adcStr, 10);
	lcd_gotoxy(0,1);
	lcd_puts("ADC: ");
 61c:	8f e6       	ldi	r24, 0x6F	; 111
 61e:	90 e0       	ldi	r25, 0x00	; 0
 620:	0e 94 4e 01 	call	0x29c	; 0x29c <lcd_puts>
 624:	86 ec       	ldi	r24, 0xC6	; 198
 626:	0e 94 2b 01 	call	0x256	; 0x256 <lcd_command>
	lcd_gotoxy(6,1);
	lcd_puts(adcStr);
 62a:	ce 01       	movw	r24, r28
 62c:	01 96       	adiw	r24, 0x01	; 1
 62e:	0e 94 4e 01 	call	0x29c	; 0x29c <lcd_puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 632:	8f ef       	ldi	r24, 0xFF	; 255
 634:	97 e4       	ldi	r25, 0x47	; 71
 636:	01 97       	sbiw	r24, 0x01	; 1
 638:	f1 f7       	brne	.-4      	; 0x636 <writeLCD+0x4c>
 63a:	00 c0       	rjmp	.+0      	; 0x63c <writeLCD+0x52>
 63c:	00 00       	nop
	
	_delay_ms(10);
}
 63e:	60 96       	adiw	r28, 0x10	; 16
 640:	0f b6       	in	r0, 0x3f	; 63
 642:	f8 94       	cli
 644:	de bf       	out	0x3e, r29	; 62
 646:	0f be       	out	0x3f, r0	; 63
 648:	cd bf       	out	0x3d, r28	; 61
 64a:	df 91       	pop	r29
 64c:	cf 91       	pop	r28
 64e:	1f 91       	pop	r17
 650:	0f 91       	pop	r16
 652:	08 95       	ret

00000654 <lcd_main_init>:


void lcd_main_init(){
		DDRC = _BV(7);
 654:	80 e8       	ldi	r24, 0x80	; 128
 656:	84 bb       	out	0x14, r24	; 20

		TCCR1A = _BV(COM1B1) | _BV(WGM10);
 658:	81 e2       	ldi	r24, 0x21	; 33
 65a:	8f bd       	out	0x2f, r24	; 47
		TCCR1B = _BV(WGM12) | _BV(CS11);
 65c:	8a e0       	ldi	r24, 0x0A	; 10
 65e:	8e bd       	out	0x2e, r24	; 46
		OCR1B = 14;
 660:	8e e0       	ldi	r24, 0x0E	; 14
 662:	90 e0       	ldi	r25, 0x00	; 0
 664:	99 bd       	out	0x29, r25	; 41
 666:	88 bd       	out	0x28, r24	; 40

		lcd_init(LCD_DISP_ON);
 668:	8c e0       	ldi	r24, 0x0C	; 12
 66a:	0e 94 5e 01 	call	0x2bc	; 0x2bc <lcd_init>
 66e:	08 95       	ret

00000670 <main>:
int main(void)
{
	
	int value;
	
	lcd_main_init();
 670:	0e 94 2a 03 	call	0x654	; 0x654 <lcd_main_init>
	
	ADC_Init();
 674:	0e 94 5f 02 	call	0x4be	; 0x4be <ADC_Init>

/* init of a stepper motor pins */

void STEPPER_Init(){
	
	DDRB = 0x0F; /* Make PORTB lower pins as output */
 678:	8f e0       	ldi	r24, 0x0F	; 15
 67a:	87 bb       	out	0x17, r24	; 23
	
	STEPPER_Init();
	
	SENSOR_Init();
 67c:	0e 94 78 02 	call	0x4f0	; 0x4f0 <SENSOR_Init>
	
	while (1) {
		
		value = ADC_Read(0);    /* Read ADC channel */
 680:	80 e0       	ldi	r24, 0x00	; 0
 682:	0e 94 65 02 	call	0x4ca	; 0x4ca <ADC_Read>
 686:	ec 01       	movw	r28, r24
		
		writeLCD(value); /* writing adc value */
 688:	0e 94 f5 02 	call	0x5ea	; 0x5ea <writeLCD>
		
		rotate_motors(value,low_margin,high_margin);
 68c:	42 e9       	ldi	r20, 0x92	; 146
 68e:	52 e0       	ldi	r21, 0x02	; 2
 690:	6e ef       	ldi	r22, 0xFE	; 254
 692:	71 e0       	ldi	r23, 0x01	; 1
 694:	ce 01       	movw	r24, r28
 696:	0e 94 4a 02 	call	0x494	; 0x494 <rotate_motors>
		
		if(distance_counter == 20){ /* measuring distance every 200 ms */
 69a:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <__data_end>
 69e:	90 91 77 00 	lds	r25, 0x0077	; 0x800077 <__data_end+0x1>
 6a2:	44 97       	sbiw	r24, 0x14	; 20
 6a4:	31 f4       	brne	.+12     	; 0x6b2 <main+0x42>
		
		mesure_distance();
 6a6:	0e 94 98 02 	call	0x530	; 0x530 <mesure_distance>
		
		distance_counter = 0;
 6aa:	10 92 77 00 	sts	0x0077, r1	; 0x800077 <__data_end+0x1>
 6ae:	10 92 76 00 	sts	0x0076, r1	; 0x800076 <__data_end>

		}
		
		distance_to_string(distance); /* writing distance */
 6b2:	60 91 84 00 	lds	r22, 0x0084	; 0x800084 <distance>
 6b6:	70 91 85 00 	lds	r23, 0x0085	; 0x800085 <distance+0x1>
 6ba:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <distance+0x2>
 6be:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <distance+0x3>
 6c2:	0e 94 d5 02 	call	0x5aa	; 0x5aa <distance_to_string>
		
		distance_counter++; 
 6c6:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <__data_end>
 6ca:	90 91 77 00 	lds	r25, 0x0077	; 0x800077 <__data_end+0x1>
 6ce:	01 96       	adiw	r24, 0x01	; 1
 6d0:	90 93 77 00 	sts	0x0077, r25	; 0x800077 <__data_end+0x1>
 6d4:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <__data_end>
 6d8:	8f ef       	ldi	r24, 0xFF	; 255
 6da:	97 e4       	ldi	r25, 0x47	; 71
 6dc:	01 97       	sbiw	r24, 0x01	; 1
 6de:	f1 f7       	brne	.-4      	; 0x6dc <main+0x6c>
 6e0:	00 c0       	rjmp	.+0      	; 0x6e2 <main+0x72>
 6e2:	00 00       	nop
 6e4:	cd cf       	rjmp	.-102    	; 0x680 <main+0x10>

000006e6 <__divsf3>:
 6e6:	0e 94 87 03 	call	0x70e	; 0x70e <__divsf3x>
 6ea:	0c 94 39 04 	jmp	0x872	; 0x872 <__fp_round>
 6ee:	0e 94 32 04 	call	0x864	; 0x864 <__fp_pscB>
 6f2:	58 f0       	brcs	.+22     	; 0x70a <__divsf3+0x24>
 6f4:	0e 94 2b 04 	call	0x856	; 0x856 <__fp_pscA>
 6f8:	40 f0       	brcs	.+16     	; 0x70a <__divsf3+0x24>
 6fa:	29 f4       	brne	.+10     	; 0x706 <__divsf3+0x20>
 6fc:	5f 3f       	cpi	r21, 0xFF	; 255
 6fe:	29 f0       	breq	.+10     	; 0x70a <__divsf3+0x24>
 700:	0c 94 22 04 	jmp	0x844	; 0x844 <__fp_inf>
 704:	51 11       	cpse	r21, r1
 706:	0c 94 6d 04 	jmp	0x8da	; 0x8da <__fp_szero>
 70a:	0c 94 28 04 	jmp	0x850	; 0x850 <__fp_nan>

0000070e <__divsf3x>:
 70e:	0e 94 4a 04 	call	0x894	; 0x894 <__fp_split3>
 712:	68 f3       	brcs	.-38     	; 0x6ee <__divsf3+0x8>

00000714 <__divsf3_pse>:
 714:	99 23       	and	r25, r25
 716:	b1 f3       	breq	.-20     	; 0x704 <__divsf3+0x1e>
 718:	55 23       	and	r21, r21
 71a:	91 f3       	breq	.-28     	; 0x700 <__divsf3+0x1a>
 71c:	95 1b       	sub	r25, r21
 71e:	55 0b       	sbc	r21, r21
 720:	bb 27       	eor	r27, r27
 722:	aa 27       	eor	r26, r26
 724:	62 17       	cp	r22, r18
 726:	73 07       	cpc	r23, r19
 728:	84 07       	cpc	r24, r20
 72a:	38 f0       	brcs	.+14     	; 0x73a <__divsf3_pse+0x26>
 72c:	9f 5f       	subi	r25, 0xFF	; 255
 72e:	5f 4f       	sbci	r21, 0xFF	; 255
 730:	22 0f       	add	r18, r18
 732:	33 1f       	adc	r19, r19
 734:	44 1f       	adc	r20, r20
 736:	aa 1f       	adc	r26, r26
 738:	a9 f3       	breq	.-22     	; 0x724 <__divsf3_pse+0x10>
 73a:	35 d0       	rcall	.+106    	; 0x7a6 <__divsf3_pse+0x92>
 73c:	0e 2e       	mov	r0, r30
 73e:	3a f0       	brmi	.+14     	; 0x74e <__divsf3_pse+0x3a>
 740:	e0 e8       	ldi	r30, 0x80	; 128
 742:	32 d0       	rcall	.+100    	; 0x7a8 <__divsf3_pse+0x94>
 744:	91 50       	subi	r25, 0x01	; 1
 746:	50 40       	sbci	r21, 0x00	; 0
 748:	e6 95       	lsr	r30
 74a:	00 1c       	adc	r0, r0
 74c:	ca f7       	brpl	.-14     	; 0x740 <__divsf3_pse+0x2c>
 74e:	2b d0       	rcall	.+86     	; 0x7a6 <__divsf3_pse+0x92>
 750:	fe 2f       	mov	r31, r30
 752:	29 d0       	rcall	.+82     	; 0x7a6 <__divsf3_pse+0x92>
 754:	66 0f       	add	r22, r22
 756:	77 1f       	adc	r23, r23
 758:	88 1f       	adc	r24, r24
 75a:	bb 1f       	adc	r27, r27
 75c:	26 17       	cp	r18, r22
 75e:	37 07       	cpc	r19, r23
 760:	48 07       	cpc	r20, r24
 762:	ab 07       	cpc	r26, r27
 764:	b0 e8       	ldi	r27, 0x80	; 128
 766:	09 f0       	breq	.+2      	; 0x76a <__divsf3_pse+0x56>
 768:	bb 0b       	sbc	r27, r27
 76a:	80 2d       	mov	r24, r0
 76c:	bf 01       	movw	r22, r30
 76e:	ff 27       	eor	r31, r31
 770:	93 58       	subi	r25, 0x83	; 131
 772:	5f 4f       	sbci	r21, 0xFF	; 255
 774:	3a f0       	brmi	.+14     	; 0x784 <__divsf3_pse+0x70>
 776:	9e 3f       	cpi	r25, 0xFE	; 254
 778:	51 05       	cpc	r21, r1
 77a:	78 f0       	brcs	.+30     	; 0x79a <__divsf3_pse+0x86>
 77c:	0c 94 22 04 	jmp	0x844	; 0x844 <__fp_inf>
 780:	0c 94 6d 04 	jmp	0x8da	; 0x8da <__fp_szero>
 784:	5f 3f       	cpi	r21, 0xFF	; 255
 786:	e4 f3       	brlt	.-8      	; 0x780 <__divsf3_pse+0x6c>
 788:	98 3e       	cpi	r25, 0xE8	; 232
 78a:	d4 f3       	brlt	.-12     	; 0x780 <__divsf3_pse+0x6c>
 78c:	86 95       	lsr	r24
 78e:	77 95       	ror	r23
 790:	67 95       	ror	r22
 792:	b7 95       	ror	r27
 794:	f7 95       	ror	r31
 796:	9f 5f       	subi	r25, 0xFF	; 255
 798:	c9 f7       	brne	.-14     	; 0x78c <__divsf3_pse+0x78>
 79a:	88 0f       	add	r24, r24
 79c:	91 1d       	adc	r25, r1
 79e:	96 95       	lsr	r25
 7a0:	87 95       	ror	r24
 7a2:	97 f9       	bld	r25, 7
 7a4:	08 95       	ret
 7a6:	e1 e0       	ldi	r30, 0x01	; 1
 7a8:	66 0f       	add	r22, r22
 7aa:	77 1f       	adc	r23, r23
 7ac:	88 1f       	adc	r24, r24
 7ae:	bb 1f       	adc	r27, r27
 7b0:	62 17       	cp	r22, r18
 7b2:	73 07       	cpc	r23, r19
 7b4:	84 07       	cpc	r24, r20
 7b6:	ba 07       	cpc	r27, r26
 7b8:	20 f0       	brcs	.+8      	; 0x7c2 <__divsf3_pse+0xae>
 7ba:	62 1b       	sub	r22, r18
 7bc:	73 0b       	sbc	r23, r19
 7be:	84 0b       	sbc	r24, r20
 7c0:	ba 0b       	sbc	r27, r26
 7c2:	ee 1f       	adc	r30, r30
 7c4:	88 f7       	brcc	.-30     	; 0x7a8 <__divsf3_pse+0x94>
 7c6:	e0 95       	com	r30
 7c8:	08 95       	ret

000007ca <__floatunsisf>:
 7ca:	e8 94       	clt
 7cc:	09 c0       	rjmp	.+18     	; 0x7e0 <__floatsisf+0x12>

000007ce <__floatsisf>:
 7ce:	97 fb       	bst	r25, 7
 7d0:	3e f4       	brtc	.+14     	; 0x7e0 <__floatsisf+0x12>
 7d2:	90 95       	com	r25
 7d4:	80 95       	com	r24
 7d6:	70 95       	com	r23
 7d8:	61 95       	neg	r22
 7da:	7f 4f       	sbci	r23, 0xFF	; 255
 7dc:	8f 4f       	sbci	r24, 0xFF	; 255
 7de:	9f 4f       	sbci	r25, 0xFF	; 255
 7e0:	99 23       	and	r25, r25
 7e2:	a9 f0       	breq	.+42     	; 0x80e <__floatsisf+0x40>
 7e4:	f9 2f       	mov	r31, r25
 7e6:	96 e9       	ldi	r25, 0x96	; 150
 7e8:	bb 27       	eor	r27, r27
 7ea:	93 95       	inc	r25
 7ec:	f6 95       	lsr	r31
 7ee:	87 95       	ror	r24
 7f0:	77 95       	ror	r23
 7f2:	67 95       	ror	r22
 7f4:	b7 95       	ror	r27
 7f6:	f1 11       	cpse	r31, r1
 7f8:	f8 cf       	rjmp	.-16     	; 0x7ea <__floatsisf+0x1c>
 7fa:	fa f4       	brpl	.+62     	; 0x83a <__floatsisf+0x6c>
 7fc:	bb 0f       	add	r27, r27
 7fe:	11 f4       	brne	.+4      	; 0x804 <__floatsisf+0x36>
 800:	60 ff       	sbrs	r22, 0
 802:	1b c0       	rjmp	.+54     	; 0x83a <__floatsisf+0x6c>
 804:	6f 5f       	subi	r22, 0xFF	; 255
 806:	7f 4f       	sbci	r23, 0xFF	; 255
 808:	8f 4f       	sbci	r24, 0xFF	; 255
 80a:	9f 4f       	sbci	r25, 0xFF	; 255
 80c:	16 c0       	rjmp	.+44     	; 0x83a <__floatsisf+0x6c>
 80e:	88 23       	and	r24, r24
 810:	11 f0       	breq	.+4      	; 0x816 <__floatsisf+0x48>
 812:	96 e9       	ldi	r25, 0x96	; 150
 814:	11 c0       	rjmp	.+34     	; 0x838 <__floatsisf+0x6a>
 816:	77 23       	and	r23, r23
 818:	21 f0       	breq	.+8      	; 0x822 <__floatsisf+0x54>
 81a:	9e e8       	ldi	r25, 0x8E	; 142
 81c:	87 2f       	mov	r24, r23
 81e:	76 2f       	mov	r23, r22
 820:	05 c0       	rjmp	.+10     	; 0x82c <__floatsisf+0x5e>
 822:	66 23       	and	r22, r22
 824:	71 f0       	breq	.+28     	; 0x842 <__floatsisf+0x74>
 826:	96 e8       	ldi	r25, 0x86	; 134
 828:	86 2f       	mov	r24, r22
 82a:	70 e0       	ldi	r23, 0x00	; 0
 82c:	60 e0       	ldi	r22, 0x00	; 0
 82e:	2a f0       	brmi	.+10     	; 0x83a <__floatsisf+0x6c>
 830:	9a 95       	dec	r25
 832:	66 0f       	add	r22, r22
 834:	77 1f       	adc	r23, r23
 836:	88 1f       	adc	r24, r24
 838:	da f7       	brpl	.-10     	; 0x830 <__floatsisf+0x62>
 83a:	88 0f       	add	r24, r24
 83c:	96 95       	lsr	r25
 83e:	87 95       	ror	r24
 840:	97 f9       	bld	r25, 7
 842:	08 95       	ret

00000844 <__fp_inf>:
 844:	97 f9       	bld	r25, 7
 846:	9f 67       	ori	r25, 0x7F	; 127
 848:	80 e8       	ldi	r24, 0x80	; 128
 84a:	70 e0       	ldi	r23, 0x00	; 0
 84c:	60 e0       	ldi	r22, 0x00	; 0
 84e:	08 95       	ret

00000850 <__fp_nan>:
 850:	9f ef       	ldi	r25, 0xFF	; 255
 852:	80 ec       	ldi	r24, 0xC0	; 192
 854:	08 95       	ret

00000856 <__fp_pscA>:
 856:	00 24       	eor	r0, r0
 858:	0a 94       	dec	r0
 85a:	16 16       	cp	r1, r22
 85c:	17 06       	cpc	r1, r23
 85e:	18 06       	cpc	r1, r24
 860:	09 06       	cpc	r0, r25
 862:	08 95       	ret

00000864 <__fp_pscB>:
 864:	00 24       	eor	r0, r0
 866:	0a 94       	dec	r0
 868:	12 16       	cp	r1, r18
 86a:	13 06       	cpc	r1, r19
 86c:	14 06       	cpc	r1, r20
 86e:	05 06       	cpc	r0, r21
 870:	08 95       	ret

00000872 <__fp_round>:
 872:	09 2e       	mov	r0, r25
 874:	03 94       	inc	r0
 876:	00 0c       	add	r0, r0
 878:	11 f4       	brne	.+4      	; 0x87e <__fp_round+0xc>
 87a:	88 23       	and	r24, r24
 87c:	52 f0       	brmi	.+20     	; 0x892 <__fp_round+0x20>
 87e:	bb 0f       	add	r27, r27
 880:	40 f4       	brcc	.+16     	; 0x892 <__fp_round+0x20>
 882:	bf 2b       	or	r27, r31
 884:	11 f4       	brne	.+4      	; 0x88a <__fp_round+0x18>
 886:	60 ff       	sbrs	r22, 0
 888:	04 c0       	rjmp	.+8      	; 0x892 <__fp_round+0x20>
 88a:	6f 5f       	subi	r22, 0xFF	; 255
 88c:	7f 4f       	sbci	r23, 0xFF	; 255
 88e:	8f 4f       	sbci	r24, 0xFF	; 255
 890:	9f 4f       	sbci	r25, 0xFF	; 255
 892:	08 95       	ret

00000894 <__fp_split3>:
 894:	57 fd       	sbrc	r21, 7
 896:	90 58       	subi	r25, 0x80	; 128
 898:	44 0f       	add	r20, r20
 89a:	55 1f       	adc	r21, r21
 89c:	59 f0       	breq	.+22     	; 0x8b4 <__fp_splitA+0x10>
 89e:	5f 3f       	cpi	r21, 0xFF	; 255
 8a0:	71 f0       	breq	.+28     	; 0x8be <__fp_splitA+0x1a>
 8a2:	47 95       	ror	r20

000008a4 <__fp_splitA>:
 8a4:	88 0f       	add	r24, r24
 8a6:	97 fb       	bst	r25, 7
 8a8:	99 1f       	adc	r25, r25
 8aa:	61 f0       	breq	.+24     	; 0x8c4 <__fp_splitA+0x20>
 8ac:	9f 3f       	cpi	r25, 0xFF	; 255
 8ae:	79 f0       	breq	.+30     	; 0x8ce <__fp_splitA+0x2a>
 8b0:	87 95       	ror	r24
 8b2:	08 95       	ret
 8b4:	12 16       	cp	r1, r18
 8b6:	13 06       	cpc	r1, r19
 8b8:	14 06       	cpc	r1, r20
 8ba:	55 1f       	adc	r21, r21
 8bc:	f2 cf       	rjmp	.-28     	; 0x8a2 <__fp_split3+0xe>
 8be:	46 95       	lsr	r20
 8c0:	f1 df       	rcall	.-30     	; 0x8a4 <__fp_splitA>
 8c2:	08 c0       	rjmp	.+16     	; 0x8d4 <__fp_splitA+0x30>
 8c4:	16 16       	cp	r1, r22
 8c6:	17 06       	cpc	r1, r23
 8c8:	18 06       	cpc	r1, r24
 8ca:	99 1f       	adc	r25, r25
 8cc:	f1 cf       	rjmp	.-30     	; 0x8b0 <__fp_splitA+0xc>
 8ce:	86 95       	lsr	r24
 8d0:	71 05       	cpc	r23, r1
 8d2:	61 05       	cpc	r22, r1
 8d4:	08 94       	sec
 8d6:	08 95       	ret

000008d8 <__fp_zero>:
 8d8:	e8 94       	clt

000008da <__fp_szero>:
 8da:	bb 27       	eor	r27, r27
 8dc:	66 27       	eor	r22, r22
 8de:	77 27       	eor	r23, r23
 8e0:	cb 01       	movw	r24, r22
 8e2:	97 f9       	bld	r25, 7
 8e4:	08 95       	ret

000008e6 <dtostrf>:
 8e6:	ef 92       	push	r14
 8e8:	0f 93       	push	r16
 8ea:	1f 93       	push	r17
 8ec:	cf 93       	push	r28
 8ee:	df 93       	push	r29
 8f0:	e8 01       	movw	r28, r16
 8f2:	47 fd       	sbrc	r20, 7
 8f4:	02 c0       	rjmp	.+4      	; 0x8fa <dtostrf+0x14>
 8f6:	34 e0       	ldi	r19, 0x04	; 4
 8f8:	01 c0       	rjmp	.+2      	; 0x8fc <dtostrf+0x16>
 8fa:	34 e1       	ldi	r19, 0x14	; 20
 8fc:	04 2e       	mov	r0, r20
 8fe:	00 0c       	add	r0, r0
 900:	55 0b       	sbc	r21, r21
 902:	57 ff       	sbrs	r21, 7
 904:	03 c0       	rjmp	.+6      	; 0x90c <dtostrf+0x26>
 906:	51 95       	neg	r21
 908:	41 95       	neg	r20
 90a:	51 09       	sbc	r21, r1
 90c:	e3 2e       	mov	r14, r19
 90e:	02 2f       	mov	r16, r18
 910:	24 2f       	mov	r18, r20
 912:	ae 01       	movw	r20, r28
 914:	0e 94 b8 04 	call	0x970	; 0x970 <dtoa_prf>
 918:	ce 01       	movw	r24, r28
 91a:	df 91       	pop	r29
 91c:	cf 91       	pop	r28
 91e:	1f 91       	pop	r17
 920:	0f 91       	pop	r16
 922:	ef 90       	pop	r14
 924:	08 95       	ret

00000926 <__itoa_ncheck>:
 926:	bb 27       	eor	r27, r27
 928:	4a 30       	cpi	r20, 0x0A	; 10
 92a:	31 f4       	brne	.+12     	; 0x938 <__itoa_ncheck+0x12>
 92c:	99 23       	and	r25, r25
 92e:	22 f4       	brpl	.+8      	; 0x938 <__itoa_ncheck+0x12>
 930:	bd e2       	ldi	r27, 0x2D	; 45
 932:	90 95       	com	r25
 934:	81 95       	neg	r24
 936:	9f 4f       	sbci	r25, 0xFF	; 255
 938:	0c 94 9f 04 	jmp	0x93e	; 0x93e <__utoa_common>

0000093c <__utoa_ncheck>:
 93c:	bb 27       	eor	r27, r27

0000093e <__utoa_common>:
 93e:	fb 01       	movw	r30, r22
 940:	55 27       	eor	r21, r21
 942:	aa 27       	eor	r26, r26
 944:	88 0f       	add	r24, r24
 946:	99 1f       	adc	r25, r25
 948:	aa 1f       	adc	r26, r26
 94a:	a4 17       	cp	r26, r20
 94c:	10 f0       	brcs	.+4      	; 0x952 <__utoa_common+0x14>
 94e:	a4 1b       	sub	r26, r20
 950:	83 95       	inc	r24
 952:	50 51       	subi	r21, 0x10	; 16
 954:	b9 f7       	brne	.-18     	; 0x944 <__utoa_common+0x6>
 956:	a0 5d       	subi	r26, 0xD0	; 208
 958:	aa 33       	cpi	r26, 0x3A	; 58
 95a:	08 f0       	brcs	.+2      	; 0x95e <__utoa_common+0x20>
 95c:	a9 5d       	subi	r26, 0xD9	; 217
 95e:	a1 93       	st	Z+, r26
 960:	00 97       	sbiw	r24, 0x00	; 0
 962:	79 f7       	brne	.-34     	; 0x942 <__utoa_common+0x4>
 964:	b1 11       	cpse	r27, r1
 966:	b1 93       	st	Z+, r27
 968:	11 92       	st	Z+, r1
 96a:	cb 01       	movw	r24, r22
 96c:	0c 94 ea 06 	jmp	0xdd4	; 0xdd4 <strrev>

00000970 <dtoa_prf>:
 970:	a9 e0       	ldi	r26, 0x09	; 9
 972:	b0 e0       	ldi	r27, 0x00	; 0
 974:	ee eb       	ldi	r30, 0xBE	; 190
 976:	f4 e0       	ldi	r31, 0x04	; 4
 978:	0c 94 00 07 	jmp	0xe00	; 0xe00 <__prologue_saves__+0xc>
 97c:	6a 01       	movw	r12, r20
 97e:	12 2f       	mov	r17, r18
 980:	b0 2e       	mov	r11, r16
 982:	2b e3       	ldi	r18, 0x3B	; 59
 984:	20 17       	cp	r18, r16
 986:	20 f0       	brcs	.+8      	; 0x990 <dtoa_prf+0x20>
 988:	ff 24       	eor	r15, r15
 98a:	f3 94       	inc	r15
 98c:	f0 0e       	add	r15, r16
 98e:	02 c0       	rjmp	.+4      	; 0x994 <dtoa_prf+0x24>
 990:	2c e3       	ldi	r18, 0x3C	; 60
 992:	f2 2e       	mov	r15, r18
 994:	0f 2d       	mov	r16, r15
 996:	27 e0       	ldi	r18, 0x07	; 7
 998:	ae 01       	movw	r20, r28
 99a:	4f 5f       	subi	r20, 0xFF	; 255
 99c:	5f 4f       	sbci	r21, 0xFF	; 255
 99e:	0e 94 12 06 	call	0xc24	; 0xc24 <__ftoa_engine>
 9a2:	bc 01       	movw	r22, r24
 9a4:	49 81       	ldd	r20, Y+1	; 0x01
 9a6:	84 2f       	mov	r24, r20
 9a8:	89 70       	andi	r24, 0x09	; 9
 9aa:	81 30       	cpi	r24, 0x01	; 1
 9ac:	31 f0       	breq	.+12     	; 0x9ba <dtoa_prf+0x4a>
 9ae:	e1 fc       	sbrc	r14, 1
 9b0:	06 c0       	rjmp	.+12     	; 0x9be <dtoa_prf+0x4e>
 9b2:	e0 fe       	sbrs	r14, 0
 9b4:	06 c0       	rjmp	.+12     	; 0x9c2 <dtoa_prf+0x52>
 9b6:	90 e2       	ldi	r25, 0x20	; 32
 9b8:	05 c0       	rjmp	.+10     	; 0x9c4 <dtoa_prf+0x54>
 9ba:	9d e2       	ldi	r25, 0x2D	; 45
 9bc:	03 c0       	rjmp	.+6      	; 0x9c4 <dtoa_prf+0x54>
 9be:	9b e2       	ldi	r25, 0x2B	; 43
 9c0:	01 c0       	rjmp	.+2      	; 0x9c4 <dtoa_prf+0x54>
 9c2:	90 e0       	ldi	r25, 0x00	; 0
 9c4:	5e 2d       	mov	r21, r14
 9c6:	50 71       	andi	r21, 0x10	; 16
 9c8:	43 ff       	sbrs	r20, 3
 9ca:	3c c0       	rjmp	.+120    	; 0xa44 <dtoa_prf+0xd4>
 9cc:	91 11       	cpse	r25, r1
 9ce:	02 c0       	rjmp	.+4      	; 0x9d4 <dtoa_prf+0x64>
 9d0:	83 e0       	ldi	r24, 0x03	; 3
 9d2:	01 c0       	rjmp	.+2      	; 0x9d6 <dtoa_prf+0x66>
 9d4:	84 e0       	ldi	r24, 0x04	; 4
 9d6:	81 17       	cp	r24, r17
 9d8:	18 f4       	brcc	.+6      	; 0x9e0 <dtoa_prf+0x70>
 9da:	21 2f       	mov	r18, r17
 9dc:	28 1b       	sub	r18, r24
 9de:	01 c0       	rjmp	.+2      	; 0x9e2 <dtoa_prf+0x72>
 9e0:	20 e0       	ldi	r18, 0x00	; 0
 9e2:	51 11       	cpse	r21, r1
 9e4:	0b c0       	rjmp	.+22     	; 0x9fc <dtoa_prf+0x8c>
 9e6:	f6 01       	movw	r30, r12
 9e8:	82 2f       	mov	r24, r18
 9ea:	30 e2       	ldi	r19, 0x20	; 32
 9ec:	88 23       	and	r24, r24
 9ee:	19 f0       	breq	.+6      	; 0x9f6 <dtoa_prf+0x86>
 9f0:	31 93       	st	Z+, r19
 9f2:	81 50       	subi	r24, 0x01	; 1
 9f4:	fb cf       	rjmp	.-10     	; 0x9ec <dtoa_prf+0x7c>
 9f6:	c2 0e       	add	r12, r18
 9f8:	d1 1c       	adc	r13, r1
 9fa:	20 e0       	ldi	r18, 0x00	; 0
 9fc:	99 23       	and	r25, r25
 9fe:	29 f0       	breq	.+10     	; 0xa0a <dtoa_prf+0x9a>
 a00:	d6 01       	movw	r26, r12
 a02:	9c 93       	st	X, r25
 a04:	f6 01       	movw	r30, r12
 a06:	31 96       	adiw	r30, 0x01	; 1
 a08:	6f 01       	movw	r12, r30
 a0a:	c6 01       	movw	r24, r12
 a0c:	03 96       	adiw	r24, 0x03	; 3
 a0e:	e2 fe       	sbrs	r14, 2
 a10:	0a c0       	rjmp	.+20     	; 0xa26 <dtoa_prf+0xb6>
 a12:	3e e4       	ldi	r19, 0x4E	; 78
 a14:	d6 01       	movw	r26, r12
 a16:	3c 93       	st	X, r19
 a18:	41 e4       	ldi	r20, 0x41	; 65
 a1a:	11 96       	adiw	r26, 0x01	; 1
 a1c:	4c 93       	st	X, r20
 a1e:	11 97       	sbiw	r26, 0x01	; 1
 a20:	12 96       	adiw	r26, 0x02	; 2
 a22:	3c 93       	st	X, r19
 a24:	06 c0       	rjmp	.+12     	; 0xa32 <dtoa_prf+0xc2>
 a26:	3e e6       	ldi	r19, 0x6E	; 110
 a28:	f6 01       	movw	r30, r12
 a2a:	30 83       	st	Z, r19
 a2c:	41 e6       	ldi	r20, 0x61	; 97
 a2e:	41 83       	std	Z+1, r20	; 0x01
 a30:	32 83       	std	Z+2, r19	; 0x02
 a32:	fc 01       	movw	r30, r24
 a34:	32 2f       	mov	r19, r18
 a36:	40 e2       	ldi	r20, 0x20	; 32
 a38:	33 23       	and	r19, r19
 a3a:	09 f4       	brne	.+2      	; 0xa3e <dtoa_prf+0xce>
 a3c:	42 c0       	rjmp	.+132    	; 0xac2 <dtoa_prf+0x152>
 a3e:	41 93       	st	Z+, r20
 a40:	31 50       	subi	r19, 0x01	; 1
 a42:	fa cf       	rjmp	.-12     	; 0xa38 <dtoa_prf+0xc8>
 a44:	42 ff       	sbrs	r20, 2
 a46:	44 c0       	rjmp	.+136    	; 0xad0 <dtoa_prf+0x160>
 a48:	91 11       	cpse	r25, r1
 a4a:	02 c0       	rjmp	.+4      	; 0xa50 <dtoa_prf+0xe0>
 a4c:	83 e0       	ldi	r24, 0x03	; 3
 a4e:	01 c0       	rjmp	.+2      	; 0xa52 <dtoa_prf+0xe2>
 a50:	84 e0       	ldi	r24, 0x04	; 4
 a52:	81 17       	cp	r24, r17
 a54:	18 f4       	brcc	.+6      	; 0xa5c <dtoa_prf+0xec>
 a56:	21 2f       	mov	r18, r17
 a58:	28 1b       	sub	r18, r24
 a5a:	01 c0       	rjmp	.+2      	; 0xa5e <dtoa_prf+0xee>
 a5c:	20 e0       	ldi	r18, 0x00	; 0
 a5e:	51 11       	cpse	r21, r1
 a60:	0b c0       	rjmp	.+22     	; 0xa78 <dtoa_prf+0x108>
 a62:	f6 01       	movw	r30, r12
 a64:	82 2f       	mov	r24, r18
 a66:	30 e2       	ldi	r19, 0x20	; 32
 a68:	88 23       	and	r24, r24
 a6a:	19 f0       	breq	.+6      	; 0xa72 <dtoa_prf+0x102>
 a6c:	31 93       	st	Z+, r19
 a6e:	81 50       	subi	r24, 0x01	; 1
 a70:	fb cf       	rjmp	.-10     	; 0xa68 <dtoa_prf+0xf8>
 a72:	c2 0e       	add	r12, r18
 a74:	d1 1c       	adc	r13, r1
 a76:	20 e0       	ldi	r18, 0x00	; 0
 a78:	99 23       	and	r25, r25
 a7a:	29 f0       	breq	.+10     	; 0xa86 <dtoa_prf+0x116>
 a7c:	d6 01       	movw	r26, r12
 a7e:	9c 93       	st	X, r25
 a80:	f6 01       	movw	r30, r12
 a82:	31 96       	adiw	r30, 0x01	; 1
 a84:	6f 01       	movw	r12, r30
 a86:	c6 01       	movw	r24, r12
 a88:	03 96       	adiw	r24, 0x03	; 3
 a8a:	e2 fe       	sbrs	r14, 2
 a8c:	0b c0       	rjmp	.+22     	; 0xaa4 <dtoa_prf+0x134>
 a8e:	39 e4       	ldi	r19, 0x49	; 73
 a90:	d6 01       	movw	r26, r12
 a92:	3c 93       	st	X, r19
 a94:	3e e4       	ldi	r19, 0x4E	; 78
 a96:	11 96       	adiw	r26, 0x01	; 1
 a98:	3c 93       	st	X, r19
 a9a:	11 97       	sbiw	r26, 0x01	; 1
 a9c:	36 e4       	ldi	r19, 0x46	; 70
 a9e:	12 96       	adiw	r26, 0x02	; 2
 aa0:	3c 93       	st	X, r19
 aa2:	07 c0       	rjmp	.+14     	; 0xab2 <dtoa_prf+0x142>
 aa4:	39 e6       	ldi	r19, 0x69	; 105
 aa6:	f6 01       	movw	r30, r12
 aa8:	30 83       	st	Z, r19
 aaa:	3e e6       	ldi	r19, 0x6E	; 110
 aac:	31 83       	std	Z+1, r19	; 0x01
 aae:	36 e6       	ldi	r19, 0x66	; 102
 ab0:	32 83       	std	Z+2, r19	; 0x02
 ab2:	fc 01       	movw	r30, r24
 ab4:	32 2f       	mov	r19, r18
 ab6:	40 e2       	ldi	r20, 0x20	; 32
 ab8:	33 23       	and	r19, r19
 aba:	19 f0       	breq	.+6      	; 0xac2 <dtoa_prf+0x152>
 abc:	41 93       	st	Z+, r20
 abe:	31 50       	subi	r19, 0x01	; 1
 ac0:	fb cf       	rjmp	.-10     	; 0xab8 <dtoa_prf+0x148>
 ac2:	fc 01       	movw	r30, r24
 ac4:	e2 0f       	add	r30, r18
 ac6:	f1 1d       	adc	r31, r1
 ac8:	10 82       	st	Z, r1
 aca:	8e ef       	ldi	r24, 0xFE	; 254
 acc:	9f ef       	ldi	r25, 0xFF	; 255
 ace:	a6 c0       	rjmp	.+332    	; 0xc1c <dtoa_prf+0x2ac>
 ad0:	21 e0       	ldi	r18, 0x01	; 1
 ad2:	30 e0       	ldi	r19, 0x00	; 0
 ad4:	91 11       	cpse	r25, r1
 ad6:	02 c0       	rjmp	.+4      	; 0xadc <dtoa_prf+0x16c>
 ad8:	20 e0       	ldi	r18, 0x00	; 0
 ada:	30 e0       	ldi	r19, 0x00	; 0
 adc:	16 16       	cp	r1, r22
 ade:	17 06       	cpc	r1, r23
 ae0:	1c f4       	brge	.+6      	; 0xae8 <dtoa_prf+0x178>
 ae2:	fb 01       	movw	r30, r22
 ae4:	31 96       	adiw	r30, 0x01	; 1
 ae6:	02 c0       	rjmp	.+4      	; 0xaec <dtoa_prf+0x17c>
 ae8:	e1 e0       	ldi	r30, 0x01	; 1
 aea:	f0 e0       	ldi	r31, 0x00	; 0
 aec:	2e 0f       	add	r18, r30
 aee:	3f 1f       	adc	r19, r31
 af0:	bb 20       	and	r11, r11
 af2:	21 f0       	breq	.+8      	; 0xafc <dtoa_prf+0x18c>
 af4:	eb 2d       	mov	r30, r11
 af6:	f0 e0       	ldi	r31, 0x00	; 0
 af8:	31 96       	adiw	r30, 0x01	; 1
 afa:	02 c0       	rjmp	.+4      	; 0xb00 <dtoa_prf+0x190>
 afc:	e0 e0       	ldi	r30, 0x00	; 0
 afe:	f0 e0       	ldi	r31, 0x00	; 0
 b00:	2e 0f       	add	r18, r30
 b02:	3f 1f       	adc	r19, r31
 b04:	e1 2f       	mov	r30, r17
 b06:	f0 e0       	ldi	r31, 0x00	; 0
 b08:	2e 17       	cp	r18, r30
 b0a:	3f 07       	cpc	r19, r31
 b0c:	1c f4       	brge	.+6      	; 0xb14 <dtoa_prf+0x1a4>
 b0e:	12 1b       	sub	r17, r18
 b10:	21 2f       	mov	r18, r17
 b12:	01 c0       	rjmp	.+2      	; 0xb16 <dtoa_prf+0x1a6>
 b14:	20 e0       	ldi	r18, 0x00	; 0
 b16:	8e 2d       	mov	r24, r14
 b18:	88 71       	andi	r24, 0x18	; 24
 b1a:	59 f4       	brne	.+22     	; 0xb32 <dtoa_prf+0x1c2>
 b1c:	f6 01       	movw	r30, r12
 b1e:	82 2f       	mov	r24, r18
 b20:	30 e2       	ldi	r19, 0x20	; 32
 b22:	88 23       	and	r24, r24
 b24:	19 f0       	breq	.+6      	; 0xb2c <dtoa_prf+0x1bc>
 b26:	31 93       	st	Z+, r19
 b28:	81 50       	subi	r24, 0x01	; 1
 b2a:	fb cf       	rjmp	.-10     	; 0xb22 <dtoa_prf+0x1b2>
 b2c:	c2 0e       	add	r12, r18
 b2e:	d1 1c       	adc	r13, r1
 b30:	20 e0       	ldi	r18, 0x00	; 0
 b32:	99 23       	and	r25, r25
 b34:	29 f0       	breq	.+10     	; 0xb40 <dtoa_prf+0x1d0>
 b36:	d6 01       	movw	r26, r12
 b38:	9c 93       	st	X, r25
 b3a:	f6 01       	movw	r30, r12
 b3c:	31 96       	adiw	r30, 0x01	; 1
 b3e:	6f 01       	movw	r12, r30
 b40:	51 11       	cpse	r21, r1
 b42:	0b c0       	rjmp	.+22     	; 0xb5a <dtoa_prf+0x1ea>
 b44:	f6 01       	movw	r30, r12
 b46:	82 2f       	mov	r24, r18
 b48:	90 e3       	ldi	r25, 0x30	; 48
 b4a:	88 23       	and	r24, r24
 b4c:	19 f0       	breq	.+6      	; 0xb54 <dtoa_prf+0x1e4>
 b4e:	91 93       	st	Z+, r25
 b50:	81 50       	subi	r24, 0x01	; 1
 b52:	fb cf       	rjmp	.-10     	; 0xb4a <dtoa_prf+0x1da>
 b54:	c2 0e       	add	r12, r18
 b56:	d1 1c       	adc	r13, r1
 b58:	20 e0       	ldi	r18, 0x00	; 0
 b5a:	0f 2d       	mov	r16, r15
 b5c:	06 0f       	add	r16, r22
 b5e:	9a 81       	ldd	r25, Y+2	; 0x02
 b60:	34 2f       	mov	r19, r20
 b62:	30 71       	andi	r19, 0x10	; 16
 b64:	44 ff       	sbrs	r20, 4
 b66:	03 c0       	rjmp	.+6      	; 0xb6e <dtoa_prf+0x1fe>
 b68:	91 33       	cpi	r25, 0x31	; 49
 b6a:	09 f4       	brne	.+2      	; 0xb6e <dtoa_prf+0x1fe>
 b6c:	01 50       	subi	r16, 0x01	; 1
 b6e:	10 16       	cp	r1, r16
 b70:	24 f4       	brge	.+8      	; 0xb7a <dtoa_prf+0x20a>
 b72:	09 30       	cpi	r16, 0x09	; 9
 b74:	18 f0       	brcs	.+6      	; 0xb7c <dtoa_prf+0x20c>
 b76:	08 e0       	ldi	r16, 0x08	; 8
 b78:	01 c0       	rjmp	.+2      	; 0xb7c <dtoa_prf+0x20c>
 b7a:	01 e0       	ldi	r16, 0x01	; 1
 b7c:	ab 01       	movw	r20, r22
 b7e:	77 ff       	sbrs	r23, 7
 b80:	02 c0       	rjmp	.+4      	; 0xb86 <dtoa_prf+0x216>
 b82:	40 e0       	ldi	r20, 0x00	; 0
 b84:	50 e0       	ldi	r21, 0x00	; 0
 b86:	fb 01       	movw	r30, r22
 b88:	e4 1b       	sub	r30, r20
 b8a:	f5 0b       	sbc	r31, r21
 b8c:	a1 e0       	ldi	r26, 0x01	; 1
 b8e:	b0 e0       	ldi	r27, 0x00	; 0
 b90:	ac 0f       	add	r26, r28
 b92:	bd 1f       	adc	r27, r29
 b94:	ea 0f       	add	r30, r26
 b96:	fb 1f       	adc	r31, r27
 b98:	8e e2       	ldi	r24, 0x2E	; 46
 b9a:	a8 2e       	mov	r10, r24
 b9c:	4b 01       	movw	r8, r22
 b9e:	80 1a       	sub	r8, r16
 ba0:	91 08       	sbc	r9, r1
 ba2:	0b 2d       	mov	r16, r11
 ba4:	10 e0       	ldi	r17, 0x00	; 0
 ba6:	11 95       	neg	r17
 ba8:	01 95       	neg	r16
 baa:	11 09       	sbc	r17, r1
 bac:	4f 3f       	cpi	r20, 0xFF	; 255
 bae:	bf ef       	ldi	r27, 0xFF	; 255
 bb0:	5b 07       	cpc	r21, r27
 bb2:	21 f4       	brne	.+8      	; 0xbbc <dtoa_prf+0x24c>
 bb4:	d6 01       	movw	r26, r12
 bb6:	ac 92       	st	X, r10
 bb8:	11 96       	adiw	r26, 0x01	; 1
 bba:	6d 01       	movw	r12, r26
 bbc:	64 17       	cp	r22, r20
 bbe:	75 07       	cpc	r23, r21
 bc0:	2c f0       	brlt	.+10     	; 0xbcc <dtoa_prf+0x25c>
 bc2:	84 16       	cp	r8, r20
 bc4:	95 06       	cpc	r9, r21
 bc6:	14 f4       	brge	.+4      	; 0xbcc <dtoa_prf+0x25c>
 bc8:	81 81       	ldd	r24, Z+1	; 0x01
 bca:	01 c0       	rjmp	.+2      	; 0xbce <dtoa_prf+0x25e>
 bcc:	80 e3       	ldi	r24, 0x30	; 48
 bce:	41 50       	subi	r20, 0x01	; 1
 bd0:	51 09       	sbc	r21, r1
 bd2:	31 96       	adiw	r30, 0x01	; 1
 bd4:	d6 01       	movw	r26, r12
 bd6:	11 96       	adiw	r26, 0x01	; 1
 bd8:	7d 01       	movw	r14, r26
 bda:	40 17       	cp	r20, r16
 bdc:	51 07       	cpc	r21, r17
 bde:	24 f0       	brlt	.+8      	; 0xbe8 <dtoa_prf+0x278>
 be0:	d6 01       	movw	r26, r12
 be2:	8c 93       	st	X, r24
 be4:	67 01       	movw	r12, r14
 be6:	e2 cf       	rjmp	.-60     	; 0xbac <dtoa_prf+0x23c>
 be8:	64 17       	cp	r22, r20
 bea:	75 07       	cpc	r23, r21
 bec:	39 f4       	brne	.+14     	; 0xbfc <dtoa_prf+0x28c>
 bee:	96 33       	cpi	r25, 0x36	; 54
 bf0:	20 f4       	brcc	.+8      	; 0xbfa <dtoa_prf+0x28a>
 bf2:	95 33       	cpi	r25, 0x35	; 53
 bf4:	19 f4       	brne	.+6      	; 0xbfc <dtoa_prf+0x28c>
 bf6:	31 11       	cpse	r19, r1
 bf8:	01 c0       	rjmp	.+2      	; 0xbfc <dtoa_prf+0x28c>
 bfa:	81 e3       	ldi	r24, 0x31	; 49
 bfc:	f6 01       	movw	r30, r12
 bfe:	80 83       	st	Z, r24
 c00:	f7 01       	movw	r30, r14
 c02:	82 2f       	mov	r24, r18
 c04:	90 e2       	ldi	r25, 0x20	; 32
 c06:	88 23       	and	r24, r24
 c08:	19 f0       	breq	.+6      	; 0xc10 <dtoa_prf+0x2a0>
 c0a:	91 93       	st	Z+, r25
 c0c:	81 50       	subi	r24, 0x01	; 1
 c0e:	fb cf       	rjmp	.-10     	; 0xc06 <dtoa_prf+0x296>
 c10:	f7 01       	movw	r30, r14
 c12:	e2 0f       	add	r30, r18
 c14:	f1 1d       	adc	r31, r1
 c16:	10 82       	st	Z, r1
 c18:	80 e0       	ldi	r24, 0x00	; 0
 c1a:	90 e0       	ldi	r25, 0x00	; 0
 c1c:	29 96       	adiw	r28, 0x09	; 9
 c1e:	ec e0       	ldi	r30, 0x0C	; 12
 c20:	0c 94 1c 07 	jmp	0xe38	; 0xe38 <__epilogue_restores__+0xc>

00000c24 <__ftoa_engine>:
 c24:	28 30       	cpi	r18, 0x08	; 8
 c26:	08 f0       	brcs	.+2      	; 0xc2a <__ftoa_engine+0x6>
 c28:	27 e0       	ldi	r18, 0x07	; 7
 c2a:	33 27       	eor	r19, r19
 c2c:	da 01       	movw	r26, r20
 c2e:	99 0f       	add	r25, r25
 c30:	31 1d       	adc	r19, r1
 c32:	87 fd       	sbrc	r24, 7
 c34:	91 60       	ori	r25, 0x01	; 1
 c36:	00 96       	adiw	r24, 0x00	; 0
 c38:	61 05       	cpc	r22, r1
 c3a:	71 05       	cpc	r23, r1
 c3c:	39 f4       	brne	.+14     	; 0xc4c <__ftoa_engine+0x28>
 c3e:	32 60       	ori	r19, 0x02	; 2
 c40:	2e 5f       	subi	r18, 0xFE	; 254
 c42:	3d 93       	st	X+, r19
 c44:	30 e3       	ldi	r19, 0x30	; 48
 c46:	2a 95       	dec	r18
 c48:	e1 f7       	brne	.-8      	; 0xc42 <__ftoa_engine+0x1e>
 c4a:	08 95       	ret
 c4c:	9f 3f       	cpi	r25, 0xFF	; 255
 c4e:	30 f0       	brcs	.+12     	; 0xc5c <__ftoa_engine+0x38>
 c50:	80 38       	cpi	r24, 0x80	; 128
 c52:	71 05       	cpc	r23, r1
 c54:	61 05       	cpc	r22, r1
 c56:	09 f0       	breq	.+2      	; 0xc5a <__ftoa_engine+0x36>
 c58:	3c 5f       	subi	r19, 0xFC	; 252
 c5a:	3c 5f       	subi	r19, 0xFC	; 252
 c5c:	3d 93       	st	X+, r19
 c5e:	91 30       	cpi	r25, 0x01	; 1
 c60:	08 f0       	brcs	.+2      	; 0xc64 <__ftoa_engine+0x40>
 c62:	80 68       	ori	r24, 0x80	; 128
 c64:	91 1d       	adc	r25, r1
 c66:	df 93       	push	r29
 c68:	cf 93       	push	r28
 c6a:	1f 93       	push	r17
 c6c:	0f 93       	push	r16
 c6e:	ff 92       	push	r15
 c70:	ef 92       	push	r14
 c72:	19 2f       	mov	r17, r25
 c74:	98 7f       	andi	r25, 0xF8	; 248
 c76:	96 95       	lsr	r25
 c78:	e9 2f       	mov	r30, r25
 c7a:	96 95       	lsr	r25
 c7c:	96 95       	lsr	r25
 c7e:	e9 0f       	add	r30, r25
 c80:	ff 27       	eor	r31, r31
 c82:	e2 55       	subi	r30, 0x52	; 82
 c84:	ff 4f       	sbci	r31, 0xFF	; 255
 c86:	99 27       	eor	r25, r25
 c88:	33 27       	eor	r19, r19
 c8a:	ee 24       	eor	r14, r14
 c8c:	ff 24       	eor	r15, r15
 c8e:	a7 01       	movw	r20, r14
 c90:	e7 01       	movw	r28, r14
 c92:	05 90       	lpm	r0, Z+
 c94:	08 94       	sec
 c96:	07 94       	ror	r0
 c98:	28 f4       	brcc	.+10     	; 0xca4 <__ftoa_engine+0x80>
 c9a:	36 0f       	add	r19, r22
 c9c:	e7 1e       	adc	r14, r23
 c9e:	f8 1e       	adc	r15, r24
 ca0:	49 1f       	adc	r20, r25
 ca2:	51 1d       	adc	r21, r1
 ca4:	66 0f       	add	r22, r22
 ca6:	77 1f       	adc	r23, r23
 ca8:	88 1f       	adc	r24, r24
 caa:	99 1f       	adc	r25, r25
 cac:	06 94       	lsr	r0
 cae:	a1 f7       	brne	.-24     	; 0xc98 <__ftoa_engine+0x74>
 cb0:	05 90       	lpm	r0, Z+
 cb2:	07 94       	ror	r0
 cb4:	28 f4       	brcc	.+10     	; 0xcc0 <__ftoa_engine+0x9c>
 cb6:	e7 0e       	add	r14, r23
 cb8:	f8 1e       	adc	r15, r24
 cba:	49 1f       	adc	r20, r25
 cbc:	56 1f       	adc	r21, r22
 cbe:	c1 1d       	adc	r28, r1
 cc0:	77 0f       	add	r23, r23
 cc2:	88 1f       	adc	r24, r24
 cc4:	99 1f       	adc	r25, r25
 cc6:	66 1f       	adc	r22, r22
 cc8:	06 94       	lsr	r0
 cca:	a1 f7       	brne	.-24     	; 0xcb4 <__ftoa_engine+0x90>
 ccc:	05 90       	lpm	r0, Z+
 cce:	07 94       	ror	r0
 cd0:	28 f4       	brcc	.+10     	; 0xcdc <__ftoa_engine+0xb8>
 cd2:	f8 0e       	add	r15, r24
 cd4:	49 1f       	adc	r20, r25
 cd6:	56 1f       	adc	r21, r22
 cd8:	c7 1f       	adc	r28, r23
 cda:	d1 1d       	adc	r29, r1
 cdc:	88 0f       	add	r24, r24
 cde:	99 1f       	adc	r25, r25
 ce0:	66 1f       	adc	r22, r22
 ce2:	77 1f       	adc	r23, r23
 ce4:	06 94       	lsr	r0
 ce6:	a1 f7       	brne	.-24     	; 0xcd0 <__ftoa_engine+0xac>
 ce8:	05 90       	lpm	r0, Z+
 cea:	07 94       	ror	r0
 cec:	20 f4       	brcc	.+8      	; 0xcf6 <__ftoa_engine+0xd2>
 cee:	49 0f       	add	r20, r25
 cf0:	56 1f       	adc	r21, r22
 cf2:	c7 1f       	adc	r28, r23
 cf4:	d8 1f       	adc	r29, r24
 cf6:	99 0f       	add	r25, r25
 cf8:	66 1f       	adc	r22, r22
 cfa:	77 1f       	adc	r23, r23
 cfc:	88 1f       	adc	r24, r24
 cfe:	06 94       	lsr	r0
 d00:	a9 f7       	brne	.-22     	; 0xcec <__ftoa_engine+0xc8>
 d02:	84 91       	lpm	r24, Z
 d04:	10 95       	com	r17
 d06:	17 70       	andi	r17, 0x07	; 7
 d08:	41 f0       	breq	.+16     	; 0xd1a <__ftoa_engine+0xf6>
 d0a:	d6 95       	lsr	r29
 d0c:	c7 95       	ror	r28
 d0e:	57 95       	ror	r21
 d10:	47 95       	ror	r20
 d12:	f7 94       	ror	r15
 d14:	e7 94       	ror	r14
 d16:	1a 95       	dec	r17
 d18:	c1 f7       	brne	.-16     	; 0xd0a <__ftoa_engine+0xe6>
 d1a:	e4 e5       	ldi	r30, 0x54	; 84
 d1c:	f0 e0       	ldi	r31, 0x00	; 0
 d1e:	68 94       	set
 d20:	15 90       	lpm	r1, Z+
 d22:	15 91       	lpm	r17, Z+
 d24:	35 91       	lpm	r19, Z+
 d26:	65 91       	lpm	r22, Z+
 d28:	95 91       	lpm	r25, Z+
 d2a:	05 90       	lpm	r0, Z+
 d2c:	7f e2       	ldi	r23, 0x2F	; 47
 d2e:	73 95       	inc	r23
 d30:	e1 18       	sub	r14, r1
 d32:	f1 0a       	sbc	r15, r17
 d34:	43 0b       	sbc	r20, r19
 d36:	56 0b       	sbc	r21, r22
 d38:	c9 0b       	sbc	r28, r25
 d3a:	d0 09       	sbc	r29, r0
 d3c:	c0 f7       	brcc	.-16     	; 0xd2e <__ftoa_engine+0x10a>
 d3e:	e1 0c       	add	r14, r1
 d40:	f1 1e       	adc	r15, r17
 d42:	43 1f       	adc	r20, r19
 d44:	56 1f       	adc	r21, r22
 d46:	c9 1f       	adc	r28, r25
 d48:	d0 1d       	adc	r29, r0
 d4a:	7e f4       	brtc	.+30     	; 0xd6a <__ftoa_engine+0x146>
 d4c:	70 33       	cpi	r23, 0x30	; 48
 d4e:	11 f4       	brne	.+4      	; 0xd54 <__ftoa_engine+0x130>
 d50:	8a 95       	dec	r24
 d52:	e6 cf       	rjmp	.-52     	; 0xd20 <__ftoa_engine+0xfc>
 d54:	e8 94       	clt
 d56:	01 50       	subi	r16, 0x01	; 1
 d58:	30 f0       	brcs	.+12     	; 0xd66 <__ftoa_engine+0x142>
 d5a:	08 0f       	add	r16, r24
 d5c:	0a f4       	brpl	.+2      	; 0xd60 <__ftoa_engine+0x13c>
 d5e:	00 27       	eor	r16, r16
 d60:	02 17       	cp	r16, r18
 d62:	08 f4       	brcc	.+2      	; 0xd66 <__ftoa_engine+0x142>
 d64:	20 2f       	mov	r18, r16
 d66:	23 95       	inc	r18
 d68:	02 2f       	mov	r16, r18
 d6a:	7a 33       	cpi	r23, 0x3A	; 58
 d6c:	28 f0       	brcs	.+10     	; 0xd78 <__ftoa_engine+0x154>
 d6e:	79 e3       	ldi	r23, 0x39	; 57
 d70:	7d 93       	st	X+, r23
 d72:	2a 95       	dec	r18
 d74:	e9 f7       	brne	.-6      	; 0xd70 <__ftoa_engine+0x14c>
 d76:	10 c0       	rjmp	.+32     	; 0xd98 <__ftoa_engine+0x174>
 d78:	7d 93       	st	X+, r23
 d7a:	2a 95       	dec	r18
 d7c:	89 f6       	brne	.-94     	; 0xd20 <__ftoa_engine+0xfc>
 d7e:	06 94       	lsr	r0
 d80:	97 95       	ror	r25
 d82:	67 95       	ror	r22
 d84:	37 95       	ror	r19
 d86:	17 95       	ror	r17
 d88:	17 94       	ror	r1
 d8a:	e1 18       	sub	r14, r1
 d8c:	f1 0a       	sbc	r15, r17
 d8e:	43 0b       	sbc	r20, r19
 d90:	56 0b       	sbc	r21, r22
 d92:	c9 0b       	sbc	r28, r25
 d94:	d0 09       	sbc	r29, r0
 d96:	98 f0       	brcs	.+38     	; 0xdbe <__ftoa_engine+0x19a>
 d98:	23 95       	inc	r18
 d9a:	7e 91       	ld	r23, -X
 d9c:	73 95       	inc	r23
 d9e:	7a 33       	cpi	r23, 0x3A	; 58
 da0:	08 f0       	brcs	.+2      	; 0xda4 <__ftoa_engine+0x180>
 da2:	70 e3       	ldi	r23, 0x30	; 48
 da4:	7c 93       	st	X, r23
 da6:	20 13       	cpse	r18, r16
 da8:	b8 f7       	brcc	.-18     	; 0xd98 <__ftoa_engine+0x174>
 daa:	7e 91       	ld	r23, -X
 dac:	70 61       	ori	r23, 0x10	; 16
 dae:	7d 93       	st	X+, r23
 db0:	30 f0       	brcs	.+12     	; 0xdbe <__ftoa_engine+0x19a>
 db2:	83 95       	inc	r24
 db4:	71 e3       	ldi	r23, 0x31	; 49
 db6:	7d 93       	st	X+, r23
 db8:	70 e3       	ldi	r23, 0x30	; 48
 dba:	2a 95       	dec	r18
 dbc:	e1 f7       	brne	.-8      	; 0xdb6 <__ftoa_engine+0x192>
 dbe:	11 24       	eor	r1, r1
 dc0:	ef 90       	pop	r14
 dc2:	ff 90       	pop	r15
 dc4:	0f 91       	pop	r16
 dc6:	1f 91       	pop	r17
 dc8:	cf 91       	pop	r28
 dca:	df 91       	pop	r29
 dcc:	99 27       	eor	r25, r25
 dce:	87 fd       	sbrc	r24, 7
 dd0:	90 95       	com	r25
 dd2:	08 95       	ret

00000dd4 <strrev>:
 dd4:	dc 01       	movw	r26, r24
 dd6:	fc 01       	movw	r30, r24
 dd8:	67 2f       	mov	r22, r23
 dda:	71 91       	ld	r23, Z+
 ddc:	77 23       	and	r23, r23
 dde:	e1 f7       	brne	.-8      	; 0xdd8 <strrev+0x4>
 de0:	32 97       	sbiw	r30, 0x02	; 2
 de2:	04 c0       	rjmp	.+8      	; 0xdec <strrev+0x18>
 de4:	7c 91       	ld	r23, X
 de6:	6d 93       	st	X+, r22
 de8:	70 83       	st	Z, r23
 dea:	62 91       	ld	r22, -Z
 dec:	ae 17       	cp	r26, r30
 dee:	bf 07       	cpc	r27, r31
 df0:	c8 f3       	brcs	.-14     	; 0xde4 <strrev+0x10>
 df2:	08 95       	ret

00000df4 <__prologue_saves__>:
 df4:	2f 92       	push	r2
 df6:	3f 92       	push	r3
 df8:	4f 92       	push	r4
 dfa:	5f 92       	push	r5
 dfc:	6f 92       	push	r6
 dfe:	7f 92       	push	r7
 e00:	8f 92       	push	r8
 e02:	9f 92       	push	r9
 e04:	af 92       	push	r10
 e06:	bf 92       	push	r11
 e08:	cf 92       	push	r12
 e0a:	df 92       	push	r13
 e0c:	ef 92       	push	r14
 e0e:	ff 92       	push	r15
 e10:	0f 93       	push	r16
 e12:	1f 93       	push	r17
 e14:	cf 93       	push	r28
 e16:	df 93       	push	r29
 e18:	cd b7       	in	r28, 0x3d	; 61
 e1a:	de b7       	in	r29, 0x3e	; 62
 e1c:	ca 1b       	sub	r28, r26
 e1e:	db 0b       	sbc	r29, r27
 e20:	0f b6       	in	r0, 0x3f	; 63
 e22:	f8 94       	cli
 e24:	de bf       	out	0x3e, r29	; 62
 e26:	0f be       	out	0x3f, r0	; 63
 e28:	cd bf       	out	0x3d, r28	; 61
 e2a:	09 94       	ijmp

00000e2c <__epilogue_restores__>:
 e2c:	2a 88       	ldd	r2, Y+18	; 0x12
 e2e:	39 88       	ldd	r3, Y+17	; 0x11
 e30:	48 88       	ldd	r4, Y+16	; 0x10
 e32:	5f 84       	ldd	r5, Y+15	; 0x0f
 e34:	6e 84       	ldd	r6, Y+14	; 0x0e
 e36:	7d 84       	ldd	r7, Y+13	; 0x0d
 e38:	8c 84       	ldd	r8, Y+12	; 0x0c
 e3a:	9b 84       	ldd	r9, Y+11	; 0x0b
 e3c:	aa 84       	ldd	r10, Y+10	; 0x0a
 e3e:	b9 84       	ldd	r11, Y+9	; 0x09
 e40:	c8 84       	ldd	r12, Y+8	; 0x08
 e42:	df 80       	ldd	r13, Y+7	; 0x07
 e44:	ee 80       	ldd	r14, Y+6	; 0x06
 e46:	fd 80       	ldd	r15, Y+5	; 0x05
 e48:	0c 81       	ldd	r16, Y+4	; 0x04
 e4a:	1b 81       	ldd	r17, Y+3	; 0x03
 e4c:	aa 81       	ldd	r26, Y+2	; 0x02
 e4e:	b9 81       	ldd	r27, Y+1	; 0x01
 e50:	ce 0f       	add	r28, r30
 e52:	d1 1d       	adc	r29, r1
 e54:	0f b6       	in	r0, 0x3f	; 63
 e56:	f8 94       	cli
 e58:	de bf       	out	0x3e, r29	; 62
 e5a:	0f be       	out	0x3f, r0	; 63
 e5c:	cd bf       	out	0x3d, r28	; 61
 e5e:	ed 01       	movw	r28, r26
 e60:	08 95       	ret

00000e62 <_exit>:
 e62:	f8 94       	cli

00000e64 <__stop_program>:
 e64:	ff cf       	rjmp	.-2      	; 0xe64 <__stop_program>
