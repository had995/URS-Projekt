
Main_app.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000e3a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000016  00800060  00000e3a  00000ece  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000014  00800076  00800076  00000ee4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000ee4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000f14  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  00000f50  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001501  00000000  00000000  00001038  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000918  00000000  00000000  00002539  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ad3  00000000  00000000  00002e51  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000024c  00000000  00000000  00003924  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000054e  00000000  00000000  00003b70  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d6b  00000000  00000000  000040be  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f0  00000000  00000000  00004e29  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
   4:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
   8:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
   c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  18:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  1c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  20:	0c 94 5f 02 	jmp	0x4be	; 0x4be <__vector_8>
  24:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  2c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  38:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  4c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>

00000054 <__trampolines_end>:
  54:	00 40       	sbci	r16, 0x00	; 0
  56:	7a 10       	cpse	r7, r10
  58:	f3 5a       	subi	r31, 0xA3	; 163
  5a:	00 a0       	ldd	r0, Z+32	; 0x20
  5c:	72 4e       	sbci	r23, 0xE2	; 226
  5e:	18 09       	sbc	r17, r8
  60:	00 10       	cpse	r0, r0
  62:	a5 d4       	rcall	.+2378   	; 0x9ae <dtoa_prf+0x6a>
  64:	e8 00       	.word	0x00e8	; ????
  66:	00 e8       	ldi	r16, 0x80	; 128
  68:	76 48       	sbci	r23, 0x86	; 134
  6a:	17 00       	.word	0x0017	; ????
  6c:	00 e4       	ldi	r16, 0x40	; 64
  6e:	0b 54       	subi	r16, 0x4B	; 75
  70:	02 00       	.word	0x0002	; ????
  72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
  74:	9a 3b       	cpi	r25, 0xBA	; 186
  76:	00 00       	nop
  78:	00 e1       	ldi	r16, 0x10	; 16
  7a:	f5 05       	cpc	r31, r5
  7c:	00 00       	nop
  7e:	80 96       	adiw	r24, 0x20	; 32
  80:	98 00       	.word	0x0098	; ????
  82:	00 00       	nop
  84:	40 42       	sbci	r20, 0x20	; 32
  86:	0f 00       	.word	0x000f	; ????
  88:	00 00       	nop
  8a:	a0 86       	std	Z+8, r10	; 0x08
  8c:	01 00       	.word	0x0001	; ????
  8e:	00 00       	nop
  90:	10 27       	eor	r17, r16
  92:	00 00       	nop
  94:	00 00       	nop
  96:	e8 03       	fmulsu	r22, r16
  98:	00 00       	nop
  9a:	00 00       	nop
  9c:	64 00       	.word	0x0064	; ????
  9e:	00 00       	nop
  a0:	00 00       	nop
  a2:	0a 00       	.word	0x000a	; ????
  a4:	00 00       	nop
  a6:	00 00       	nop
  a8:	01 00       	.word	0x0001	; ????
  aa:	00 00       	nop
  ac:	00 00       	nop
  ae:	2c 76       	andi	r18, 0x6C	; 108
  b0:	d8 88       	ldd	r13, Y+16	; 0x10
  b2:	dc 67       	ori	r29, 0x7C	; 124
  b4:	4f 08       	sbc	r4, r15
  b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
  b8:	c1 df       	rcall	.-126    	; 0x3c <__FUSE_REGION_LENGTH__+0x3a>
  ba:	ae 59       	subi	r26, 0x9E	; 158
  bc:	e1 b1       	in	r30, 0x01	; 1
  be:	b7 96       	adiw	r30, 0x27	; 39
  c0:	e5 e3       	ldi	r30, 0x35	; 53
  c2:	e4 53       	subi	r30, 0x34	; 52
  c4:	c6 3a       	cpi	r28, 0xA6	; 166
  c6:	e6 51       	subi	r30, 0x16	; 22
  c8:	99 76       	andi	r25, 0x69	; 105
  ca:	96 e8       	ldi	r25, 0x86	; 134
  cc:	e6 c2       	rjmp	.+1484   	; 0x69a <main+0x3c>
  ce:	84 26       	eor	r8, r20
  d0:	eb 89       	ldd	r30, Y+19	; 0x13
  d2:	8c 9b       	sbis	0x11, 4	; 17
  d4:	62 ed       	ldi	r22, 0xD2	; 210
  d6:	40 7c       	andi	r20, 0xC0	; 192
  d8:	6f fc       	.word	0xfc6f	; ????
  da:	ef bc       	out	0x2f, r14	; 47
  dc:	9c 9f       	mul	r25, r28
  de:	40 f2       	brcs	.-112    	; 0x70 <__trampolines_end+0x1c>
  e0:	ba a5       	ldd	r27, Y+42	; 0x2a
  e2:	6f a5       	ldd	r22, Y+47	; 0x2f
  e4:	f4 90       	lpm	r15, Z
  e6:	05 5a       	subi	r16, 0xA5	; 165
  e8:	2a f7       	brpl	.-54     	; 0xb4 <__trampolines_end+0x60>
  ea:	5c 93       	st	X, r21
  ec:	6b 6c       	ori	r22, 0xCB	; 203
  ee:	f9 67       	ori	r31, 0x79	; 121
  f0:	6d c1       	rjmp	.+730    	; 0x3cc <rotate_clockwise+0x9c>
  f2:	1b fc       	.word	0xfc1b	; ????
  f4:	e0 e4       	ldi	r30, 0x40	; 64
  f6:	0d 47       	sbci	r16, 0x7D	; 125
  f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
  fa:	20 e6       	ldi	r18, 0x60	; 96
  fc:	b5 00       	.word	0x00b5	; ????
  fe:	d0 ed       	ldi	r29, 0xD0	; 208
 100:	90 2e       	mov	r9, r16
 102:	03 00       	.word	0x0003	; ????
 104:	94 35       	cpi	r25, 0x54	; 84
 106:	77 05       	cpc	r23, r7
 108:	00 80       	ld	r0, Z
 10a:	84 1e       	adc	r8, r20
 10c:	08 00       	.word	0x0008	; ????
 10e:	00 20       	and	r0, r0
 110:	4e 0a       	sbc	r4, r30
 112:	00 00       	nop
 114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
 116:	0c 33       	cpi	r16, 0x3C	; 60
 118:	33 33       	cpi	r19, 0x33	; 51
 11a:	33 0f       	add	r19, r19
 11c:	98 6e       	ori	r25, 0xE8	; 232
 11e:	12 83       	std	Z+2, r17	; 0x02
 120:	11 41       	sbci	r17, 0x11	; 17
 122:	ef 8d       	ldd	r30, Y+31	; 0x1f
 124:	21 14       	cp	r2, r1
 126:	89 3b       	cpi	r24, 0xB9	; 185
 128:	e6 55       	subi	r30, 0x56	; 86
 12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
 12c:	fe e6       	ldi	r31, 0x6E	; 110
 12e:	db 18       	sub	r13, r11
 130:	d1 84       	ldd	r13, Z+9	; 0x09
 132:	4b 38       	cpi	r20, 0x8B	; 139
 134:	1b f7       	brvc	.-58     	; 0xfc <__trampolines_end+0xa8>
 136:	7c 1d       	adc	r23, r12
 138:	90 1d       	adc	r25, r0
 13a:	a4 bb       	out	0x14, r26	; 20
 13c:	e4 24       	eor	r14, r4
 13e:	20 32       	cpi	r18, 0x20	; 32
 140:	84 72       	andi	r24, 0x24	; 36
 142:	5e 22       	and	r5, r30
 144:	81 00       	.word	0x0081	; ????
 146:	c9 f1       	breq	.+114    	; 0x1ba <lcd_write+0x26>
 148:	24 ec       	ldi	r18, 0xC4	; 196
 14a:	a1 e5       	ldi	r26, 0x51	; 81
 14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
 14e:	11 24       	eor	r1, r1
 150:	1f be       	out	0x3f, r1	; 63
 152:	cf e5       	ldi	r28, 0x5F	; 95
 154:	d4 e0       	ldi	r29, 0x04	; 4
 156:	de bf       	out	0x3e, r29	; 62
 158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
 15a:	10 e0       	ldi	r17, 0x00	; 0
 15c:	a0 e6       	ldi	r26, 0x60	; 96
 15e:	b0 e0       	ldi	r27, 0x00	; 0
 160:	ea e3       	ldi	r30, 0x3A	; 58
 162:	fe e0       	ldi	r31, 0x0E	; 14
 164:	02 c0       	rjmp	.+4      	; 0x16a <__do_copy_data+0x10>
 166:	05 90       	lpm	r0, Z+
 168:	0d 92       	st	X+, r0
 16a:	a6 37       	cpi	r26, 0x76	; 118
 16c:	b1 07       	cpc	r27, r17
 16e:	d9 f7       	brne	.-10     	; 0x166 <__do_copy_data+0xc>

00000170 <__do_clear_bss>:
 170:	20 e0       	ldi	r18, 0x00	; 0
 172:	a6 e7       	ldi	r26, 0x76	; 118
 174:	b0 e0       	ldi	r27, 0x00	; 0
 176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
 178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
 17a:	aa 38       	cpi	r26, 0x8A	; 138
 17c:	b2 07       	cpc	r27, r18
 17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
 180:	0e 94 2f 03 	call	0x65e	; 0x65e <main>
 184:	0c 94 1b 07 	jmp	0xe36	; 0xe36 <_exit>

00000188 <__bad_interrupt>:
 188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <toggle_e>:

/* init of a stepper motor pins */

void STEPPER_Init(){
	
	DDRB = 0x0F; /* Make PORTB lower pins as output */
 18c:	ae 9a       	sbi	0x15, 6	; 21
 18e:	00 c0       	rjmp	.+0      	; 0x190 <toggle_e+0x4>
 190:	ae 98       	cbi	0x15, 6	; 21
 192:	08 95       	ret

00000194 <lcd_write>:
 194:	cf 93       	push	r28
 196:	c8 2f       	mov	r28, r24
 198:	66 23       	and	r22, r22
 19a:	11 f0       	breq	.+4      	; 0x1a0 <lcd_write+0xc>
 19c:	a8 9a       	sbi	0x15, 0	; 21
 19e:	01 c0       	rjmp	.+2      	; 0x1a2 <lcd_write+0xe>
 1a0:	a8 98       	cbi	0x15, 0	; 21
 1a2:	a9 98       	cbi	0x15, 1	; 21
 1a4:	bc 9a       	sbi	0x17, 4	; 23
 1a6:	bd 9a       	sbi	0x17, 5	; 23
 1a8:	be 9a       	sbi	0x17, 6	; 23
 1aa:	bf 9a       	sbi	0x17, 7	; 23
 1ac:	c7 98       	cbi	0x18, 7	; 24
 1ae:	c6 98       	cbi	0x18, 6	; 24
 1b0:	c5 98       	cbi	0x18, 5	; 24
 1b2:	c4 98       	cbi	0x18, 4	; 24
 1b4:	cc 23       	and	r28, r28
 1b6:	0c f4       	brge	.+2      	; 0x1ba <lcd_write+0x26>
 1b8:	c7 9a       	sbi	0x18, 7	; 24
 1ba:	c6 fd       	sbrc	r28, 6
 1bc:	c6 9a       	sbi	0x18, 6	; 24
 1be:	c5 fd       	sbrc	r28, 5
 1c0:	c5 9a       	sbi	0x18, 5	; 24
 1c2:	c4 fd       	sbrc	r28, 4
 1c4:	c4 9a       	sbi	0x18, 4	; 24
 1c6:	0e 94 c6 00 	call	0x18c	; 0x18c <toggle_e>
 1ca:	c7 98       	cbi	0x18, 7	; 24
 1cc:	c6 98       	cbi	0x18, 6	; 24
 1ce:	c5 98       	cbi	0x18, 5	; 24
 1d0:	c4 98       	cbi	0x18, 4	; 24
 1d2:	c3 fd       	sbrc	r28, 3
 1d4:	c7 9a       	sbi	0x18, 7	; 24
 1d6:	c2 fd       	sbrc	r28, 2
 1d8:	c6 9a       	sbi	0x18, 6	; 24
 1da:	c1 fd       	sbrc	r28, 1
 1dc:	c5 9a       	sbi	0x18, 5	; 24
 1de:	c0 fd       	sbrc	r28, 0
 1e0:	c4 9a       	sbi	0x18, 4	; 24
 1e2:	0e 94 c6 00 	call	0x18c	; 0x18c <toggle_e>
 1e6:	c4 9a       	sbi	0x18, 4	; 24
 1e8:	c5 9a       	sbi	0x18, 5	; 24
 1ea:	c6 9a       	sbi	0x18, 6	; 24
 1ec:	c7 9a       	sbi	0x18, 7	; 24
 1ee:	cf 91       	pop	r28
 1f0:	08 95       	ret

000001f2 <lcd_read>:
 1f2:	88 23       	and	r24, r24
 1f4:	11 f0       	breq	.+4      	; 0x1fa <lcd_read+0x8>
 1f6:	a8 9a       	sbi	0x15, 0	; 21
 1f8:	01 c0       	rjmp	.+2      	; 0x1fc <lcd_read+0xa>
 1fa:	a8 98       	cbi	0x15, 0	; 21
 1fc:	a9 9a       	sbi	0x15, 1	; 21
 1fe:	bc 98       	cbi	0x17, 4	; 23
 200:	bd 98       	cbi	0x17, 5	; 23
 202:	be 98       	cbi	0x17, 6	; 23
 204:	bf 98       	cbi	0x17, 7	; 23
 206:	ae 9a       	sbi	0x15, 6	; 21
 208:	00 c0       	rjmp	.+0      	; 0x20a <lcd_read+0x18>
 20a:	b4 9b       	sbis	0x16, 4	; 22
 20c:	02 c0       	rjmp	.+4      	; 0x212 <lcd_read+0x20>
 20e:	80 e1       	ldi	r24, 0x10	; 16
 210:	01 c0       	rjmp	.+2      	; 0x214 <lcd_read+0x22>
 212:	80 e0       	ldi	r24, 0x00	; 0
 214:	b5 99       	sbic	0x16, 5	; 22
 216:	80 62       	ori	r24, 0x20	; 32
 218:	b6 99       	sbic	0x16, 6	; 22
 21a:	80 64       	ori	r24, 0x40	; 64
 21c:	b7 99       	sbic	0x16, 7	; 22
 21e:	80 68       	ori	r24, 0x80	; 128
 220:	ae 98       	cbi	0x15, 6	; 21
 222:	00 c0       	rjmp	.+0      	; 0x224 <lcd_read+0x32>
 224:	ae 9a       	sbi	0x15, 6	; 21
 226:	00 c0       	rjmp	.+0      	; 0x228 <lcd_read+0x36>
 228:	b4 99       	sbic	0x16, 4	; 22
 22a:	81 60       	ori	r24, 0x01	; 1
 22c:	b5 99       	sbic	0x16, 5	; 22
 22e:	82 60       	ori	r24, 0x02	; 2
 230:	b6 99       	sbic	0x16, 6	; 22
 232:	84 60       	ori	r24, 0x04	; 4
 234:	b7 99       	sbic	0x16, 7	; 22
 236:	88 60       	ori	r24, 0x08	; 8
 238:	ae 98       	cbi	0x15, 6	; 21
 23a:	08 95       	ret

0000023c <lcd_waitbusy>:
 23c:	80 e0       	ldi	r24, 0x00	; 0
 23e:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <lcd_read>
 242:	88 23       	and	r24, r24
 244:	dc f3       	brlt	.-10     	; 0x23c <lcd_waitbusy>
 246:	83 e0       	ldi	r24, 0x03	; 3
 248:	90 e0       	ldi	r25, 0x00	; 0
 24a:	01 97       	sbiw	r24, 0x01	; 1
 24c:	f1 f7       	brne	.-4      	; 0x24a <lcd_waitbusy+0xe>
 24e:	80 e0       	ldi	r24, 0x00	; 0
 250:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <lcd_read>
 254:	08 95       	ret

00000256 <lcd_command>:
 256:	cf 93       	push	r28
 258:	c8 2f       	mov	r28, r24
 25a:	0e 94 1e 01 	call	0x23c	; 0x23c <lcd_waitbusy>
 25e:	60 e0       	ldi	r22, 0x00	; 0
 260:	8c 2f       	mov	r24, r28
 262:	0e 94 ca 00 	call	0x194	; 0x194 <lcd_write>
 266:	cf 91       	pop	r28
 268:	08 95       	ret

0000026a <lcd_clrscr>:
 26a:	81 e0       	ldi	r24, 0x01	; 1
 26c:	0e 94 2b 01 	call	0x256	; 0x256 <lcd_command>
 270:	08 95       	ret

00000272 <lcd_putc>:
 272:	cf 93       	push	r28
 274:	c8 2f       	mov	r28, r24
 276:	0e 94 1e 01 	call	0x23c	; 0x23c <lcd_waitbusy>
 27a:	ca 30       	cpi	r28, 0x0A	; 10
 27c:	49 f4       	brne	.+18     	; 0x290 <lcd_putc+0x1e>
 27e:	80 34       	cpi	r24, 0x40	; 64
 280:	10 f0       	brcs	.+4      	; 0x286 <lcd_putc+0x14>
 282:	80 e0       	ldi	r24, 0x00	; 0
 284:	01 c0       	rjmp	.+2      	; 0x288 <lcd_putc+0x16>
 286:	80 e4       	ldi	r24, 0x40	; 64
 288:	80 58       	subi	r24, 0x80	; 128
 28a:	0e 94 2b 01 	call	0x256	; 0x256 <lcd_command>
 28e:	04 c0       	rjmp	.+8      	; 0x298 <lcd_putc+0x26>
 290:	61 e0       	ldi	r22, 0x01	; 1
 292:	8c 2f       	mov	r24, r28
 294:	0e 94 ca 00 	call	0x194	; 0x194 <lcd_write>
 298:	cf 91       	pop	r28
 29a:	08 95       	ret

0000029c <lcd_puts>:
 29c:	cf 93       	push	r28
 29e:	df 93       	push	r29
 2a0:	ec 01       	movw	r28, r24
 2a2:	21 96       	adiw	r28, 0x01	; 1
 2a4:	fc 01       	movw	r30, r24
 2a6:	80 81       	ld	r24, Z
 2a8:	88 23       	and	r24, r24
 2aa:	29 f0       	breq	.+10     	; 0x2b6 <lcd_puts+0x1a>
 2ac:	0e 94 39 01 	call	0x272	; 0x272 <lcd_putc>
 2b0:	89 91       	ld	r24, Y+
 2b2:	81 11       	cpse	r24, r1
 2b4:	fb cf       	rjmp	.-10     	; 0x2ac <lcd_puts+0x10>
 2b6:	df 91       	pop	r29
 2b8:	cf 91       	pop	r28
 2ba:	08 95       	ret

000002bc <lcd_init>:
 2bc:	1f 93       	push	r17
 2be:	cf 93       	push	r28
 2c0:	df 93       	push	r29
 2c2:	18 2f       	mov	r17, r24
 2c4:	a0 9a       	sbi	0x14, 0	; 20
 2c6:	a1 9a       	sbi	0x14, 1	; 20
 2c8:	a6 9a       	sbi	0x14, 6	; 20
 2ca:	bc 9a       	sbi	0x17, 4	; 23
 2cc:	bd 9a       	sbi	0x17, 5	; 23
 2ce:	be 9a       	sbi	0x17, 6	; 23
 2d0:	bf 9a       	sbi	0x17, 7	; 23
 2d2:	80 e3       	ldi	r24, 0x30	; 48
 2d4:	93 e7       	ldi	r25, 0x73	; 115
 2d6:	01 97       	sbiw	r24, 0x01	; 1
 2d8:	f1 f7       	brne	.-4      	; 0x2d6 <lcd_init+0x1a>
 2da:	c5 9a       	sbi	0x18, 5	; 24
 2dc:	c4 9a       	sbi	0x18, 4	; 24
 2de:	0e 94 c6 00 	call	0x18c	; 0x18c <toggle_e>
 2e2:	80 ef       	ldi	r24, 0xF0	; 240
 2e4:	93 e2       	ldi	r25, 0x23	; 35
 2e6:	01 97       	sbiw	r24, 0x01	; 1
 2e8:	f1 f7       	brne	.-4      	; 0x2e6 <lcd_init+0x2a>
 2ea:	0e 94 c6 00 	call	0x18c	; 0x18c <toggle_e>
 2ee:	c5 e7       	ldi	r28, 0x75	; 117
 2f0:	d0 e0       	ldi	r29, 0x00	; 0
 2f2:	ce 01       	movw	r24, r28
 2f4:	01 97       	sbiw	r24, 0x01	; 1
 2f6:	f1 f7       	brne	.-4      	; 0x2f4 <lcd_init+0x38>
 2f8:	0e 94 c6 00 	call	0x18c	; 0x18c <toggle_e>
 2fc:	ce 01       	movw	r24, r28
 2fe:	01 97       	sbiw	r24, 0x01	; 1
 300:	f1 f7       	brne	.-4      	; 0x2fe <lcd_init+0x42>
 302:	c4 98       	cbi	0x18, 4	; 24
 304:	0e 94 c6 00 	call	0x18c	; 0x18c <toggle_e>
 308:	21 97       	sbiw	r28, 0x01	; 1
 30a:	f1 f7       	brne	.-4      	; 0x308 <lcd_init+0x4c>
 30c:	88 e2       	ldi	r24, 0x28	; 40
 30e:	0e 94 2b 01 	call	0x256	; 0x256 <lcd_command>
 312:	88 e0       	ldi	r24, 0x08	; 8
 314:	0e 94 2b 01 	call	0x256	; 0x256 <lcd_command>
 318:	0e 94 35 01 	call	0x26a	; 0x26a <lcd_clrscr>
 31c:	86 e0       	ldi	r24, 0x06	; 6
 31e:	0e 94 2b 01 	call	0x256	; 0x256 <lcd_command>
 322:	81 2f       	mov	r24, r17
 324:	0e 94 2b 01 	call	0x256	; 0x256 <lcd_command>
 328:	df 91       	pop	r29
 32a:	cf 91       	pop	r28
 32c:	1f 91       	pop	r17
 32e:	08 95       	ret

00000330 <rotate_clockwise>:
// BLUE   - IN4 - OUT4	1	1	1	1	1	0	0	 0
// 4 --> NULTI PIN      07  03  0B  09  0D  0C  0E   06 (CLOCKWISE SEQUENCE)

void rotate_clockwise(){
	
	PORTB = 0x07;  //0111
 330:	87 e0       	ldi	r24, 0x07	; 7
 332:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 334:	88 b3       	in	r24, 0x18	; 24
 336:	80 95       	com	r24
 338:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 33a:	8f ef       	ldi	r24, 0xFF	; 255
 33c:	93 e2       	ldi	r25, 0x23	; 35
 33e:	01 97       	sbiw	r24, 0x01	; 1
 340:	f1 f7       	brne	.-4      	; 0x33e <rotate_clockwise+0xe>
 342:	00 c0       	rjmp	.+0      	; 0x344 <rotate_clockwise+0x14>
 344:	00 00       	nop
	_delay_ms(5);
	PORTB = 0x03;  //0011
 346:	83 e0       	ldi	r24, 0x03	; 3
 348:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 34a:	88 b3       	in	r24, 0x18	; 24
 34c:	80 95       	com	r24
 34e:	88 bb       	out	0x18, r24	; 24
 350:	8f ef       	ldi	r24, 0xFF	; 255
 352:	93 e2       	ldi	r25, 0x23	; 35
 354:	01 97       	sbiw	r24, 0x01	; 1
 356:	f1 f7       	brne	.-4      	; 0x354 <rotate_clockwise+0x24>
 358:	00 c0       	rjmp	.+0      	; 0x35a <rotate_clockwise+0x2a>
 35a:	00 00       	nop
	_delay_ms(5);
	PORTB = 0x0B;  //1011
 35c:	8b e0       	ldi	r24, 0x0B	; 11
 35e:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 360:	88 b3       	in	r24, 0x18	; 24
 362:	80 95       	com	r24
 364:	88 bb       	out	0x18, r24	; 24
 366:	8f ef       	ldi	r24, 0xFF	; 255
 368:	93 e2       	ldi	r25, 0x23	; 35
 36a:	01 97       	sbiw	r24, 0x01	; 1
 36c:	f1 f7       	brne	.-4      	; 0x36a <rotate_clockwise+0x3a>
 36e:	00 c0       	rjmp	.+0      	; 0x370 <rotate_clockwise+0x40>
 370:	00 00       	nop
	_delay_ms(5);
	PORTB = 0x09;
 372:	89 e0       	ldi	r24, 0x09	; 9
 374:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 376:	88 b3       	in	r24, 0x18	; 24
 378:	80 95       	com	r24
 37a:	88 bb       	out	0x18, r24	; 24
 37c:	8f ef       	ldi	r24, 0xFF	; 255
 37e:	93 e2       	ldi	r25, 0x23	; 35
 380:	01 97       	sbiw	r24, 0x01	; 1
 382:	f1 f7       	brne	.-4      	; 0x380 <rotate_clockwise+0x50>
 384:	00 c0       	rjmp	.+0      	; 0x386 <rotate_clockwise+0x56>
 386:	00 00       	nop
	_delay_ms(5);
	PORTB = 0x0D;
 388:	8d e0       	ldi	r24, 0x0D	; 13
 38a:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 38c:	88 b3       	in	r24, 0x18	; 24
 38e:	80 95       	com	r24
 390:	88 bb       	out	0x18, r24	; 24
 392:	8f ef       	ldi	r24, 0xFF	; 255
 394:	93 e2       	ldi	r25, 0x23	; 35
 396:	01 97       	sbiw	r24, 0x01	; 1
 398:	f1 f7       	brne	.-4      	; 0x396 <rotate_clockwise+0x66>
 39a:	00 c0       	rjmp	.+0      	; 0x39c <rotate_clockwise+0x6c>
 39c:	00 00       	nop
	_delay_ms(5);
	PORTB = 0x0C;
 39e:	8c e0       	ldi	r24, 0x0C	; 12
 3a0:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 3a2:	88 b3       	in	r24, 0x18	; 24
 3a4:	80 95       	com	r24
 3a6:	88 bb       	out	0x18, r24	; 24
 3a8:	8f ef       	ldi	r24, 0xFF	; 255
 3aa:	93 e2       	ldi	r25, 0x23	; 35
 3ac:	01 97       	sbiw	r24, 0x01	; 1
 3ae:	f1 f7       	brne	.-4      	; 0x3ac <rotate_clockwise+0x7c>
 3b0:	00 c0       	rjmp	.+0      	; 0x3b2 <rotate_clockwise+0x82>
 3b2:	00 00       	nop
	_delay_ms(5);
	PORTB = 0x0E;
 3b4:	8e e0       	ldi	r24, 0x0E	; 14
 3b6:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 3b8:	88 b3       	in	r24, 0x18	; 24
 3ba:	80 95       	com	r24
 3bc:	88 bb       	out	0x18, r24	; 24
 3be:	8f ef       	ldi	r24, 0xFF	; 255
 3c0:	93 e2       	ldi	r25, 0x23	; 35
 3c2:	01 97       	sbiw	r24, 0x01	; 1
 3c4:	f1 f7       	brne	.-4      	; 0x3c2 <rotate_clockwise+0x92>
 3c6:	00 c0       	rjmp	.+0      	; 0x3c8 <rotate_clockwise+0x98>
 3c8:	00 00       	nop
	_delay_ms(5);
	PORTB = 0x06;
 3ca:	86 e0       	ldi	r24, 0x06	; 6
 3cc:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 3ce:	88 b3       	in	r24, 0x18	; 24
 3d0:	80 95       	com	r24
 3d2:	88 bb       	out	0x18, r24	; 24
 3d4:	8f ef       	ldi	r24, 0xFF	; 255
 3d6:	93 e2       	ldi	r25, 0x23	; 35
 3d8:	01 97       	sbiw	r24, 0x01	; 1
 3da:	f1 f7       	brne	.-4      	; 0x3d8 <rotate_clockwise+0xa8>
 3dc:	00 c0       	rjmp	.+0      	; 0x3de <rotate_clockwise+0xae>
 3de:	00 00       	nop
 3e0:	08 95       	ret

000003e2 <rotate_anticlockwise>:
	_delay_ms(5);
}

void rotate_anticlockwise(){
	
	PORTB = 0x06;
 3e2:	86 e0       	ldi	r24, 0x06	; 6
 3e4:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 3e6:	88 b3       	in	r24, 0x18	; 24
 3e8:	80 95       	com	r24
 3ea:	88 bb       	out	0x18, r24	; 24
 3ec:	8f ef       	ldi	r24, 0xFF	; 255
 3ee:	93 e2       	ldi	r25, 0x23	; 35
 3f0:	01 97       	sbiw	r24, 0x01	; 1
 3f2:	f1 f7       	brne	.-4      	; 0x3f0 <rotate_anticlockwise+0xe>
 3f4:	00 c0       	rjmp	.+0      	; 0x3f6 <rotate_anticlockwise+0x14>
 3f6:	00 00       	nop
	_delay_ms(5);
	PORTB = 0x0E;
 3f8:	8e e0       	ldi	r24, 0x0E	; 14
 3fa:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 3fc:	88 b3       	in	r24, 0x18	; 24
 3fe:	80 95       	com	r24
 400:	88 bb       	out	0x18, r24	; 24
 402:	8f ef       	ldi	r24, 0xFF	; 255
 404:	93 e2       	ldi	r25, 0x23	; 35
 406:	01 97       	sbiw	r24, 0x01	; 1
 408:	f1 f7       	brne	.-4      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 40a:	00 c0       	rjmp	.+0      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 40c:	00 00       	nop
	_delay_ms(5);
	PORTB = 0x0C;
 40e:	8c e0       	ldi	r24, 0x0C	; 12
 410:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 412:	88 b3       	in	r24, 0x18	; 24
 414:	80 95       	com	r24
 416:	88 bb       	out	0x18, r24	; 24
 418:	8f ef       	ldi	r24, 0xFF	; 255
 41a:	93 e2       	ldi	r25, 0x23	; 35
 41c:	01 97       	sbiw	r24, 0x01	; 1
 41e:	f1 f7       	brne	.-4      	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 420:	00 c0       	rjmp	.+0      	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 422:	00 00       	nop
	_delay_ms(5);
	PORTB = 0x0D;
 424:	8d e0       	ldi	r24, 0x0D	; 13
 426:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 428:	88 b3       	in	r24, 0x18	; 24
 42a:	80 95       	com	r24
 42c:	88 bb       	out	0x18, r24	; 24
 42e:	8f ef       	ldi	r24, 0xFF	; 255
 430:	93 e2       	ldi	r25, 0x23	; 35
 432:	01 97       	sbiw	r24, 0x01	; 1
 434:	f1 f7       	brne	.-4      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 436:	00 c0       	rjmp	.+0      	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 438:	00 00       	nop
	_delay_ms(5);
	PORTB = 0x09;
 43a:	89 e0       	ldi	r24, 0x09	; 9
 43c:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 43e:	88 b3       	in	r24, 0x18	; 24
 440:	80 95       	com	r24
 442:	88 bb       	out	0x18, r24	; 24
 444:	8f ef       	ldi	r24, 0xFF	; 255
 446:	93 e2       	ldi	r25, 0x23	; 35
 448:	01 97       	sbiw	r24, 0x01	; 1
 44a:	f1 f7       	brne	.-4      	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 44c:	00 c0       	rjmp	.+0      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 44e:	00 00       	nop
	_delay_ms(5);
	PORTB = 0x0B;
 450:	8b e0       	ldi	r24, 0x0B	; 11
 452:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 454:	88 b3       	in	r24, 0x18	; 24
 456:	80 95       	com	r24
 458:	88 bb       	out	0x18, r24	; 24
 45a:	8f ef       	ldi	r24, 0xFF	; 255
 45c:	93 e2       	ldi	r25, 0x23	; 35
 45e:	01 97       	sbiw	r24, 0x01	; 1
 460:	f1 f7       	brne	.-4      	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 462:	00 c0       	rjmp	.+0      	; 0x464 <__stack+0x5>
 464:	00 00       	nop
	_delay_ms(5);
	PORTB = 0x03;
 466:	83 e0       	ldi	r24, 0x03	; 3
 468:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 46a:	88 b3       	in	r24, 0x18	; 24
 46c:	80 95       	com	r24
 46e:	88 bb       	out	0x18, r24	; 24
 470:	8f ef       	ldi	r24, 0xFF	; 255
 472:	93 e2       	ldi	r25, 0x23	; 35
 474:	01 97       	sbiw	r24, 0x01	; 1
 476:	f1 f7       	brne	.-4      	; 0x474 <__stack+0x15>
 478:	00 c0       	rjmp	.+0      	; 0x47a <__stack+0x1b>
 47a:	00 00       	nop
	_delay_ms(5);
	PORTB = 0x07;
 47c:	87 e0       	ldi	r24, 0x07	; 7
 47e:	88 bb       	out	0x18, r24	; 24
	PORTB = ~PORTB;
 480:	88 b3       	in	r24, 0x18	; 24
 482:	80 95       	com	r24
 484:	88 bb       	out	0x18, r24	; 24
 486:	8f ef       	ldi	r24, 0xFF	; 255
 488:	93 e2       	ldi	r25, 0x23	; 35
 48a:	01 97       	sbiw	r24, 0x01	; 1
 48c:	f1 f7       	brne	.-4      	; 0x48a <__stack+0x2b>
 48e:	00 c0       	rjmp	.+0      	; 0x490 <__stack+0x31>
 490:	00 00       	nop
 492:	08 95       	ret

00000494 <rotate_motors>:
	
}

/* using two values to determine direction of stepper rotation */

void rotate_motors(int value, int low_margin, int high_margin){
 494:	0f 93       	push	r16
 496:	1f 93       	push	r17
 498:	cf 93       	push	r28
 49a:	df 93       	push	r29
 49c:	ec 01       	movw	r28, r24
 49e:	8a 01       	movw	r16, r20
	
	if(value < low_margin){
 4a0:	86 17       	cp	r24, r22
 4a2:	97 07       	cpc	r25, r23
 4a4:	14 f4       	brge	.+4      	; 0x4aa <rotate_motors+0x16>
		
		rotate_clockwise();
 4a6:	0e 94 98 01 	call	0x330	; 0x330 <rotate_clockwise>
	}
	if(value > high_margin){
 4aa:	0c 17       	cp	r16, r28
 4ac:	1d 07       	cpc	r17, r29
 4ae:	14 f4       	brge	.+4      	; 0x4b4 <rotate_motors+0x20>
		
		rotate_anticlockwise();
 4b0:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <rotate_anticlockwise>
	}
	
 4b4:	df 91       	pop	r29
 4b6:	cf 91       	pop	r28
 4b8:	1f 91       	pop	r17
 4ba:	0f 91       	pop	r16
 4bc:	08 95       	ret

000004be <__vector_8>:
#define  high_margin    640 /* high margin for value of adc which spins motors */

int TimerOverflow = 0;

ISR(TIMER1_OVF_vect)
{
 4be:	1f 92       	push	r1
 4c0:	0f 92       	push	r0
 4c2:	0f b6       	in	r0, 0x3f	; 63
 4c4:	0f 92       	push	r0
 4c6:	11 24       	eor	r1, r1
 4c8:	8f 93       	push	r24
 4ca:	9f 93       	push	r25
	TimerOverflow++;	/* Increment Timer Overflow count */
 4cc:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <__data_end>
 4d0:	90 91 77 00 	lds	r25, 0x0077	; 0x800077 <__data_end+0x1>
 4d4:	01 96       	adiw	r24, 0x01	; 1
 4d6:	90 93 77 00 	sts	0x0077, r25	; 0x800077 <__data_end+0x1>
 4da:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <__data_end>
}
 4de:	9f 91       	pop	r25
 4e0:	8f 91       	pop	r24
 4e2:	0f 90       	pop	r0
 4e4:	0f be       	out	0x3f, r0	; 63
 4e6:	0f 90       	pop	r0
 4e8:	1f 90       	pop	r1
 4ea:	18 95       	reti

000004ec <writeLCD>:


void writeLCD(uint16_t adc) { 
 4ec:	0f 93       	push	r16
 4ee:	1f 93       	push	r17
 4f0:	cf 93       	push	r28
 4f2:	df 93       	push	r29
 4f4:	cd b7       	in	r28, 0x3d	; 61
 4f6:	de b7       	in	r29, 0x3e	; 62
 4f8:	60 97       	sbiw	r28, 0x10	; 16
 4fa:	0f b6       	in	r0, 0x3f	; 63
 4fc:	f8 94       	cli
 4fe:	de bf       	out	0x3e, r29	; 62
 500:	0f be       	out	0x3f, r0	; 63
 502:	cd bf       	out	0x3d, r28	; 61
 504:	8c 01       	movw	r16, r24
	lcd_clrscr();
 506:	0e 94 35 01 	call	0x26a	; 0x26a <lcd_clrscr>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 50a:	4a e0       	ldi	r20, 0x0A	; 10
 50c:	be 01       	movw	r22, r28
 50e:	6f 5f       	subi	r22, 0xFF	; 255
 510:	7f 4f       	sbci	r23, 0xFF	; 255
 512:	c8 01       	movw	r24, r16
 514:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__itoa_ncheck>
#endif
#if LCD_LINES==2
    if ( y==0 ) 
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE1+x);
    else
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE2+x);
 518:	80 ec       	ldi	r24, 0xC0	; 192
 51a:	0e 94 2b 01 	call	0x256	; 0x256 <lcd_command>

	char adcStr[16];
	itoa(adc, adcStr, 10);
	lcd_gotoxy(0,1);
	lcd_puts("ADC: ");
 51e:	80 e6       	ldi	r24, 0x60	; 96
 520:	90 e0       	ldi	r25, 0x00	; 0
 522:	0e 94 4e 01 	call	0x29c	; 0x29c <lcd_puts>
 526:	86 ec       	ldi	r24, 0xC6	; 198
 528:	0e 94 2b 01 	call	0x256	; 0x256 <lcd_command>
	lcd_gotoxy(6,1);
	lcd_puts(adcStr);
 52c:	ce 01       	movw	r24, r28
 52e:	01 96       	adiw	r24, 0x01	; 1
 530:	0e 94 4e 01 	call	0x29c	; 0x29c <lcd_puts>
 534:	8f ef       	ldi	r24, 0xFF	; 255
 536:	9f e8       	ldi	r25, 0x8F	; 143
 538:	01 97       	sbiw	r24, 0x01	; 1
 53a:	f1 f7       	brne	.-4      	; 0x538 <writeLCD+0x4c>
 53c:	00 c0       	rjmp	.+0      	; 0x53e <writeLCD+0x52>
 53e:	00 00       	nop
	
	_delay_ms(20);
}
 540:	60 96       	adiw	r28, 0x10	; 16
 542:	0f b6       	in	r0, 0x3f	; 63
 544:	f8 94       	cli
 546:	de bf       	out	0x3e, r29	; 62
 548:	0f be       	out	0x3f, r0	; 63
 54a:	cd bf       	out	0x3d, r28	; 61
 54c:	df 91       	pop	r29
 54e:	cf 91       	pop	r28
 550:	1f 91       	pop	r17
 552:	0f 91       	pop	r16
 554:	08 95       	ret

00000556 <ADC_Init>:


void ADC_Init()
{
	DDRA=0x00;			/* Make ADC port as input */
 556:	1a ba       	out	0x1a, r1	; 26
	ADCSRA = 0x87;		/* Enable ADC, fr/128  */
 558:	87 e8       	ldi	r24, 0x87	; 135
 55a:	86 b9       	out	0x06, r24	; 6
	ADMUX = 0x40;		/* Vref: Avcc, ADC channel: 0 */
 55c:	80 e4       	ldi	r24, 0x40	; 64
 55e:	87 b9       	out	0x07, r24	; 7
 560:	08 95       	ret

00000562 <ADC_Read>:

int ADC_Read(char channel)
{
	int Ain,AinLow;
	
	ADMUX=ADMUX|(channel & 0x0f);	/* Set input channel to read */
 562:	97 b1       	in	r25, 0x07	; 7
 564:	8f 70       	andi	r24, 0x0F	; 15
 566:	98 2b       	or	r25, r24
 568:	97 b9       	out	0x07, r25	; 7

	ADCSRA |= (1<<ADSC);		/* Start conversion */
 56a:	36 9a       	sbi	0x06, 6	; 6
	while((ADCSRA&(1<<ADIF))==0);	/* Monitor end of conversion interrupt */
 56c:	34 9b       	sbis	0x06, 4	; 6
 56e:	fe cf       	rjmp	.-4      	; 0x56c <ADC_Read+0xa>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 570:	88 e1       	ldi	r24, 0x18	; 24
 572:	8a 95       	dec	r24
 574:	f1 f7       	brne	.-4      	; 0x572 <ADC_Read+0x10>
 576:	00 c0       	rjmp	.+0      	; 0x578 <ADC_Read+0x16>
	
	_delay_us(10);
	AinLow = (int)ADCL;		/* Read lower byte*/
 578:	24 b1       	in	r18, 0x04	; 4
	Ain = (int)ADCH*256;		/* Read higher 2 bits and 
 57a:	85 b1       	in	r24, 0x05	; 5
 57c:	90 e0       	ldi	r25, 0x00	; 0
 57e:	98 2f       	mov	r25, r24
 580:	88 27       	eor	r24, r24
					Multiply with weight */
	Ain = Ain + AinLow;				
	return(Ain);			/* Return digital value*/
}
 582:	82 0f       	add	r24, r18
 584:	91 1d       	adc	r25, r1
 586:	08 95       	ret

00000588 <mesure_distance>:


double mesure_distance(){
	
	/* Give 10us trigger pulse on trig. pin to HC-SR04 */
	PORTD |= (1 << Trigger_pin);
 588:	90 9a       	sbi	0x12, 0	; 18
 58a:	88 e1       	ldi	r24, 0x18	; 24
 58c:	8a 95       	dec	r24
 58e:	f1 f7       	brne	.-4      	; 0x58c <mesure_distance+0x4>
 590:	00 c0       	rjmp	.+0      	; 0x592 <mesure_distance+0xa>
	_delay_us(10);
	PORTD &= (~(1 << Trigger_pin));
 592:	90 98       	cbi	0x12, 0	; 18
	
	TCNT1 = 0;	/* Clear Timer counter */
 594:	1d bc       	out	0x2d, r1	; 45
 596:	1c bc       	out	0x2c, r1	; 44
	TCCR1B = 0x41;	/* Capture on rising edge, No prescaler*/
 598:	81 e4       	ldi	r24, 0x41	; 65
 59a:	8e bd       	out	0x2e, r24	; 46
	TIFR = (1<<ICF1);	/* Clear ICP flag (Input Capture flag) */
 59c:	80 e2       	ldi	r24, 0x20	; 32
 59e:	88 bf       	out	0x38, r24	; 56
	TIFR = (1<<TOV1);	/* Clear Timer Overflow flag */
 5a0:	84 e0       	ldi	r24, 0x04	; 4
 5a2:	88 bf       	out	0x38, r24	; 56

	/*Calculate width of Echo by Input Capture (ICP) */
	
	while ((TIFR & (1 << ICF1)) == 0);/* Wait for rising edge */
 5a4:	08 b6       	in	r0, 0x38	; 56
 5a6:	05 fe       	sbrs	r0, 5
 5a8:	fd cf       	rjmp	.-6      	; 0x5a4 <mesure_distance+0x1c>
	TCNT1 = 0;	/* Clear Timer counter */
 5aa:	1d bc       	out	0x2d, r1	; 45
 5ac:	1c bc       	out	0x2c, r1	; 44
	TCCR1B = 0x01;	/* Capture on falling edge, No prescaler */
 5ae:	81 e0       	ldi	r24, 0x01	; 1
 5b0:	8e bd       	out	0x2e, r24	; 46
	TIFR = 1<<ICF1;	/* Clear ICP flag (Input Capture flag) */
 5b2:	80 e2       	ldi	r24, 0x20	; 32
 5b4:	88 bf       	out	0x38, r24	; 56
	TIFR = 1<<TOV1;	/* Clear Timer Overflow flag */
 5b6:	84 e0       	ldi	r24, 0x04	; 4
 5b8:	88 bf       	out	0x38, r24	; 56
	TimerOverflow = 0;/* Clear Timer overflow count */
 5ba:	10 92 77 00 	sts	0x0077, r1	; 0x800077 <__data_end+0x1>
 5be:	10 92 76 00 	sts	0x0076, r1	; 0x800076 <__data_end>

	while ((TIFR & (1 << ICF1)) == 0);/* Wait for falling edge */
 5c2:	08 b6       	in	r0, 0x38	; 56
 5c4:	05 fe       	sbrs	r0, 5
 5c6:	fd cf       	rjmp	.-6      	; 0x5c2 <mesure_distance+0x3a>
	count = ICR1 + (65535 * TimerOverflow);	/*When a capture is triggered according to the ICES1 setting, 
 5c8:	66 b5       	in	r22, 0x26	; 38
 5ca:	77 b5       	in	r23, 0x27	; 39
 5cc:	80 e0       	ldi	r24, 0x00	; 0
 5ce:	90 e0       	ldi	r25, 0x00	; 0
 5d0:	60 93 86 00 	sts	0x0086, r22	; 0x800086 <count>
 5d4:	70 93 87 00 	sts	0x0087, r23	; 0x800087 <count+0x1>
 5d8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <count+0x2>
 5dc:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <count+0x3>
											the counter value is copied into the Input Capture Register (ICR1).
											The event will also set the Input Capture Flag (ICF1), and this
											can be used to cause an Input Capture Interrupt, if this interrupt is enabled. */
	/* 7372800 MHz Timer freq, 0.136us time for one instruction, sound speed =343 m/s, 34300 cm/s */
	/* distance = speed * time / 2 */
	distance = (double)count / 428.67;
 5e0:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <__floatsisf>
 5e4:	23 ec       	ldi	r18, 0xC3	; 195
 5e6:	35 e5       	ldi	r19, 0x55	; 85
 5e8:	46 ed       	ldi	r20, 0xD6	; 214
 5ea:	53 e4       	ldi	r21, 0x43	; 67
 5ec:	0e 94 5d 03 	call	0x6ba	; 0x6ba <__divsf3>
 5f0:	60 93 82 00 	sts	0x0082, r22	; 0x800082 <distance>
 5f4:	70 93 83 00 	sts	0x0083, r23	; 0x800083 <distance+0x1>
 5f8:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <distance+0x2>
 5fc:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <distance+0x3>
	
	return distance;
}
 600:	08 95       	ret

00000602 <distance_to_string>:

	void distance_to_string(double distance){
 602:	0f 93       	push	r16
 604:	1f 93       	push	r17
		
		dtostrf(distance, 2, 2, string);/* distance to string */
 606:	08 e7       	ldi	r16, 0x78	; 120
 608:	10 e0       	ldi	r17, 0x00	; 0
 60a:	22 e0       	ldi	r18, 0x02	; 2
 60c:	42 e0       	ldi	r20, 0x02	; 2
 60e:	0e 94 5d 04 	call	0x8ba	; 0x8ba <dtostrf>
		strcat(string, " cm   ");	/* Concat unit i.e.cm */
 612:	d8 01       	movw	r26, r16
 614:	0d 90       	ld	r0, X+
 616:	00 20       	and	r0, r0
 618:	e9 f7       	brne	.-6      	; 0x614 <distance_to_string+0x12>
 61a:	11 97       	sbiw	r26, 0x01	; 1
 61c:	87 e0       	ldi	r24, 0x07	; 7
 61e:	e6 e6       	ldi	r30, 0x66	; 102
 620:	f0 e0       	ldi	r31, 0x00	; 0
 622:	01 90       	ld	r0, Z+
 624:	0d 92       	st	X+, r0
 626:	8a 95       	dec	r24
 628:	e1 f7       	brne	.-8      	; 0x622 <distance_to_string+0x20>
		lcd_clrscr();
 62a:	0e 94 35 01 	call	0x26a	; 0x26a <lcd_clrscr>
		lcd_puts("Dist = ");
 62e:	8d e6       	ldi	r24, 0x6D	; 109
 630:	90 e0       	ldi	r25, 0x00	; 0
 632:	0e 94 4e 01 	call	0x29c	; 0x29c <lcd_puts>
		lcd_puts(string);	/* Print distance */
 636:	c8 01       	movw	r24, r16
 638:	0e 94 4e 01 	call	0x29c	; 0x29c <lcd_puts>
	}
 63c:	1f 91       	pop	r17
 63e:	0f 91       	pop	r16
 640:	08 95       	ret

00000642 <lcd_main_init>:
	
	void lcd_main_init(){
		DDRC = _BV(7);
 642:	80 e8       	ldi	r24, 0x80	; 128
 644:	84 bb       	out	0x14, r24	; 20

		TCCR1A = _BV(COM1B1) | _BV(WGM10);
 646:	81 e2       	ldi	r24, 0x21	; 33
 648:	8f bd       	out	0x2f, r24	; 47
		TCCR1B = _BV(WGM12) | _BV(CS11);
 64a:	8a e0       	ldi	r24, 0x0A	; 10
 64c:	8e bd       	out	0x2e, r24	; 46
		OCR1B = 14;
 64e:	8e e0       	ldi	r24, 0x0E	; 14
 650:	90 e0       	ldi	r25, 0x00	; 0
 652:	99 bd       	out	0x29, r25	; 41
 654:	88 bd       	out	0x28, r24	; 40

		lcd_init(LCD_DISP_ON);
 656:	8c e0       	ldi	r24, 0x0C	; 12
 658:	0e 94 5e 01 	call	0x2bc	; 0x2bc <lcd_init>
 65c:	08 95       	ret

0000065e <main>:
int main(void)
{
	
	int value;
	
	lcd_main_init();
 65e:	0e 94 21 03 	call	0x642	; 0x642 <lcd_main_init>
	
	ADC_Init();
 662:	0e 94 ab 02 	call	0x556	; 0x556 <ADC_Init>

/* init of a stepper motor pins */

void STEPPER_Init(){
	
	DDRB = 0x0F; /* Make PORTB lower pins as output */
 666:	8f e0       	ldi	r24, 0x0F	; 15
 668:	87 bb       	out	0x17, r24	; 23
	
	STEPPER_Init();
	
	DDRD = 0x01;		/* Make trigger pin as output */
 66a:	81 e0       	ldi	r24, 0x01	; 1
 66c:	81 bb       	out	0x11, r24	; 17
	PORTD = _BV(6);		/* Turn on Pull-up */
 66e:	80 e4       	ldi	r24, 0x40	; 64
 670:	82 bb       	out	0x12, r24	; 18
	
	sei();			/* Enable global interrupt */
 672:	78 94       	sei
	TIMSK = (1 << TOIE1);	/* Enable Timer1 overflow interrupts */
 674:	84 e0       	ldi	r24, 0x04	; 4
 676:	89 bf       	out	0x39, r24	; 57
	TCCR1A = 0;
 678:	1f bc       	out	0x2f, r1	; 47

	while (1) {
		
		value = ADC_Read(0);    /* Read ADC channel */
 67a:	80 e0       	ldi	r24, 0x00	; 0
 67c:	0e 94 b1 02 	call	0x562	; 0x562 <ADC_Read>
 680:	ec 01       	movw	r28, r24
		
		writeLCD(value);
 682:	0e 94 76 02 	call	0x4ec	; 0x4ec <writeLCD>
		
		rotate_motors(value,low_margin,high_margin);
 686:	40 e8       	ldi	r20, 0x80	; 128
 688:	52 e0       	ldi	r21, 0x02	; 2
 68a:	6e ef       	ldi	r22, 0xFE	; 254
 68c:	71 e0       	ldi	r23, 0x01	; 1
 68e:	ce 01       	movw	r24, r28
 690:	0e 94 4a 02 	call	0x494	; 0x494 <rotate_motors>
		
		mesure_distance();
 694:	0e 94 c4 02 	call	0x588	; 0x588 <mesure_distance>
		
		distance_to_string(distance);
 698:	60 91 82 00 	lds	r22, 0x0082	; 0x800082 <distance>
 69c:	70 91 83 00 	lds	r23, 0x0083	; 0x800083 <distance+0x1>
 6a0:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <distance+0x2>
 6a4:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <distance+0x3>
 6a8:	0e 94 01 03 	call	0x602	; 0x602 <distance_to_string>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 6ac:	8f ef       	ldi	r24, 0xFF	; 255
 6ae:	97 ed       	ldi	r25, 0xD7	; 215
 6b0:	01 97       	sbiw	r24, 0x01	; 1
 6b2:	f1 f7       	brne	.-4      	; 0x6b0 <main+0x52>
 6b4:	00 c0       	rjmp	.+0      	; 0x6b6 <main+0x58>
 6b6:	00 00       	nop
 6b8:	e0 cf       	rjmp	.-64     	; 0x67a <main+0x1c>

000006ba <__divsf3>:
 6ba:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__divsf3x>
 6be:	0c 94 23 04 	jmp	0x846	; 0x846 <__fp_round>
 6c2:	0e 94 1c 04 	call	0x838	; 0x838 <__fp_pscB>
 6c6:	58 f0       	brcs	.+22     	; 0x6de <__divsf3+0x24>
 6c8:	0e 94 15 04 	call	0x82a	; 0x82a <__fp_pscA>
 6cc:	40 f0       	brcs	.+16     	; 0x6de <__divsf3+0x24>
 6ce:	29 f4       	brne	.+10     	; 0x6da <__divsf3+0x20>
 6d0:	5f 3f       	cpi	r21, 0xFF	; 255
 6d2:	29 f0       	breq	.+10     	; 0x6de <__divsf3+0x24>
 6d4:	0c 94 0c 04 	jmp	0x818	; 0x818 <__fp_inf>
 6d8:	51 11       	cpse	r21, r1
 6da:	0c 94 57 04 	jmp	0x8ae	; 0x8ae <__fp_szero>
 6de:	0c 94 12 04 	jmp	0x824	; 0x824 <__fp_nan>

000006e2 <__divsf3x>:
 6e2:	0e 94 34 04 	call	0x868	; 0x868 <__fp_split3>
 6e6:	68 f3       	brcs	.-38     	; 0x6c2 <__divsf3+0x8>

000006e8 <__divsf3_pse>:
 6e8:	99 23       	and	r25, r25
 6ea:	b1 f3       	breq	.-20     	; 0x6d8 <__divsf3+0x1e>
 6ec:	55 23       	and	r21, r21
 6ee:	91 f3       	breq	.-28     	; 0x6d4 <__divsf3+0x1a>
 6f0:	95 1b       	sub	r25, r21
 6f2:	55 0b       	sbc	r21, r21
 6f4:	bb 27       	eor	r27, r27
 6f6:	aa 27       	eor	r26, r26
 6f8:	62 17       	cp	r22, r18
 6fa:	73 07       	cpc	r23, r19
 6fc:	84 07       	cpc	r24, r20
 6fe:	38 f0       	brcs	.+14     	; 0x70e <__divsf3_pse+0x26>
 700:	9f 5f       	subi	r25, 0xFF	; 255
 702:	5f 4f       	sbci	r21, 0xFF	; 255
 704:	22 0f       	add	r18, r18
 706:	33 1f       	adc	r19, r19
 708:	44 1f       	adc	r20, r20
 70a:	aa 1f       	adc	r26, r26
 70c:	a9 f3       	breq	.-22     	; 0x6f8 <__divsf3_pse+0x10>
 70e:	35 d0       	rcall	.+106    	; 0x77a <__divsf3_pse+0x92>
 710:	0e 2e       	mov	r0, r30
 712:	3a f0       	brmi	.+14     	; 0x722 <__divsf3_pse+0x3a>
 714:	e0 e8       	ldi	r30, 0x80	; 128
 716:	32 d0       	rcall	.+100    	; 0x77c <__divsf3_pse+0x94>
 718:	91 50       	subi	r25, 0x01	; 1
 71a:	50 40       	sbci	r21, 0x00	; 0
 71c:	e6 95       	lsr	r30
 71e:	00 1c       	adc	r0, r0
 720:	ca f7       	brpl	.-14     	; 0x714 <__divsf3_pse+0x2c>
 722:	2b d0       	rcall	.+86     	; 0x77a <__divsf3_pse+0x92>
 724:	fe 2f       	mov	r31, r30
 726:	29 d0       	rcall	.+82     	; 0x77a <__divsf3_pse+0x92>
 728:	66 0f       	add	r22, r22
 72a:	77 1f       	adc	r23, r23
 72c:	88 1f       	adc	r24, r24
 72e:	bb 1f       	adc	r27, r27
 730:	26 17       	cp	r18, r22
 732:	37 07       	cpc	r19, r23
 734:	48 07       	cpc	r20, r24
 736:	ab 07       	cpc	r26, r27
 738:	b0 e8       	ldi	r27, 0x80	; 128
 73a:	09 f0       	breq	.+2      	; 0x73e <__divsf3_pse+0x56>
 73c:	bb 0b       	sbc	r27, r27
 73e:	80 2d       	mov	r24, r0
 740:	bf 01       	movw	r22, r30
 742:	ff 27       	eor	r31, r31
 744:	93 58       	subi	r25, 0x83	; 131
 746:	5f 4f       	sbci	r21, 0xFF	; 255
 748:	3a f0       	brmi	.+14     	; 0x758 <__divsf3_pse+0x70>
 74a:	9e 3f       	cpi	r25, 0xFE	; 254
 74c:	51 05       	cpc	r21, r1
 74e:	78 f0       	brcs	.+30     	; 0x76e <__divsf3_pse+0x86>
 750:	0c 94 0c 04 	jmp	0x818	; 0x818 <__fp_inf>
 754:	0c 94 57 04 	jmp	0x8ae	; 0x8ae <__fp_szero>
 758:	5f 3f       	cpi	r21, 0xFF	; 255
 75a:	e4 f3       	brlt	.-8      	; 0x754 <__divsf3_pse+0x6c>
 75c:	98 3e       	cpi	r25, 0xE8	; 232
 75e:	d4 f3       	brlt	.-12     	; 0x754 <__divsf3_pse+0x6c>
 760:	86 95       	lsr	r24
 762:	77 95       	ror	r23
 764:	67 95       	ror	r22
 766:	b7 95       	ror	r27
 768:	f7 95       	ror	r31
 76a:	9f 5f       	subi	r25, 0xFF	; 255
 76c:	c9 f7       	brne	.-14     	; 0x760 <__divsf3_pse+0x78>
 76e:	88 0f       	add	r24, r24
 770:	91 1d       	adc	r25, r1
 772:	96 95       	lsr	r25
 774:	87 95       	ror	r24
 776:	97 f9       	bld	r25, 7
 778:	08 95       	ret
 77a:	e1 e0       	ldi	r30, 0x01	; 1
 77c:	66 0f       	add	r22, r22
 77e:	77 1f       	adc	r23, r23
 780:	88 1f       	adc	r24, r24
 782:	bb 1f       	adc	r27, r27
 784:	62 17       	cp	r22, r18
 786:	73 07       	cpc	r23, r19
 788:	84 07       	cpc	r24, r20
 78a:	ba 07       	cpc	r27, r26
 78c:	20 f0       	brcs	.+8      	; 0x796 <__divsf3_pse+0xae>
 78e:	62 1b       	sub	r22, r18
 790:	73 0b       	sbc	r23, r19
 792:	84 0b       	sbc	r24, r20
 794:	ba 0b       	sbc	r27, r26
 796:	ee 1f       	adc	r30, r30
 798:	88 f7       	brcc	.-30     	; 0x77c <__divsf3_pse+0x94>
 79a:	e0 95       	com	r30
 79c:	08 95       	ret

0000079e <__floatunsisf>:
 79e:	e8 94       	clt
 7a0:	09 c0       	rjmp	.+18     	; 0x7b4 <__floatsisf+0x12>

000007a2 <__floatsisf>:
 7a2:	97 fb       	bst	r25, 7
 7a4:	3e f4       	brtc	.+14     	; 0x7b4 <__floatsisf+0x12>
 7a6:	90 95       	com	r25
 7a8:	80 95       	com	r24
 7aa:	70 95       	com	r23
 7ac:	61 95       	neg	r22
 7ae:	7f 4f       	sbci	r23, 0xFF	; 255
 7b0:	8f 4f       	sbci	r24, 0xFF	; 255
 7b2:	9f 4f       	sbci	r25, 0xFF	; 255
 7b4:	99 23       	and	r25, r25
 7b6:	a9 f0       	breq	.+42     	; 0x7e2 <__floatsisf+0x40>
 7b8:	f9 2f       	mov	r31, r25
 7ba:	96 e9       	ldi	r25, 0x96	; 150
 7bc:	bb 27       	eor	r27, r27
 7be:	93 95       	inc	r25
 7c0:	f6 95       	lsr	r31
 7c2:	87 95       	ror	r24
 7c4:	77 95       	ror	r23
 7c6:	67 95       	ror	r22
 7c8:	b7 95       	ror	r27
 7ca:	f1 11       	cpse	r31, r1
 7cc:	f8 cf       	rjmp	.-16     	; 0x7be <__floatsisf+0x1c>
 7ce:	fa f4       	brpl	.+62     	; 0x80e <__floatsisf+0x6c>
 7d0:	bb 0f       	add	r27, r27
 7d2:	11 f4       	brne	.+4      	; 0x7d8 <__floatsisf+0x36>
 7d4:	60 ff       	sbrs	r22, 0
 7d6:	1b c0       	rjmp	.+54     	; 0x80e <__floatsisf+0x6c>
 7d8:	6f 5f       	subi	r22, 0xFF	; 255
 7da:	7f 4f       	sbci	r23, 0xFF	; 255
 7dc:	8f 4f       	sbci	r24, 0xFF	; 255
 7de:	9f 4f       	sbci	r25, 0xFF	; 255
 7e0:	16 c0       	rjmp	.+44     	; 0x80e <__floatsisf+0x6c>
 7e2:	88 23       	and	r24, r24
 7e4:	11 f0       	breq	.+4      	; 0x7ea <__floatsisf+0x48>
 7e6:	96 e9       	ldi	r25, 0x96	; 150
 7e8:	11 c0       	rjmp	.+34     	; 0x80c <__floatsisf+0x6a>
 7ea:	77 23       	and	r23, r23
 7ec:	21 f0       	breq	.+8      	; 0x7f6 <__floatsisf+0x54>
 7ee:	9e e8       	ldi	r25, 0x8E	; 142
 7f0:	87 2f       	mov	r24, r23
 7f2:	76 2f       	mov	r23, r22
 7f4:	05 c0       	rjmp	.+10     	; 0x800 <__floatsisf+0x5e>
 7f6:	66 23       	and	r22, r22
 7f8:	71 f0       	breq	.+28     	; 0x816 <__floatsisf+0x74>
 7fa:	96 e8       	ldi	r25, 0x86	; 134
 7fc:	86 2f       	mov	r24, r22
 7fe:	70 e0       	ldi	r23, 0x00	; 0
 800:	60 e0       	ldi	r22, 0x00	; 0
 802:	2a f0       	brmi	.+10     	; 0x80e <__floatsisf+0x6c>
 804:	9a 95       	dec	r25
 806:	66 0f       	add	r22, r22
 808:	77 1f       	adc	r23, r23
 80a:	88 1f       	adc	r24, r24
 80c:	da f7       	brpl	.-10     	; 0x804 <__floatsisf+0x62>
 80e:	88 0f       	add	r24, r24
 810:	96 95       	lsr	r25
 812:	87 95       	ror	r24
 814:	97 f9       	bld	r25, 7
 816:	08 95       	ret

00000818 <__fp_inf>:
 818:	97 f9       	bld	r25, 7
 81a:	9f 67       	ori	r25, 0x7F	; 127
 81c:	80 e8       	ldi	r24, 0x80	; 128
 81e:	70 e0       	ldi	r23, 0x00	; 0
 820:	60 e0       	ldi	r22, 0x00	; 0
 822:	08 95       	ret

00000824 <__fp_nan>:
 824:	9f ef       	ldi	r25, 0xFF	; 255
 826:	80 ec       	ldi	r24, 0xC0	; 192
 828:	08 95       	ret

0000082a <__fp_pscA>:
 82a:	00 24       	eor	r0, r0
 82c:	0a 94       	dec	r0
 82e:	16 16       	cp	r1, r22
 830:	17 06       	cpc	r1, r23
 832:	18 06       	cpc	r1, r24
 834:	09 06       	cpc	r0, r25
 836:	08 95       	ret

00000838 <__fp_pscB>:
 838:	00 24       	eor	r0, r0
 83a:	0a 94       	dec	r0
 83c:	12 16       	cp	r1, r18
 83e:	13 06       	cpc	r1, r19
 840:	14 06       	cpc	r1, r20
 842:	05 06       	cpc	r0, r21
 844:	08 95       	ret

00000846 <__fp_round>:
 846:	09 2e       	mov	r0, r25
 848:	03 94       	inc	r0
 84a:	00 0c       	add	r0, r0
 84c:	11 f4       	brne	.+4      	; 0x852 <__fp_round+0xc>
 84e:	88 23       	and	r24, r24
 850:	52 f0       	brmi	.+20     	; 0x866 <__fp_round+0x20>
 852:	bb 0f       	add	r27, r27
 854:	40 f4       	brcc	.+16     	; 0x866 <__fp_round+0x20>
 856:	bf 2b       	or	r27, r31
 858:	11 f4       	brne	.+4      	; 0x85e <__fp_round+0x18>
 85a:	60 ff       	sbrs	r22, 0
 85c:	04 c0       	rjmp	.+8      	; 0x866 <__fp_round+0x20>
 85e:	6f 5f       	subi	r22, 0xFF	; 255
 860:	7f 4f       	sbci	r23, 0xFF	; 255
 862:	8f 4f       	sbci	r24, 0xFF	; 255
 864:	9f 4f       	sbci	r25, 0xFF	; 255
 866:	08 95       	ret

00000868 <__fp_split3>:
 868:	57 fd       	sbrc	r21, 7
 86a:	90 58       	subi	r25, 0x80	; 128
 86c:	44 0f       	add	r20, r20
 86e:	55 1f       	adc	r21, r21
 870:	59 f0       	breq	.+22     	; 0x888 <__fp_splitA+0x10>
 872:	5f 3f       	cpi	r21, 0xFF	; 255
 874:	71 f0       	breq	.+28     	; 0x892 <__fp_splitA+0x1a>
 876:	47 95       	ror	r20

00000878 <__fp_splitA>:
 878:	88 0f       	add	r24, r24
 87a:	97 fb       	bst	r25, 7
 87c:	99 1f       	adc	r25, r25
 87e:	61 f0       	breq	.+24     	; 0x898 <__fp_splitA+0x20>
 880:	9f 3f       	cpi	r25, 0xFF	; 255
 882:	79 f0       	breq	.+30     	; 0x8a2 <__fp_splitA+0x2a>
 884:	87 95       	ror	r24
 886:	08 95       	ret
 888:	12 16       	cp	r1, r18
 88a:	13 06       	cpc	r1, r19
 88c:	14 06       	cpc	r1, r20
 88e:	55 1f       	adc	r21, r21
 890:	f2 cf       	rjmp	.-28     	; 0x876 <__fp_split3+0xe>
 892:	46 95       	lsr	r20
 894:	f1 df       	rcall	.-30     	; 0x878 <__fp_splitA>
 896:	08 c0       	rjmp	.+16     	; 0x8a8 <__fp_splitA+0x30>
 898:	16 16       	cp	r1, r22
 89a:	17 06       	cpc	r1, r23
 89c:	18 06       	cpc	r1, r24
 89e:	99 1f       	adc	r25, r25
 8a0:	f1 cf       	rjmp	.-30     	; 0x884 <__fp_splitA+0xc>
 8a2:	86 95       	lsr	r24
 8a4:	71 05       	cpc	r23, r1
 8a6:	61 05       	cpc	r22, r1
 8a8:	08 94       	sec
 8aa:	08 95       	ret

000008ac <__fp_zero>:
 8ac:	e8 94       	clt

000008ae <__fp_szero>:
 8ae:	bb 27       	eor	r27, r27
 8b0:	66 27       	eor	r22, r22
 8b2:	77 27       	eor	r23, r23
 8b4:	cb 01       	movw	r24, r22
 8b6:	97 f9       	bld	r25, 7
 8b8:	08 95       	ret

000008ba <dtostrf>:
 8ba:	ef 92       	push	r14
 8bc:	0f 93       	push	r16
 8be:	1f 93       	push	r17
 8c0:	cf 93       	push	r28
 8c2:	df 93       	push	r29
 8c4:	e8 01       	movw	r28, r16
 8c6:	47 fd       	sbrc	r20, 7
 8c8:	02 c0       	rjmp	.+4      	; 0x8ce <dtostrf+0x14>
 8ca:	34 e0       	ldi	r19, 0x04	; 4
 8cc:	01 c0       	rjmp	.+2      	; 0x8d0 <dtostrf+0x16>
 8ce:	34 e1       	ldi	r19, 0x14	; 20
 8d0:	04 2e       	mov	r0, r20
 8d2:	00 0c       	add	r0, r0
 8d4:	55 0b       	sbc	r21, r21
 8d6:	57 ff       	sbrs	r21, 7
 8d8:	03 c0       	rjmp	.+6      	; 0x8e0 <dtostrf+0x26>
 8da:	51 95       	neg	r21
 8dc:	41 95       	neg	r20
 8de:	51 09       	sbc	r21, r1
 8e0:	e3 2e       	mov	r14, r19
 8e2:	02 2f       	mov	r16, r18
 8e4:	24 2f       	mov	r18, r20
 8e6:	ae 01       	movw	r20, r28
 8e8:	0e 94 a2 04 	call	0x944	; 0x944 <dtoa_prf>
 8ec:	ce 01       	movw	r24, r28
 8ee:	df 91       	pop	r29
 8f0:	cf 91       	pop	r28
 8f2:	1f 91       	pop	r17
 8f4:	0f 91       	pop	r16
 8f6:	ef 90       	pop	r14
 8f8:	08 95       	ret

000008fa <__itoa_ncheck>:
 8fa:	bb 27       	eor	r27, r27
 8fc:	4a 30       	cpi	r20, 0x0A	; 10
 8fe:	31 f4       	brne	.+12     	; 0x90c <__itoa_ncheck+0x12>
 900:	99 23       	and	r25, r25
 902:	22 f4       	brpl	.+8      	; 0x90c <__itoa_ncheck+0x12>
 904:	bd e2       	ldi	r27, 0x2D	; 45
 906:	90 95       	com	r25
 908:	81 95       	neg	r24
 90a:	9f 4f       	sbci	r25, 0xFF	; 255
 90c:	0c 94 89 04 	jmp	0x912	; 0x912 <__utoa_common>

00000910 <__utoa_ncheck>:
 910:	bb 27       	eor	r27, r27

00000912 <__utoa_common>:
 912:	fb 01       	movw	r30, r22
 914:	55 27       	eor	r21, r21
 916:	aa 27       	eor	r26, r26
 918:	88 0f       	add	r24, r24
 91a:	99 1f       	adc	r25, r25
 91c:	aa 1f       	adc	r26, r26
 91e:	a4 17       	cp	r26, r20
 920:	10 f0       	brcs	.+4      	; 0x926 <__utoa_common+0x14>
 922:	a4 1b       	sub	r26, r20
 924:	83 95       	inc	r24
 926:	50 51       	subi	r21, 0x10	; 16
 928:	b9 f7       	brne	.-18     	; 0x918 <__utoa_common+0x6>
 92a:	a0 5d       	subi	r26, 0xD0	; 208
 92c:	aa 33       	cpi	r26, 0x3A	; 58
 92e:	08 f0       	brcs	.+2      	; 0x932 <__utoa_common+0x20>
 930:	a9 5d       	subi	r26, 0xD9	; 217
 932:	a1 93       	st	Z+, r26
 934:	00 97       	sbiw	r24, 0x00	; 0
 936:	79 f7       	brne	.-34     	; 0x916 <__utoa_common+0x4>
 938:	b1 11       	cpse	r27, r1
 93a:	b1 93       	st	Z+, r27
 93c:	11 92       	st	Z+, r1
 93e:	cb 01       	movw	r24, r22
 940:	0c 94 d4 06 	jmp	0xda8	; 0xda8 <strrev>

00000944 <dtoa_prf>:
 944:	a9 e0       	ldi	r26, 0x09	; 9
 946:	b0 e0       	ldi	r27, 0x00	; 0
 948:	e8 ea       	ldi	r30, 0xA8	; 168
 94a:	f4 e0       	ldi	r31, 0x04	; 4
 94c:	0c 94 ea 06 	jmp	0xdd4	; 0xdd4 <__prologue_saves__+0xc>
 950:	6a 01       	movw	r12, r20
 952:	12 2f       	mov	r17, r18
 954:	b0 2e       	mov	r11, r16
 956:	2b e3       	ldi	r18, 0x3B	; 59
 958:	20 17       	cp	r18, r16
 95a:	20 f0       	brcs	.+8      	; 0x964 <dtoa_prf+0x20>
 95c:	ff 24       	eor	r15, r15
 95e:	f3 94       	inc	r15
 960:	f0 0e       	add	r15, r16
 962:	02 c0       	rjmp	.+4      	; 0x968 <dtoa_prf+0x24>
 964:	2c e3       	ldi	r18, 0x3C	; 60
 966:	f2 2e       	mov	r15, r18
 968:	0f 2d       	mov	r16, r15
 96a:	27 e0       	ldi	r18, 0x07	; 7
 96c:	ae 01       	movw	r20, r28
 96e:	4f 5f       	subi	r20, 0xFF	; 255
 970:	5f 4f       	sbci	r21, 0xFF	; 255
 972:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <__ftoa_engine>
 976:	bc 01       	movw	r22, r24
 978:	49 81       	ldd	r20, Y+1	; 0x01
 97a:	84 2f       	mov	r24, r20
 97c:	89 70       	andi	r24, 0x09	; 9
 97e:	81 30       	cpi	r24, 0x01	; 1
 980:	31 f0       	breq	.+12     	; 0x98e <dtoa_prf+0x4a>
 982:	e1 fc       	sbrc	r14, 1
 984:	06 c0       	rjmp	.+12     	; 0x992 <dtoa_prf+0x4e>
 986:	e0 fe       	sbrs	r14, 0
 988:	06 c0       	rjmp	.+12     	; 0x996 <dtoa_prf+0x52>
 98a:	90 e2       	ldi	r25, 0x20	; 32
 98c:	05 c0       	rjmp	.+10     	; 0x998 <dtoa_prf+0x54>
 98e:	9d e2       	ldi	r25, 0x2D	; 45
 990:	03 c0       	rjmp	.+6      	; 0x998 <dtoa_prf+0x54>
 992:	9b e2       	ldi	r25, 0x2B	; 43
 994:	01 c0       	rjmp	.+2      	; 0x998 <dtoa_prf+0x54>
 996:	90 e0       	ldi	r25, 0x00	; 0
 998:	5e 2d       	mov	r21, r14
 99a:	50 71       	andi	r21, 0x10	; 16
 99c:	43 ff       	sbrs	r20, 3
 99e:	3c c0       	rjmp	.+120    	; 0xa18 <dtoa_prf+0xd4>
 9a0:	91 11       	cpse	r25, r1
 9a2:	02 c0       	rjmp	.+4      	; 0x9a8 <dtoa_prf+0x64>
 9a4:	83 e0       	ldi	r24, 0x03	; 3
 9a6:	01 c0       	rjmp	.+2      	; 0x9aa <dtoa_prf+0x66>
 9a8:	84 e0       	ldi	r24, 0x04	; 4
 9aa:	81 17       	cp	r24, r17
 9ac:	18 f4       	brcc	.+6      	; 0x9b4 <dtoa_prf+0x70>
 9ae:	21 2f       	mov	r18, r17
 9b0:	28 1b       	sub	r18, r24
 9b2:	01 c0       	rjmp	.+2      	; 0x9b6 <dtoa_prf+0x72>
 9b4:	20 e0       	ldi	r18, 0x00	; 0
 9b6:	51 11       	cpse	r21, r1
 9b8:	0b c0       	rjmp	.+22     	; 0x9d0 <dtoa_prf+0x8c>
 9ba:	f6 01       	movw	r30, r12
 9bc:	82 2f       	mov	r24, r18
 9be:	30 e2       	ldi	r19, 0x20	; 32
 9c0:	88 23       	and	r24, r24
 9c2:	19 f0       	breq	.+6      	; 0x9ca <dtoa_prf+0x86>
 9c4:	31 93       	st	Z+, r19
 9c6:	81 50       	subi	r24, 0x01	; 1
 9c8:	fb cf       	rjmp	.-10     	; 0x9c0 <dtoa_prf+0x7c>
 9ca:	c2 0e       	add	r12, r18
 9cc:	d1 1c       	adc	r13, r1
 9ce:	20 e0       	ldi	r18, 0x00	; 0
 9d0:	99 23       	and	r25, r25
 9d2:	29 f0       	breq	.+10     	; 0x9de <dtoa_prf+0x9a>
 9d4:	d6 01       	movw	r26, r12
 9d6:	9c 93       	st	X, r25
 9d8:	f6 01       	movw	r30, r12
 9da:	31 96       	adiw	r30, 0x01	; 1
 9dc:	6f 01       	movw	r12, r30
 9de:	c6 01       	movw	r24, r12
 9e0:	03 96       	adiw	r24, 0x03	; 3
 9e2:	e2 fe       	sbrs	r14, 2
 9e4:	0a c0       	rjmp	.+20     	; 0x9fa <dtoa_prf+0xb6>
 9e6:	3e e4       	ldi	r19, 0x4E	; 78
 9e8:	d6 01       	movw	r26, r12
 9ea:	3c 93       	st	X, r19
 9ec:	41 e4       	ldi	r20, 0x41	; 65
 9ee:	11 96       	adiw	r26, 0x01	; 1
 9f0:	4c 93       	st	X, r20
 9f2:	11 97       	sbiw	r26, 0x01	; 1
 9f4:	12 96       	adiw	r26, 0x02	; 2
 9f6:	3c 93       	st	X, r19
 9f8:	06 c0       	rjmp	.+12     	; 0xa06 <dtoa_prf+0xc2>
 9fa:	3e e6       	ldi	r19, 0x6E	; 110
 9fc:	f6 01       	movw	r30, r12
 9fe:	30 83       	st	Z, r19
 a00:	41 e6       	ldi	r20, 0x61	; 97
 a02:	41 83       	std	Z+1, r20	; 0x01
 a04:	32 83       	std	Z+2, r19	; 0x02
 a06:	fc 01       	movw	r30, r24
 a08:	32 2f       	mov	r19, r18
 a0a:	40 e2       	ldi	r20, 0x20	; 32
 a0c:	33 23       	and	r19, r19
 a0e:	09 f4       	brne	.+2      	; 0xa12 <dtoa_prf+0xce>
 a10:	42 c0       	rjmp	.+132    	; 0xa96 <dtoa_prf+0x152>
 a12:	41 93       	st	Z+, r20
 a14:	31 50       	subi	r19, 0x01	; 1
 a16:	fa cf       	rjmp	.-12     	; 0xa0c <dtoa_prf+0xc8>
 a18:	42 ff       	sbrs	r20, 2
 a1a:	44 c0       	rjmp	.+136    	; 0xaa4 <dtoa_prf+0x160>
 a1c:	91 11       	cpse	r25, r1
 a1e:	02 c0       	rjmp	.+4      	; 0xa24 <dtoa_prf+0xe0>
 a20:	83 e0       	ldi	r24, 0x03	; 3
 a22:	01 c0       	rjmp	.+2      	; 0xa26 <dtoa_prf+0xe2>
 a24:	84 e0       	ldi	r24, 0x04	; 4
 a26:	81 17       	cp	r24, r17
 a28:	18 f4       	brcc	.+6      	; 0xa30 <dtoa_prf+0xec>
 a2a:	21 2f       	mov	r18, r17
 a2c:	28 1b       	sub	r18, r24
 a2e:	01 c0       	rjmp	.+2      	; 0xa32 <dtoa_prf+0xee>
 a30:	20 e0       	ldi	r18, 0x00	; 0
 a32:	51 11       	cpse	r21, r1
 a34:	0b c0       	rjmp	.+22     	; 0xa4c <dtoa_prf+0x108>
 a36:	f6 01       	movw	r30, r12
 a38:	82 2f       	mov	r24, r18
 a3a:	30 e2       	ldi	r19, 0x20	; 32
 a3c:	88 23       	and	r24, r24
 a3e:	19 f0       	breq	.+6      	; 0xa46 <dtoa_prf+0x102>
 a40:	31 93       	st	Z+, r19
 a42:	81 50       	subi	r24, 0x01	; 1
 a44:	fb cf       	rjmp	.-10     	; 0xa3c <dtoa_prf+0xf8>
 a46:	c2 0e       	add	r12, r18
 a48:	d1 1c       	adc	r13, r1
 a4a:	20 e0       	ldi	r18, 0x00	; 0
 a4c:	99 23       	and	r25, r25
 a4e:	29 f0       	breq	.+10     	; 0xa5a <dtoa_prf+0x116>
 a50:	d6 01       	movw	r26, r12
 a52:	9c 93       	st	X, r25
 a54:	f6 01       	movw	r30, r12
 a56:	31 96       	adiw	r30, 0x01	; 1
 a58:	6f 01       	movw	r12, r30
 a5a:	c6 01       	movw	r24, r12
 a5c:	03 96       	adiw	r24, 0x03	; 3
 a5e:	e2 fe       	sbrs	r14, 2
 a60:	0b c0       	rjmp	.+22     	; 0xa78 <dtoa_prf+0x134>
 a62:	39 e4       	ldi	r19, 0x49	; 73
 a64:	d6 01       	movw	r26, r12
 a66:	3c 93       	st	X, r19
 a68:	3e e4       	ldi	r19, 0x4E	; 78
 a6a:	11 96       	adiw	r26, 0x01	; 1
 a6c:	3c 93       	st	X, r19
 a6e:	11 97       	sbiw	r26, 0x01	; 1
 a70:	36 e4       	ldi	r19, 0x46	; 70
 a72:	12 96       	adiw	r26, 0x02	; 2
 a74:	3c 93       	st	X, r19
 a76:	07 c0       	rjmp	.+14     	; 0xa86 <dtoa_prf+0x142>
 a78:	39 e6       	ldi	r19, 0x69	; 105
 a7a:	f6 01       	movw	r30, r12
 a7c:	30 83       	st	Z, r19
 a7e:	3e e6       	ldi	r19, 0x6E	; 110
 a80:	31 83       	std	Z+1, r19	; 0x01
 a82:	36 e6       	ldi	r19, 0x66	; 102
 a84:	32 83       	std	Z+2, r19	; 0x02
 a86:	fc 01       	movw	r30, r24
 a88:	32 2f       	mov	r19, r18
 a8a:	40 e2       	ldi	r20, 0x20	; 32
 a8c:	33 23       	and	r19, r19
 a8e:	19 f0       	breq	.+6      	; 0xa96 <dtoa_prf+0x152>
 a90:	41 93       	st	Z+, r20
 a92:	31 50       	subi	r19, 0x01	; 1
 a94:	fb cf       	rjmp	.-10     	; 0xa8c <dtoa_prf+0x148>
 a96:	fc 01       	movw	r30, r24
 a98:	e2 0f       	add	r30, r18
 a9a:	f1 1d       	adc	r31, r1
 a9c:	10 82       	st	Z, r1
 a9e:	8e ef       	ldi	r24, 0xFE	; 254
 aa0:	9f ef       	ldi	r25, 0xFF	; 255
 aa2:	a6 c0       	rjmp	.+332    	; 0xbf0 <dtoa_prf+0x2ac>
 aa4:	21 e0       	ldi	r18, 0x01	; 1
 aa6:	30 e0       	ldi	r19, 0x00	; 0
 aa8:	91 11       	cpse	r25, r1
 aaa:	02 c0       	rjmp	.+4      	; 0xab0 <dtoa_prf+0x16c>
 aac:	20 e0       	ldi	r18, 0x00	; 0
 aae:	30 e0       	ldi	r19, 0x00	; 0
 ab0:	16 16       	cp	r1, r22
 ab2:	17 06       	cpc	r1, r23
 ab4:	1c f4       	brge	.+6      	; 0xabc <dtoa_prf+0x178>
 ab6:	fb 01       	movw	r30, r22
 ab8:	31 96       	adiw	r30, 0x01	; 1
 aba:	02 c0       	rjmp	.+4      	; 0xac0 <dtoa_prf+0x17c>
 abc:	e1 e0       	ldi	r30, 0x01	; 1
 abe:	f0 e0       	ldi	r31, 0x00	; 0
 ac0:	2e 0f       	add	r18, r30
 ac2:	3f 1f       	adc	r19, r31
 ac4:	bb 20       	and	r11, r11
 ac6:	21 f0       	breq	.+8      	; 0xad0 <dtoa_prf+0x18c>
 ac8:	eb 2d       	mov	r30, r11
 aca:	f0 e0       	ldi	r31, 0x00	; 0
 acc:	31 96       	adiw	r30, 0x01	; 1
 ace:	02 c0       	rjmp	.+4      	; 0xad4 <dtoa_prf+0x190>
 ad0:	e0 e0       	ldi	r30, 0x00	; 0
 ad2:	f0 e0       	ldi	r31, 0x00	; 0
 ad4:	2e 0f       	add	r18, r30
 ad6:	3f 1f       	adc	r19, r31
 ad8:	e1 2f       	mov	r30, r17
 ada:	f0 e0       	ldi	r31, 0x00	; 0
 adc:	2e 17       	cp	r18, r30
 ade:	3f 07       	cpc	r19, r31
 ae0:	1c f4       	brge	.+6      	; 0xae8 <dtoa_prf+0x1a4>
 ae2:	12 1b       	sub	r17, r18
 ae4:	21 2f       	mov	r18, r17
 ae6:	01 c0       	rjmp	.+2      	; 0xaea <dtoa_prf+0x1a6>
 ae8:	20 e0       	ldi	r18, 0x00	; 0
 aea:	8e 2d       	mov	r24, r14
 aec:	88 71       	andi	r24, 0x18	; 24
 aee:	59 f4       	brne	.+22     	; 0xb06 <dtoa_prf+0x1c2>
 af0:	f6 01       	movw	r30, r12
 af2:	82 2f       	mov	r24, r18
 af4:	30 e2       	ldi	r19, 0x20	; 32
 af6:	88 23       	and	r24, r24
 af8:	19 f0       	breq	.+6      	; 0xb00 <dtoa_prf+0x1bc>
 afa:	31 93       	st	Z+, r19
 afc:	81 50       	subi	r24, 0x01	; 1
 afe:	fb cf       	rjmp	.-10     	; 0xaf6 <dtoa_prf+0x1b2>
 b00:	c2 0e       	add	r12, r18
 b02:	d1 1c       	adc	r13, r1
 b04:	20 e0       	ldi	r18, 0x00	; 0
 b06:	99 23       	and	r25, r25
 b08:	29 f0       	breq	.+10     	; 0xb14 <dtoa_prf+0x1d0>
 b0a:	d6 01       	movw	r26, r12
 b0c:	9c 93       	st	X, r25
 b0e:	f6 01       	movw	r30, r12
 b10:	31 96       	adiw	r30, 0x01	; 1
 b12:	6f 01       	movw	r12, r30
 b14:	51 11       	cpse	r21, r1
 b16:	0b c0       	rjmp	.+22     	; 0xb2e <dtoa_prf+0x1ea>
 b18:	f6 01       	movw	r30, r12
 b1a:	82 2f       	mov	r24, r18
 b1c:	90 e3       	ldi	r25, 0x30	; 48
 b1e:	88 23       	and	r24, r24
 b20:	19 f0       	breq	.+6      	; 0xb28 <dtoa_prf+0x1e4>
 b22:	91 93       	st	Z+, r25
 b24:	81 50       	subi	r24, 0x01	; 1
 b26:	fb cf       	rjmp	.-10     	; 0xb1e <dtoa_prf+0x1da>
 b28:	c2 0e       	add	r12, r18
 b2a:	d1 1c       	adc	r13, r1
 b2c:	20 e0       	ldi	r18, 0x00	; 0
 b2e:	0f 2d       	mov	r16, r15
 b30:	06 0f       	add	r16, r22
 b32:	9a 81       	ldd	r25, Y+2	; 0x02
 b34:	34 2f       	mov	r19, r20
 b36:	30 71       	andi	r19, 0x10	; 16
 b38:	44 ff       	sbrs	r20, 4
 b3a:	03 c0       	rjmp	.+6      	; 0xb42 <dtoa_prf+0x1fe>
 b3c:	91 33       	cpi	r25, 0x31	; 49
 b3e:	09 f4       	brne	.+2      	; 0xb42 <dtoa_prf+0x1fe>
 b40:	01 50       	subi	r16, 0x01	; 1
 b42:	10 16       	cp	r1, r16
 b44:	24 f4       	brge	.+8      	; 0xb4e <dtoa_prf+0x20a>
 b46:	09 30       	cpi	r16, 0x09	; 9
 b48:	18 f0       	brcs	.+6      	; 0xb50 <dtoa_prf+0x20c>
 b4a:	08 e0       	ldi	r16, 0x08	; 8
 b4c:	01 c0       	rjmp	.+2      	; 0xb50 <dtoa_prf+0x20c>
 b4e:	01 e0       	ldi	r16, 0x01	; 1
 b50:	ab 01       	movw	r20, r22
 b52:	77 ff       	sbrs	r23, 7
 b54:	02 c0       	rjmp	.+4      	; 0xb5a <dtoa_prf+0x216>
 b56:	40 e0       	ldi	r20, 0x00	; 0
 b58:	50 e0       	ldi	r21, 0x00	; 0
 b5a:	fb 01       	movw	r30, r22
 b5c:	e4 1b       	sub	r30, r20
 b5e:	f5 0b       	sbc	r31, r21
 b60:	a1 e0       	ldi	r26, 0x01	; 1
 b62:	b0 e0       	ldi	r27, 0x00	; 0
 b64:	ac 0f       	add	r26, r28
 b66:	bd 1f       	adc	r27, r29
 b68:	ea 0f       	add	r30, r26
 b6a:	fb 1f       	adc	r31, r27
 b6c:	8e e2       	ldi	r24, 0x2E	; 46
 b6e:	a8 2e       	mov	r10, r24
 b70:	4b 01       	movw	r8, r22
 b72:	80 1a       	sub	r8, r16
 b74:	91 08       	sbc	r9, r1
 b76:	0b 2d       	mov	r16, r11
 b78:	10 e0       	ldi	r17, 0x00	; 0
 b7a:	11 95       	neg	r17
 b7c:	01 95       	neg	r16
 b7e:	11 09       	sbc	r17, r1
 b80:	4f 3f       	cpi	r20, 0xFF	; 255
 b82:	bf ef       	ldi	r27, 0xFF	; 255
 b84:	5b 07       	cpc	r21, r27
 b86:	21 f4       	brne	.+8      	; 0xb90 <dtoa_prf+0x24c>
 b88:	d6 01       	movw	r26, r12
 b8a:	ac 92       	st	X, r10
 b8c:	11 96       	adiw	r26, 0x01	; 1
 b8e:	6d 01       	movw	r12, r26
 b90:	64 17       	cp	r22, r20
 b92:	75 07       	cpc	r23, r21
 b94:	2c f0       	brlt	.+10     	; 0xba0 <dtoa_prf+0x25c>
 b96:	84 16       	cp	r8, r20
 b98:	95 06       	cpc	r9, r21
 b9a:	14 f4       	brge	.+4      	; 0xba0 <dtoa_prf+0x25c>
 b9c:	81 81       	ldd	r24, Z+1	; 0x01
 b9e:	01 c0       	rjmp	.+2      	; 0xba2 <dtoa_prf+0x25e>
 ba0:	80 e3       	ldi	r24, 0x30	; 48
 ba2:	41 50       	subi	r20, 0x01	; 1
 ba4:	51 09       	sbc	r21, r1
 ba6:	31 96       	adiw	r30, 0x01	; 1
 ba8:	d6 01       	movw	r26, r12
 baa:	11 96       	adiw	r26, 0x01	; 1
 bac:	7d 01       	movw	r14, r26
 bae:	40 17       	cp	r20, r16
 bb0:	51 07       	cpc	r21, r17
 bb2:	24 f0       	brlt	.+8      	; 0xbbc <dtoa_prf+0x278>
 bb4:	d6 01       	movw	r26, r12
 bb6:	8c 93       	st	X, r24
 bb8:	67 01       	movw	r12, r14
 bba:	e2 cf       	rjmp	.-60     	; 0xb80 <dtoa_prf+0x23c>
 bbc:	64 17       	cp	r22, r20
 bbe:	75 07       	cpc	r23, r21
 bc0:	39 f4       	brne	.+14     	; 0xbd0 <dtoa_prf+0x28c>
 bc2:	96 33       	cpi	r25, 0x36	; 54
 bc4:	20 f4       	brcc	.+8      	; 0xbce <dtoa_prf+0x28a>
 bc6:	95 33       	cpi	r25, 0x35	; 53
 bc8:	19 f4       	brne	.+6      	; 0xbd0 <dtoa_prf+0x28c>
 bca:	31 11       	cpse	r19, r1
 bcc:	01 c0       	rjmp	.+2      	; 0xbd0 <dtoa_prf+0x28c>
 bce:	81 e3       	ldi	r24, 0x31	; 49
 bd0:	f6 01       	movw	r30, r12
 bd2:	80 83       	st	Z, r24
 bd4:	f7 01       	movw	r30, r14
 bd6:	82 2f       	mov	r24, r18
 bd8:	90 e2       	ldi	r25, 0x20	; 32
 bda:	88 23       	and	r24, r24
 bdc:	19 f0       	breq	.+6      	; 0xbe4 <dtoa_prf+0x2a0>
 bde:	91 93       	st	Z+, r25
 be0:	81 50       	subi	r24, 0x01	; 1
 be2:	fb cf       	rjmp	.-10     	; 0xbda <dtoa_prf+0x296>
 be4:	f7 01       	movw	r30, r14
 be6:	e2 0f       	add	r30, r18
 be8:	f1 1d       	adc	r31, r1
 bea:	10 82       	st	Z, r1
 bec:	80 e0       	ldi	r24, 0x00	; 0
 bee:	90 e0       	ldi	r25, 0x00	; 0
 bf0:	29 96       	adiw	r28, 0x09	; 9
 bf2:	ec e0       	ldi	r30, 0x0C	; 12
 bf4:	0c 94 06 07 	jmp	0xe0c	; 0xe0c <__epilogue_restores__+0xc>

00000bf8 <__ftoa_engine>:
 bf8:	28 30       	cpi	r18, 0x08	; 8
 bfa:	08 f0       	brcs	.+2      	; 0xbfe <__ftoa_engine+0x6>
 bfc:	27 e0       	ldi	r18, 0x07	; 7
 bfe:	33 27       	eor	r19, r19
 c00:	da 01       	movw	r26, r20
 c02:	99 0f       	add	r25, r25
 c04:	31 1d       	adc	r19, r1
 c06:	87 fd       	sbrc	r24, 7
 c08:	91 60       	ori	r25, 0x01	; 1
 c0a:	00 96       	adiw	r24, 0x00	; 0
 c0c:	61 05       	cpc	r22, r1
 c0e:	71 05       	cpc	r23, r1
 c10:	39 f4       	brne	.+14     	; 0xc20 <__ftoa_engine+0x28>
 c12:	32 60       	ori	r19, 0x02	; 2
 c14:	2e 5f       	subi	r18, 0xFE	; 254
 c16:	3d 93       	st	X+, r19
 c18:	30 e3       	ldi	r19, 0x30	; 48
 c1a:	2a 95       	dec	r18
 c1c:	e1 f7       	brne	.-8      	; 0xc16 <__ftoa_engine+0x1e>
 c1e:	08 95       	ret
 c20:	9f 3f       	cpi	r25, 0xFF	; 255
 c22:	30 f0       	brcs	.+12     	; 0xc30 <__ftoa_engine+0x38>
 c24:	80 38       	cpi	r24, 0x80	; 128
 c26:	71 05       	cpc	r23, r1
 c28:	61 05       	cpc	r22, r1
 c2a:	09 f0       	breq	.+2      	; 0xc2e <__ftoa_engine+0x36>
 c2c:	3c 5f       	subi	r19, 0xFC	; 252
 c2e:	3c 5f       	subi	r19, 0xFC	; 252
 c30:	3d 93       	st	X+, r19
 c32:	91 30       	cpi	r25, 0x01	; 1
 c34:	08 f0       	brcs	.+2      	; 0xc38 <__ftoa_engine+0x40>
 c36:	80 68       	ori	r24, 0x80	; 128
 c38:	91 1d       	adc	r25, r1
 c3a:	df 93       	push	r29
 c3c:	cf 93       	push	r28
 c3e:	1f 93       	push	r17
 c40:	0f 93       	push	r16
 c42:	ff 92       	push	r15
 c44:	ef 92       	push	r14
 c46:	19 2f       	mov	r17, r25
 c48:	98 7f       	andi	r25, 0xF8	; 248
 c4a:	96 95       	lsr	r25
 c4c:	e9 2f       	mov	r30, r25
 c4e:	96 95       	lsr	r25
 c50:	96 95       	lsr	r25
 c52:	e9 0f       	add	r30, r25
 c54:	ff 27       	eor	r31, r31
 c56:	e2 55       	subi	r30, 0x52	; 82
 c58:	ff 4f       	sbci	r31, 0xFF	; 255
 c5a:	99 27       	eor	r25, r25
 c5c:	33 27       	eor	r19, r19
 c5e:	ee 24       	eor	r14, r14
 c60:	ff 24       	eor	r15, r15
 c62:	a7 01       	movw	r20, r14
 c64:	e7 01       	movw	r28, r14
 c66:	05 90       	lpm	r0, Z+
 c68:	08 94       	sec
 c6a:	07 94       	ror	r0
 c6c:	28 f4       	brcc	.+10     	; 0xc78 <__ftoa_engine+0x80>
 c6e:	36 0f       	add	r19, r22
 c70:	e7 1e       	adc	r14, r23
 c72:	f8 1e       	adc	r15, r24
 c74:	49 1f       	adc	r20, r25
 c76:	51 1d       	adc	r21, r1
 c78:	66 0f       	add	r22, r22
 c7a:	77 1f       	adc	r23, r23
 c7c:	88 1f       	adc	r24, r24
 c7e:	99 1f       	adc	r25, r25
 c80:	06 94       	lsr	r0
 c82:	a1 f7       	brne	.-24     	; 0xc6c <__ftoa_engine+0x74>
 c84:	05 90       	lpm	r0, Z+
 c86:	07 94       	ror	r0
 c88:	28 f4       	brcc	.+10     	; 0xc94 <__ftoa_engine+0x9c>
 c8a:	e7 0e       	add	r14, r23
 c8c:	f8 1e       	adc	r15, r24
 c8e:	49 1f       	adc	r20, r25
 c90:	56 1f       	adc	r21, r22
 c92:	c1 1d       	adc	r28, r1
 c94:	77 0f       	add	r23, r23
 c96:	88 1f       	adc	r24, r24
 c98:	99 1f       	adc	r25, r25
 c9a:	66 1f       	adc	r22, r22
 c9c:	06 94       	lsr	r0
 c9e:	a1 f7       	brne	.-24     	; 0xc88 <__ftoa_engine+0x90>
 ca0:	05 90       	lpm	r0, Z+
 ca2:	07 94       	ror	r0
 ca4:	28 f4       	brcc	.+10     	; 0xcb0 <__ftoa_engine+0xb8>
 ca6:	f8 0e       	add	r15, r24
 ca8:	49 1f       	adc	r20, r25
 caa:	56 1f       	adc	r21, r22
 cac:	c7 1f       	adc	r28, r23
 cae:	d1 1d       	adc	r29, r1
 cb0:	88 0f       	add	r24, r24
 cb2:	99 1f       	adc	r25, r25
 cb4:	66 1f       	adc	r22, r22
 cb6:	77 1f       	adc	r23, r23
 cb8:	06 94       	lsr	r0
 cba:	a1 f7       	brne	.-24     	; 0xca4 <__ftoa_engine+0xac>
 cbc:	05 90       	lpm	r0, Z+
 cbe:	07 94       	ror	r0
 cc0:	20 f4       	brcc	.+8      	; 0xcca <__ftoa_engine+0xd2>
 cc2:	49 0f       	add	r20, r25
 cc4:	56 1f       	adc	r21, r22
 cc6:	c7 1f       	adc	r28, r23
 cc8:	d8 1f       	adc	r29, r24
 cca:	99 0f       	add	r25, r25
 ccc:	66 1f       	adc	r22, r22
 cce:	77 1f       	adc	r23, r23
 cd0:	88 1f       	adc	r24, r24
 cd2:	06 94       	lsr	r0
 cd4:	a9 f7       	brne	.-22     	; 0xcc0 <__ftoa_engine+0xc8>
 cd6:	84 91       	lpm	r24, Z
 cd8:	10 95       	com	r17
 cda:	17 70       	andi	r17, 0x07	; 7
 cdc:	41 f0       	breq	.+16     	; 0xcee <__ftoa_engine+0xf6>
 cde:	d6 95       	lsr	r29
 ce0:	c7 95       	ror	r28
 ce2:	57 95       	ror	r21
 ce4:	47 95       	ror	r20
 ce6:	f7 94       	ror	r15
 ce8:	e7 94       	ror	r14
 cea:	1a 95       	dec	r17
 cec:	c1 f7       	brne	.-16     	; 0xcde <__ftoa_engine+0xe6>
 cee:	e4 e5       	ldi	r30, 0x54	; 84
 cf0:	f0 e0       	ldi	r31, 0x00	; 0
 cf2:	68 94       	set
 cf4:	15 90       	lpm	r1, Z+
 cf6:	15 91       	lpm	r17, Z+
 cf8:	35 91       	lpm	r19, Z+
 cfa:	65 91       	lpm	r22, Z+
 cfc:	95 91       	lpm	r25, Z+
 cfe:	05 90       	lpm	r0, Z+
 d00:	7f e2       	ldi	r23, 0x2F	; 47
 d02:	73 95       	inc	r23
 d04:	e1 18       	sub	r14, r1
 d06:	f1 0a       	sbc	r15, r17
 d08:	43 0b       	sbc	r20, r19
 d0a:	56 0b       	sbc	r21, r22
 d0c:	c9 0b       	sbc	r28, r25
 d0e:	d0 09       	sbc	r29, r0
 d10:	c0 f7       	brcc	.-16     	; 0xd02 <__ftoa_engine+0x10a>
 d12:	e1 0c       	add	r14, r1
 d14:	f1 1e       	adc	r15, r17
 d16:	43 1f       	adc	r20, r19
 d18:	56 1f       	adc	r21, r22
 d1a:	c9 1f       	adc	r28, r25
 d1c:	d0 1d       	adc	r29, r0
 d1e:	7e f4       	brtc	.+30     	; 0xd3e <__ftoa_engine+0x146>
 d20:	70 33       	cpi	r23, 0x30	; 48
 d22:	11 f4       	brne	.+4      	; 0xd28 <__ftoa_engine+0x130>
 d24:	8a 95       	dec	r24
 d26:	e6 cf       	rjmp	.-52     	; 0xcf4 <__ftoa_engine+0xfc>
 d28:	e8 94       	clt
 d2a:	01 50       	subi	r16, 0x01	; 1
 d2c:	30 f0       	brcs	.+12     	; 0xd3a <__ftoa_engine+0x142>
 d2e:	08 0f       	add	r16, r24
 d30:	0a f4       	brpl	.+2      	; 0xd34 <__ftoa_engine+0x13c>
 d32:	00 27       	eor	r16, r16
 d34:	02 17       	cp	r16, r18
 d36:	08 f4       	brcc	.+2      	; 0xd3a <__ftoa_engine+0x142>
 d38:	20 2f       	mov	r18, r16
 d3a:	23 95       	inc	r18
 d3c:	02 2f       	mov	r16, r18
 d3e:	7a 33       	cpi	r23, 0x3A	; 58
 d40:	28 f0       	brcs	.+10     	; 0xd4c <__ftoa_engine+0x154>
 d42:	79 e3       	ldi	r23, 0x39	; 57
 d44:	7d 93       	st	X+, r23
 d46:	2a 95       	dec	r18
 d48:	e9 f7       	brne	.-6      	; 0xd44 <__ftoa_engine+0x14c>
 d4a:	10 c0       	rjmp	.+32     	; 0xd6c <__ftoa_engine+0x174>
 d4c:	7d 93       	st	X+, r23
 d4e:	2a 95       	dec	r18
 d50:	89 f6       	brne	.-94     	; 0xcf4 <__ftoa_engine+0xfc>
 d52:	06 94       	lsr	r0
 d54:	97 95       	ror	r25
 d56:	67 95       	ror	r22
 d58:	37 95       	ror	r19
 d5a:	17 95       	ror	r17
 d5c:	17 94       	ror	r1
 d5e:	e1 18       	sub	r14, r1
 d60:	f1 0a       	sbc	r15, r17
 d62:	43 0b       	sbc	r20, r19
 d64:	56 0b       	sbc	r21, r22
 d66:	c9 0b       	sbc	r28, r25
 d68:	d0 09       	sbc	r29, r0
 d6a:	98 f0       	brcs	.+38     	; 0xd92 <__ftoa_engine+0x19a>
 d6c:	23 95       	inc	r18
 d6e:	7e 91       	ld	r23, -X
 d70:	73 95       	inc	r23
 d72:	7a 33       	cpi	r23, 0x3A	; 58
 d74:	08 f0       	brcs	.+2      	; 0xd78 <__ftoa_engine+0x180>
 d76:	70 e3       	ldi	r23, 0x30	; 48
 d78:	7c 93       	st	X, r23
 d7a:	20 13       	cpse	r18, r16
 d7c:	b8 f7       	brcc	.-18     	; 0xd6c <__ftoa_engine+0x174>
 d7e:	7e 91       	ld	r23, -X
 d80:	70 61       	ori	r23, 0x10	; 16
 d82:	7d 93       	st	X+, r23
 d84:	30 f0       	brcs	.+12     	; 0xd92 <__ftoa_engine+0x19a>
 d86:	83 95       	inc	r24
 d88:	71 e3       	ldi	r23, 0x31	; 49
 d8a:	7d 93       	st	X+, r23
 d8c:	70 e3       	ldi	r23, 0x30	; 48
 d8e:	2a 95       	dec	r18
 d90:	e1 f7       	brne	.-8      	; 0xd8a <__ftoa_engine+0x192>
 d92:	11 24       	eor	r1, r1
 d94:	ef 90       	pop	r14
 d96:	ff 90       	pop	r15
 d98:	0f 91       	pop	r16
 d9a:	1f 91       	pop	r17
 d9c:	cf 91       	pop	r28
 d9e:	df 91       	pop	r29
 da0:	99 27       	eor	r25, r25
 da2:	87 fd       	sbrc	r24, 7
 da4:	90 95       	com	r25
 da6:	08 95       	ret

00000da8 <strrev>:
 da8:	dc 01       	movw	r26, r24
 daa:	fc 01       	movw	r30, r24
 dac:	67 2f       	mov	r22, r23
 dae:	71 91       	ld	r23, Z+
 db0:	77 23       	and	r23, r23
 db2:	e1 f7       	brne	.-8      	; 0xdac <strrev+0x4>
 db4:	32 97       	sbiw	r30, 0x02	; 2
 db6:	04 c0       	rjmp	.+8      	; 0xdc0 <strrev+0x18>
 db8:	7c 91       	ld	r23, X
 dba:	6d 93       	st	X+, r22
 dbc:	70 83       	st	Z, r23
 dbe:	62 91       	ld	r22, -Z
 dc0:	ae 17       	cp	r26, r30
 dc2:	bf 07       	cpc	r27, r31
 dc4:	c8 f3       	brcs	.-14     	; 0xdb8 <strrev+0x10>
 dc6:	08 95       	ret

00000dc8 <__prologue_saves__>:
 dc8:	2f 92       	push	r2
 dca:	3f 92       	push	r3
 dcc:	4f 92       	push	r4
 dce:	5f 92       	push	r5
 dd0:	6f 92       	push	r6
 dd2:	7f 92       	push	r7
 dd4:	8f 92       	push	r8
 dd6:	9f 92       	push	r9
 dd8:	af 92       	push	r10
 dda:	bf 92       	push	r11
 ddc:	cf 92       	push	r12
 dde:	df 92       	push	r13
 de0:	ef 92       	push	r14
 de2:	ff 92       	push	r15
 de4:	0f 93       	push	r16
 de6:	1f 93       	push	r17
 de8:	cf 93       	push	r28
 dea:	df 93       	push	r29
 dec:	cd b7       	in	r28, 0x3d	; 61
 dee:	de b7       	in	r29, 0x3e	; 62
 df0:	ca 1b       	sub	r28, r26
 df2:	db 0b       	sbc	r29, r27
 df4:	0f b6       	in	r0, 0x3f	; 63
 df6:	f8 94       	cli
 df8:	de bf       	out	0x3e, r29	; 62
 dfa:	0f be       	out	0x3f, r0	; 63
 dfc:	cd bf       	out	0x3d, r28	; 61
 dfe:	09 94       	ijmp

00000e00 <__epilogue_restores__>:
 e00:	2a 88       	ldd	r2, Y+18	; 0x12
 e02:	39 88       	ldd	r3, Y+17	; 0x11
 e04:	48 88       	ldd	r4, Y+16	; 0x10
 e06:	5f 84       	ldd	r5, Y+15	; 0x0f
 e08:	6e 84       	ldd	r6, Y+14	; 0x0e
 e0a:	7d 84       	ldd	r7, Y+13	; 0x0d
 e0c:	8c 84       	ldd	r8, Y+12	; 0x0c
 e0e:	9b 84       	ldd	r9, Y+11	; 0x0b
 e10:	aa 84       	ldd	r10, Y+10	; 0x0a
 e12:	b9 84       	ldd	r11, Y+9	; 0x09
 e14:	c8 84       	ldd	r12, Y+8	; 0x08
 e16:	df 80       	ldd	r13, Y+7	; 0x07
 e18:	ee 80       	ldd	r14, Y+6	; 0x06
 e1a:	fd 80       	ldd	r15, Y+5	; 0x05
 e1c:	0c 81       	ldd	r16, Y+4	; 0x04
 e1e:	1b 81       	ldd	r17, Y+3	; 0x03
 e20:	aa 81       	ldd	r26, Y+2	; 0x02
 e22:	b9 81       	ldd	r27, Y+1	; 0x01
 e24:	ce 0f       	add	r28, r30
 e26:	d1 1d       	adc	r29, r1
 e28:	0f b6       	in	r0, 0x3f	; 63
 e2a:	f8 94       	cli
 e2c:	de bf       	out	0x3e, r29	; 62
 e2e:	0f be       	out	0x3f, r0	; 63
 e30:	cd bf       	out	0x3d, r28	; 61
 e32:	ed 01       	movw	r28, r26
 e34:	08 95       	ret

00000e36 <_exit>:
 e36:	f8 94       	cli

00000e38 <__stop_program>:
 e38:	ff cf       	rjmp	.-2      	; 0xe38 <__stop_program>
